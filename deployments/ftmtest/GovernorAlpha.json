{
  "address": "0x98b5bBa8962f8D972593D817bA008D0cc5C9e945",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "timelock_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "comp_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "guardian_",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ProposalQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "__abdicate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "__acceptAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "__executeSetTimelockPendingAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "__queueSetTimelockPendingAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        }
      ],
      "name": "castVote",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteBySig",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "comp",
      "outputs": [
        {
          "internalType": "contract CompInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getActions",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "getReceipt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "support",
              "type": "bool"
            },
            {
              "internalType": "uint96",
              "name": "votes",
              "type": "uint96"
            }
          ],
          "internalType": "struct GovernorAlpha.Receipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "guardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "latestProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalMaxOperations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canceled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "queue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "quorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum GovernorAlpha.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "contract TimelockInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x65d7507185574d41814e9facf9b8ce9eee8ebebba20937b83cc27f77f50c4e77",
  "receipt": {
    "to": null,
    "from": "0xE5E82ae456c04Ad0879785B4f678A4Fcace12AAf",
    "contractAddress": "0x98b5bBa8962f8D972593D817bA008D0cc5C9e945",
    "transactionIndex": 0,
    "gasUsed": "3307709",
    "logsBloom": "0x
    "blockHash": "0x00000cb300004da7039894f6e61c471dd0620b262c697d27bb7dc04710ca3b2f",
    "transactionHash": "0x65d7507185574d41814e9facf9b8ce9eee8ebebba20937b83cc27f77f50c4e77",
    "logs": [],
    "blockNumber": 1200271,
    "cumulativeGasUsed": "3307709",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xB4e7714690b9DFac548149a711Fbc9129b36de79",
    "0x11FD8FC9FB835990258f4551130989AEd5071bEB",
    "0xE5E82ae456c04Ad0879785B4f678A4Fcace12AAf"
  ],
  "solcInputHash": "95f1be9db0de5a4836e781be7c4b4787",
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"timelock_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"comp_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"__abdicate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"__acceptAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"__executeSetTimelockPendingAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"__queueSetTimelockPendingAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"}],\"name\":\"castVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"comp\",\"outputs\":[{\"internalType\":\"contract CompInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getActions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getReceipt\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"internalType\":\"struct GovernorAlpha.Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"guardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"latestProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalMaxOperations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"queue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"quorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum GovernorAlpha.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"contract TimelockInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"proposalMaxOperations()\":{\"notice\":\"The maximum number of actions that can be included in a proposal\"},\"proposalThreshold()\":{\"notice\":\"The number of votes required in order for a voter to become a proposer\"},\"quorumVotes()\":{\"notice\":\"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\"},\"votingDelay()\":{\"notice\":\"The delay before voting on a proposal may take place, once proposed\"},\"votingPeriod()\":{\"notice\":\"The duration of voting on a proposal, in blocks\"}}}},\"settings\":{\"compilationTarget\":{\"src/governance/GovernorAlpha.sol\":\"GovernorAlpha\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2200},\"remappings\":[]},\"sources\":{\"src/governance/GovernorAlpha.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.5.16;\\npragma experimental ABIEncoderV2;\\n\\ncontract GovernorAlpha {\\n    /// @notice The name of this contract\\n    string public constant name = \\\"Bitgem Governor Alpha\\\";\\n\\n    /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\\n    function quorumVotes() public pure returns (uint256) {\\n        return 1200000e18;\\n    } // 1,200,000 = 4% of Comp\\n\\n    /// @notice The number of votes required in order for a voter to become a proposer\\n    function proposalThreshold() public pure returns (uint256) {\\n        return 300000e18;\\n    } // 300,000 = 1% of Comp\\n\\n    /// @notice The maximum number of actions that can be included in a proposal\\n    function proposalMaxOperations() public pure returns (uint256) {\\n        return 10;\\n    } // 10 actions\\n\\n    /// @notice The delay before voting on a proposal may take place, once proposed\\n    function votingDelay() public pure returns (uint256) {\\n        return 1;\\n    } // 1 block\\n\\n    /// @notice The duration of voting on a proposal, in blocks\\n    function votingPeriod() public pure returns (uint256) {\\n        return 17280;\\n    } // ~3 days in blocks (assuming 15s blocks)\\n\\n    /// @notice The address of the Bitgem Protocol Timelock\\n    TimelockInterface public timelock;\\n\\n    /// @notice The address of the Bitgem governance token\\n    CompInterface public comp;\\n\\n    /// @notice The address of the Governor Guardian\\n    address public guardian;\\n\\n    /// @notice The total number of proposals\\n    uint256 public proposalCount;\\n\\n    struct Proposal {\\n        // Unique id for looking up a proposal\\n        uint256 id;\\n        // Creator of the proposal\\n        address proposer;\\n        // The timestamp that the proposal will be available for execution, set once the vote succeeds\\n        uint256 eta;\\n        // the ordered list of target addresses for calls to be made\\n        address[] targets;\\n        // The ordered list of values (i.e. msg.value) to be passed to the calls to be made\\n        uint256[] values;\\n        // The ordered list of function signatures to be called\\n        string[] signatures;\\n        // The ordered list of calldata to be passed to each call\\n        bytes[] calldatas;\\n        // The block at which voting begins: holders must delegate their votes prior to this block\\n        uint256 startBlock;\\n        // The block at which voting ends: votes must be cast prior to this block\\n        uint256 endBlock;\\n        // Current number of votes in favor of this proposal\\n        uint256 forVotes;\\n        // Current number of votes in opposition to this proposal\\n        uint256 againstVotes;\\n        // Flag marking whether the proposal has been canceled\\n        bool canceled;\\n        // Flag marking whether the proposal has been executed\\n        bool executed;\\n        // Receipts of ballots for the entire set of voters\\n        mapping(address => Receipt) receipts;\\n    }\\n\\n    /// @notice Ballot receipt record for a voter\\n    struct Receipt {\\n        // Whether or not a vote has been cast\\n        bool hasVoted;\\n        // Whether or not the voter supports the proposal\\n        bool support;\\n        // The number of votes the voter had, which were cast\\n        uint96 votes;\\n    }\\n\\n    /// @notice Possible states that a proposal may be in\\n    enum ProposalState {\\n        Pending,\\n        Active,\\n        Canceled,\\n        Defeated,\\n        Succeeded,\\n        Queued,\\n        Expired,\\n        Executed\\n    }\\n\\n    /// @notice The official record of all proposals ever proposed\\n    mapping(uint256 => Proposal) public proposals;\\n\\n    /// @notice The latest proposal for each proposer\\n    mapping(address => uint256) public latestProposalIds;\\n\\n    /// @notice The EIP-712 typehash for the contract's domain\\n    bytes32 public constant DOMAIN_TYPEHASH =\\n        keccak256(\\n            \\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\"\\n        );\\n\\n    /// @notice The EIP-712 typehash for the ballot struct used by the contract\\n    bytes32 public constant BALLOT_TYPEHASH =\\n        keccak256(\\\"Ballot(uint256 proposalId,bool support)\\\");\\n\\n    /// @notice An event emitted when a new proposal is created\\n    event ProposalCreated(\\n        uint256 id,\\n        address proposer,\\n        address[] targets,\\n        uint256[] values,\\n        string[] signatures,\\n        bytes[] calldatas,\\n        uint256 startBlock,\\n        uint256 endBlock,\\n        string description\\n    );\\n\\n    /// @notice An event emitted when a vote has been cast on a proposal\\n    event VoteCast(\\n        address voter,\\n        uint256 proposalId,\\n        bool support,\\n        uint256 votes\\n    );\\n\\n    /// @notice An event emitted when a proposal has been canceled\\n    event ProposalCanceled(uint256 id);\\n\\n    /// @notice An event emitted when a proposal has been queued in the Timelock\\n    event ProposalQueued(uint256 id, uint256 eta);\\n\\n    /// @notice An event emitted when a proposal has been executed in the Timelock\\n    event ProposalExecuted(uint256 id);\\n\\n    constructor(\\n        address timelock_,\\n        address comp_,\\n        address guardian_\\n    ) public {\\n        timelock = TimelockInterface(timelock_);\\n        comp = CompInterface(comp_);\\n        guardian = guardian_;\\n    }\\n\\n    function propose(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        string[] memory signatures,\\n        bytes[] memory calldatas,\\n        string memory description\\n    ) public returns (uint256) {\\n        require(\\n            comp.getPriorVotes(msg.sender, sub256(block.number, 1)) >\\n                proposalThreshold(),\\n            \\\"GovernorAlpha:proposer votes below proposal threshold\\\"\\n        );\\n        require(\\n            targets.length == values.length &&\\n                targets.length == signatures.length &&\\n                targets.length == calldatas.length,\\n            \\\"GovernorAlpha:proposal function information arity mismatch\\\"\\n        );\\n        require(targets.length != 0, \\\"GovernorAlpha:must provide actions\\\");\\n        require(\\n            targets.length <= proposalMaxOperations(),\\n            \\\"GovernorAlpha:too many actions\\\"\\n        );\\n\\n        uint256 latestProposalId = latestProposalIds[msg.sender];\\n        if (latestProposalId != 0) {\\n            ProposalState proposersLatestProposalState = state(\\n                latestProposalId\\n            );\\n            require(\\n                proposersLatestProposalState != ProposalState.Active,\\n                \\\"GovernorAlpha: one live proposal per proposer, found an already active proposal\\\"\\n            );\\n            require(\\n                proposersLatestProposalState != ProposalState.Pending,\\n                \\\"GovernorAlpha::propose: one live proposal per proposer, found an already pending proposal\\\"\\n            );\\n        }\\n\\n        uint256 startBlock = add256(block.number, votingDelay());\\n        uint256 endBlock = add256(startBlock, votingPeriod());\\n\\n        proposalCount++;\\n        Proposal memory newProposal = Proposal({\\n            id: proposalCount,\\n            proposer: msg.sender,\\n            eta: 0,\\n            targets: targets,\\n            values: values,\\n            signatures: signatures,\\n            calldatas: calldatas,\\n            startBlock: startBlock,\\n            endBlock: endBlock,\\n            forVotes: 0,\\n            againstVotes: 0,\\n            canceled: false,\\n            executed: false\\n        });\\n\\n        proposals[newProposal.id] = newProposal;\\n        latestProposalIds[newProposal.proposer] = newProposal.id;\\n\\n        emit ProposalCreated(\\n            newProposal.id,\\n            msg.sender,\\n            targets,\\n            values,\\n            signatures,\\n            calldatas,\\n            startBlock,\\n            endBlock,\\n            description\\n        );\\n        return newProposal.id;\\n    }\\n\\n    function queue(uint256 proposalId) public {\\n        require(\\n            state(proposalId) == ProposalState.Succeeded,\\n            \\\"GovernorAlpha:proposal can only be queued if it is succeeded\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        uint256 eta = add256(block.timestamp, timelock.delay());\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            _queueOrRevert(\\n                proposal.targets[i],\\n                proposal.values[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                eta\\n            );\\n        }\\n        proposal.eta = eta;\\n        emit ProposalQueued(proposalId, eta);\\n    }\\n\\n    function _queueOrRevert(\\n        address target,\\n        uint256 value,\\n        string memory signature,\\n        bytes memory data,\\n        uint256 eta\\n    ) internal {\\n        require(\\n            !timelock.queuedTransactions(\\n                keccak256(abi.encode(target, value, signature, data, eta))\\n            ),\\n            \\\"GovernorAlpha:proposal action already queued at eta\\\"\\n        );\\n        timelock.queueTransaction(target, value, signature, data, eta);\\n    }\\n\\n    function execute(uint256 proposalId) public payable {\\n        require(\\n            state(proposalId) == ProposalState.Queued,\\n            \\\"GovernorAlpha:proposal can only be executed if it is queued\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        proposal.executed = true;\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            timelock.executeTransaction.value(proposal.values[i])(\\n                proposal.targets[i],\\n                proposal.values[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                proposal.eta\\n            );\\n        }\\n        emit ProposalExecuted(proposalId);\\n    }\\n\\n    function cancel(uint256 proposalId) public {\\n        ProposalState _state = state(proposalId);\\n        require(\\n            _state != ProposalState.Executed,\\n            \\\"GovernorAlpha::cancel: cannot cancel executed proposal\\\"\\n        );\\n\\n        Proposal storage proposal = proposals[proposalId];\\n        require(\\n            msg.sender == guardian ||\\n                comp.getPriorVotes(proposal.proposer, sub256(block.number, 1)) <\\n                proposalThreshold(),\\n            \\\"GovernorAlpha::cancel: proposer above threshold\\\"\\n        );\\n\\n        proposal.canceled = true;\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            timelock.cancelTransaction(\\n                proposal.targets[i],\\n                proposal.values[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                proposal.eta\\n            );\\n        }\\n\\n        emit ProposalCanceled(proposalId);\\n    }\\n\\n    function getActions(uint256 proposalId)\\n        public\\n        view\\n        returns (\\n            address[] memory targets,\\n            uint256[] memory values,\\n            string[] memory signatures,\\n            bytes[] memory calldatas\\n        )\\n    {\\n        Proposal storage p = proposals[proposalId];\\n        return (p.targets, p.values, p.signatures, p.calldatas);\\n    }\\n\\n    function getReceipt(uint256 proposalId, address voter)\\n        public\\n        view\\n        returns (Receipt memory)\\n    {\\n        return proposals[proposalId].receipts[voter];\\n    }\\n\\n    function state(uint256 proposalId) public view returns (ProposalState) {\\n        require(\\n            proposalCount >= proposalId && proposalId > 0,\\n            \\\"GovernorAlpha::state: invalid proposal id\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        if (proposal.canceled) {\\n            return ProposalState.Canceled;\\n        } else if (block.number <= proposal.startBlock) {\\n            return ProposalState.Pending;\\n        } else if (block.number <= proposal.endBlock) {\\n            return ProposalState.Active;\\n        } else if (\\n            proposal.forVotes <= proposal.againstVotes ||\\n            proposal.forVotes < quorumVotes()\\n        ) {\\n            return ProposalState.Defeated;\\n        } else if (proposal.eta == 0) {\\n            return ProposalState.Succeeded;\\n        } else if (proposal.executed) {\\n            return ProposalState.Executed;\\n        } else if (\\n            block.timestamp >= add256(proposal.eta, timelock.GRACE_PERIOD())\\n        ) {\\n            return ProposalState.Expired;\\n        } else {\\n            return ProposalState.Queued;\\n        }\\n    }\\n\\n    function castVote(uint256 proposalId, bool support) public {\\n        return _castVote(msg.sender, proposalId, support);\\n    }\\n\\n    function castVoteBySig(\\n        uint256 proposalId,\\n        bool support,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public {\\n        bytes32 domainSeparator = keccak256(\\n            abi.encode(\\n                DOMAIN_TYPEHASH,\\n                keccak256(bytes(name)),\\n                getChainId(),\\n                address(this)\\n            )\\n        );\\n        bytes32 structHash = keccak256(\\n            abi.encode(BALLOT_TYPEHASH, proposalId, support)\\n        );\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash)\\n        );\\n        address signatory = ecrecover(digest, v, r, s);\\n        require(\\n            signatory != address(0),\\n            \\\"GovernorAlpha::castVoteBySig: invalid signature\\\"\\n        );\\n        return _castVote(signatory, proposalId, support);\\n    }\\n\\n    function _castVote(\\n        address voter,\\n        uint256 proposalId,\\n        bool support\\n    ) internal {\\n        require(\\n            state(proposalId) == ProposalState.Active,\\n            \\\"GovernorAlpha::_castVote: voting is closed\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        Receipt storage receipt = proposal.receipts[voter];\\n        require(\\n            receipt.hasVoted == false,\\n            \\\"GovernorAlpha::_castVote: voter already voted\\\"\\n        );\\n        uint96 votes = comp.getPriorVotes(voter, proposal.startBlock);\\n\\n        if (support) {\\n            proposal.forVotes = add256(proposal.forVotes, votes);\\n        } else {\\n            proposal.againstVotes = add256(proposal.againstVotes, votes);\\n        }\\n\\n        receipt.hasVoted = true;\\n        receipt.support = support;\\n        receipt.votes = votes;\\n\\n        emit VoteCast(voter, proposalId, support, votes);\\n    }\\n\\n    function __acceptAdmin() public {\\n        require(\\n            msg.sender == guardian,\\n            \\\"GovernorAlpha::__acceptAdmin: sender must be gov guardian\\\"\\n        );\\n        timelock.acceptAdmin();\\n    }\\n\\n    function __abdicate() public {\\n        require(\\n            msg.sender == guardian,\\n            \\\"GovernorAlpha::__abdicate: sender must be gov guardian\\\"\\n        );\\n        guardian = address(0);\\n    }\\n\\n    function __queueSetTimelockPendingAdmin(\\n        address newPendingAdmin,\\n        uint256 eta\\n    ) public {\\n        require(\\n            msg.sender == guardian,\\n            \\\"GovernorAlpha::__queueSetTimelockPendingAdmin: sender must be gov guardian\\\"\\n        );\\n        timelock.queueTransaction(\\n            address(timelock),\\n            0,\\n            \\\"setPendingAdmin(address)\\\",\\n            abi.encode(newPendingAdmin),\\n            eta\\n        );\\n    }\\n\\n    function __executeSetTimelockPendingAdmin(\\n        address newPendingAdmin,\\n        uint256 eta\\n    ) public {\\n        require(\\n            msg.sender == guardian,\\n            \\\"GovernorAlpha::__executeSetTimelockPendingAdmin: sender must be gov guardian\\\"\\n        );\\n        timelock.executeTransaction(\\n            address(timelock),\\n            0,\\n            \\\"setPendingAdmin(address)\\\",\\n            abi.encode(newPendingAdmin),\\n            eta\\n        );\\n    }\\n\\n    function add256(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"addition overflow\\\");\\n        return c;\\n    }\\n\\n    function sub256(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"subtraction underflow\\\");\\n        return a - b;\\n    }\\n\\n    function getChainId() internal pure returns (uint256) {\\n        uint256 chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n        return chainId;\\n    }\\n}\\n\\ninterface TimelockInterface {\\n    function delay() external view returns (uint256);\\n\\n    function GRACE_PERIOD() external view returns (uint256);\\n\\n    function acceptAdmin() external;\\n\\n    function queuedTransactions(bytes32 hash) external view returns (bool);\\n\\n    function queueTransaction(\\n        address target,\\n        uint256 value,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint256 eta\\n    ) external returns (bytes32);\\n\\n    function cancelTransaction(\\n        address target,\\n        uint256 value,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint256 eta\\n    ) external;\\n\\n    function executeTransaction(\\n        address target,\\n        uint256 value,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint256 eta\\n    ) external payable returns (bytes memory);\\n}\\n\\ninterface CompInterface {\\n    function getPriorVotes(address account, uint256 blockNumber)\\n        external\\n        view\\n        returns (uint96);\\n}\\n\",\"keccak256\":\"0x0b997e6e88ba288294ce0ea1f580aee108f0037049de00ded68b9fdbe89b8daf\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003ae138038062003ae183398101604081905262000034916200008a565b600080546001600160a01b039485166001600160a01b0319918216179091556001805493851693821693909317909255600280549190931691161790556200010a565b80516200008481620000f0565b92915050565b600080600060608486031215620000a057600080fd5b6000620000ae868662000077565b9350506020620000c18682870162000077565b9250506040620000d48682870162000077565b9150509250925092565b60006001600160a01b03821662000084565b620000fb81620000de565b81146200010757600080fd5b50565b6139c7806200011a6000396000f3fe6080604052600436106101ac5760003560e01c8063452a9320116100ec578063d33219b41161008a578063ddf0b00911610064578063ddf0b00914610473578063deaaa7cc14610493578063e23a9a52146104a8578063fe0d94c1146104d5576101ac565b8063d33219b414610429578063da35c6641461043e578063da95691a14610453576101ac565b80637bdbe4d0116100c65780637bdbe4d0146103ca57806391500671146103df578063b58131b0146103ff578063b9a6196114610414576101ac565b8063452a9320146103735780634634c61f14610395578063760fbc13146103b5576101ac565b806320606b7011610159578063328dd98211610133578063328dd982146102e15780633932abb1146103115780633e4f49e61461032657806340e58ee514610353576101ac565b806320606b701461029757806321f43e42146102ac57806324bc1a64146102cc576101ac565b8063109d0af81161018a578063109d0af81461023357806315373e3d1461025557806317977c6114610277576101ac565b8063013cf08b146101b157806302a251a3146101ef57806306fdde0314610211575b600080fd5b3480156101bd57600080fd5b506101d16101cc366004612559565b6104e8565b6040516101e69998979695949392919061376d565b60405180910390f35b3480156101fb57600080fd5b50610204610541565b6040516101e6919061349a565b34801561021d57600080fd5b50610226610548565b6040516101e69190613556565b34801561023f57600080fd5b50610248610581565b6040516101e6919061353a565b34801561026157600080fd5b506102756102703660046125a7565b610590565b005b34801561028357600080fd5b5061020461029236600461239c565b61059f565b3480156102a357600080fd5b506102046105b1565b3480156102b857600080fd5b506102756102c73660046123c2565b6105c8565b3480156102d857600080fd5b506102046106af565b3480156102ed57600080fd5b506103016102fc366004612559565b6106bd565b6040516101e6949392919061344d565b34801561031d57600080fd5b5061020461094c565b34801561033257600080fd5b50610346610341366004612559565b610951565b6040516101e69190613548565b34801561035f57600080fd5b5061027561036e366004612559565b610aec565b34801561037f57600080fd5b50610388610d5a565b6040516101e691906132f7565b3480156103a157600080fd5b506102756103b03660046125d7565b610d69565b3480156103c157600080fd5b50610275610f06565b3480156103d657600080fd5b50610204610f5a565b3480156103eb57600080fd5b506102756103fa3660046123c2565b610f5f565b34801561040b57600080fd5b50610204611034565b34801561042057600080fd5b50610275611042565b34801561043557600080fd5b506102486110e0565b34801561044a57600080fd5b506102046110ef565b34801561045f57600080fd5b5061020461046e3660046123fc565b6110f5565b34801561047f57600080fd5b5061027561048e366004612559565b61151c565b34801561049f57600080fd5b5061020461179f565b3480156104b457600080fd5b506104c86104c3366004612577565b6117ab565b6040516101e691906136b7565b6102756104e3366004612559565b61181f565b6004602052600090815260409020805460018201546002830154600784015460088501546009860154600a870154600b9097015495966001600160a01b0390951695939492939192909160ff8082169161010090041689565b6143805b90565b6040518060400160405280601581526020017f42697467656d20476f7665726e6f7220416c706861000000000000000000000081525081565b6001546001600160a01b031681565b61059b3383836119e4565b5050565b60056020526000908152604090205481565b6040516105bd906132e1565b604051809103902081565b6002546001600160a01b031633146105fb5760405162461bcd60e51b81526004016105f290613587565b60405180910390fd5b600080546040516001600160a01b0390911691630825f38f918391906106259087906020016132f7565b604051602081830303815290604052856040518563ffffffff1660e01b81526004016106549493929190613320565b600060405180830381600087803b15801561066e57600080fd5b505af1158015610682573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106aa9190810190612524565b505050565b69fe1c215e8f838e00000090565b6060806060806000600460008781526020019081526020016000209050806003018160040182600501836006018380548060200260200160405190810160405280929190818152602001828054801561073f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610721575b505050505093508280548060200260200160405190810160405280929190818152602001828054801561079157602002820191906000526020600020905b81548152602001906001019080831161077d575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b828210156108645760008481526020908190208301805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156108505780601f1061082557610100808354040283529160200191610850565b820191906000526020600020905b81548152906001019060200180831161083357829003601f168201915b5050505050815260200190600101906107b9565b50505050915080805480602002602001604051908101604052809291908181526020016000905b828210156109365760008481526020908190208301805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156109225780601f106108f757610100808354040283529160200191610922565b820191906000526020600020905b81548152906001019060200180831161090557829003601f168201915b50505050508152602001906001019061088b565b5050505090509450945094509450509193509193565b600190565b600081600354101580156109655750600082115b6109815760405162461bcd60e51b81526004016105f290613597565b6000828152600460205260409020600b81015460ff16156109a6576002915050610ae7565b806007015443116109bb576000915050610ae7565b806008015443116109d0576001915050610ae7565b80600a015481600901541115806109f157506109ea6106af565b8160090154105b15610a00576003915050610ae7565b6002810154610a13576004915050610ae7565b600b810154610100900460ff1615610a2f576007915050610ae7565b6002810154600054604080517fc1a287e20000000000000000000000000000000000000000000000000000000081529051610ad193926001600160a01b03169163c1a287e2916004808301926020929190829003018186803b158015610a9457600080fd5b505afa158015610aa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610acc9190810190612506565b611be6565b4210610ae1576006915050610ae7565b60059150505b919050565b6000610af782610951565b90506007816007811115610b0757fe5b1415610b255760405162461bcd60e51b81526004016105f290613677565b60008281526004602052604090206002546001600160a01b0316331480610bf55750610b4f611034565b60018054838201546001600160a01b039182169263782d6fe19290911690610b78904390611c12565b6040518363ffffffff1660e01b8152600401610b9592919061336f565b60206040518083038186803b158015610bad57600080fd5b505afa158015610bc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610be5919081019061263f565b6bffffffffffffffffffffffff16105b610c115760405162461bcd60e51b81526004016105f290613627565b600b8101805460ff1916600117905560005b6003820154811015610d1d576000546003830180546001600160a01b039092169163591fcdfe919084908110610c5557fe5b6000918252602090912001546004850180546001600160a01b039092169185908110610c7d57fe5b9060005260206000200154856005018581548110610c9757fe5b90600052602060002001866006018681548110610cb057fe5b9060005260206000200187600201546040518663ffffffff1660e01b8152600401610cdf95949392919061340c565b600060405180830381600087803b158015610cf957600080fd5b505af1158015610d0d573d6000803e3d6000fd5b505060019092019150610c239050565b507f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c83604051610d4d919061349a565b60405180910390a1505050565b6002546001600160a01b031681565b6000604051610d77906132e1565b60408051918290038220828201909152601582527f42697467656d20476f7665726e6f7220416c70686100000000000000000000006020909201919091527f6cdb7656239a64901d008bdf9bc7bd9dba57d6edb29fd530185be55777d5f4ce610dde611c3a565b30604051602001610df294939291906134a8565b6040516020818303038152906040528051906020012090506000604051610e18906132ec565b604051908190038120610e3191899089906020016134dd565b60405160208183030381529060405280519060200120905060008282604051602001610e5e9291906132b0565b604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051610e9b9493929190613505565b6020604051602081039080840390855afa158015610ebd573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610ef05760405162461bcd60e51b81526004016105f290613667565b610efb818a8a6119e4565b505050505050505050565b6002546001600160a01b03163314610f305760405162461bcd60e51b81526004016105f2906136a7565b600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600a90565b6002546001600160a01b03163314610f895760405162461bcd60e51b81526004016105f2906135e7565b600080546040516001600160a01b0390911691633a66f90191839190610fb39087906020016132f7565b604051602081830303815290604052856040518563ffffffff1660e01b8152600401610fe29493929190613320565b602060405180830381600087803b158015610ffc57600080fd5b505af1158015611010573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106aa9190810190612506565b693f870857a3e0e380000090565b6002546001600160a01b0316331461106c5760405162461bcd60e51b81526004016105f290613567565b60008054604080517f0e18b68100000000000000000000000000000000000000000000000000000000815290516001600160a01b0390921692630e18b6819260048084019382900301818387803b1580156110c657600080fd5b505af11580156110da573d6000803e3d6000fd5b50505050565b6000546001600160a01b031681565b60035481565b60006110ff611034565b600180546001600160a01b03169063782d6fe1903390611120904390611c12565b6040518363ffffffff1660e01b815260040161113d929190613305565b60206040518083038186803b15801561115557600080fd5b505afa158015611169573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061118d919081019061263f565b6bffffffffffffffffffffffff16116111b85760405162461bcd60e51b81526004016105f290613577565b845186511480156111ca575083518651145b80156111d7575082518651145b6111f35760405162461bcd60e51b81526004016105f2906135f7565b85516112115760405162461bcd60e51b81526004016105f290613657565b611219610f5a565b865111156112395760405162461bcd60e51b81526004016105f290613647565b3360009081526005602052604090205480156112b657600061125a82610951565b9050600181600781111561126a57fe5b14156112885760405162461bcd60e51b81526004016105f2906135a7565b600081600781111561129657fe5b14156112b45760405162461bcd60e51b81526004016105f2906135d7565b505b60006112c443610acc61094c565b905060006112d482610acc610541565b60038054600101905590506112e7611db6565b604051806101a001604052806003548152602001336001600160a01b03168152602001600081526020018b81526020018a815260200189815260200188815260200184815260200183815260200160008152602001600081526020016000151581526020016000151581525090508060046000836000015181526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506040820151816002015560608201518160030190805190602001906113ca929190611e2b565b50608082015180516113e6916004840191602090910190611ea8565b5060a08201518051611402916005840191602090910190611eef565b5060c0820151805161141e916006840191602090910190611f48565b5060e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b0160006101000a81548160ff02191690831515021790555061018082015181600b0160016101000a81548160ff02191690831515021790555090505080600001516005600083602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055507f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08160000151338c8c8c8c89898e604051611504999897969594939291906136c5565b60405180910390a15193505050505b95945050505050565b600461152782610951565b600781111561153257fe5b1461154f5760405162461bcd60e51b81526004016105f290613617565b6000818152600460208181526040808420845482517f6a42b8f800000000000000000000000000000000000000000000000000000000815292519195946115bd9442946001600160a01b0390931693636a42b8f8938084019390829003018186803b158015610a9457600080fd5b905060005b60038301548110156117655761175d8360030182815481106115e057fe5b6000918252602090912001546004850180546001600160a01b03909216918490811061160857fe5b906000526020600020015485600501848154811061162257fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156116b05780601f10611685576101008083540402835291602001916116b0565b820191906000526020600020905b81548152906001019060200180831161169357829003601f168201915b50505050508660060185815481106116c457fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156117525780601f1061172757610100808354040283529160200191611752565b820191906000526020600020905b81548152906001019060200180831161173557829003601f168201915b505050505086611c3e565b6001016115c2565b50600282018190556040517f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda289290610d4d90859084906137f3565b6040516105bd906132ec565b6117b3611fa1565b5060008281526004602090815260408083206001600160a01b0385168452600c018252918290208251606081018452905460ff80821615158352610100820416151592820192909252620100009091046bffffffffffffffffffffffff16918101919091525b92915050565b600561182a82610951565b600781111561183557fe5b146118525760405162461bcd60e51b81526004016105f2906135b7565b6000818152600460205260408120600b8101805461ff001916610100179055905b60038201548110156119a8576000546004830180546001600160a01b0390921691630825f38f9190849081106118a557fe5b90600052602060002001548460030184815481106118bf57fe5b6000918252602090912001546004860180546001600160a01b0390921691869081106118e757fe5b906000526020600020015486600501868154811061190157fe5b9060005260206000200187600601878154811061191a57fe5b9060005260206000200188600201546040518763ffffffff1660e01b815260040161194995949392919061340c565b6000604051808303818588803b15801561196257600080fd5b505af1158015611976573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261199f9190810190612524565b50600101611873565b507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f826040516119d8919061349a565b60405180910390a15050565b60016119ef83610951565b60078111156119fa57fe5b14611a175760405162461bcd60e51b81526004016105f290613687565b60008281526004602090815260408083206001600160a01b0387168452600c8101909252909120805460ff1615611a605760405162461bcd60e51b81526004016105f2906135c7565b60015460078301546040517f782d6fe10000000000000000000000000000000000000000000000000000000081526000926001600160a01b03169163782d6fe191611aaf918a9160040161336f565b60206040518083038186803b158015611ac757600080fd5b505afa158015611adb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611aff919081019061263f565b90508315611b2d57611b238360090154826bffffffffffffffffffffffff16611be6565b6009840155611b4f565b611b4983600a0154826bffffffffffffffffffffffff16611be6565b600a8401555b8154600160ff199091161761ff00191661010085151502177fffffffffffffffffffffffffffffffffffff000000000000000000000000ffff16620100006bffffffffffffffffffffffff8316021782556040517f877856338e13f63d0c36822ff0ef736b80934cd90574a3a5bc9262c39d217c4690611bd690889088908890869061337d565b60405180910390a1505050505050565b600082820183811015611c0b5760405162461bcd60e51b81526004016105f290613607565b9392505050565b600082821115611c345760405162461bcd60e51b81526004016105f290613697565b50900390565b4690565b6000546040516001600160a01b039091169063f2b0653790611c6c90889088908890889088906020016133b2565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401611c9e919061349a565b60206040518083038186803b158015611cb657600080fd5b505afa158015611cca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611cee91908101906124e8565b15611d0b5760405162461bcd60e51b81526004016105f290613637565b6000546040517f3a66f9010000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690633a66f90190611d5c90889088908890889088906004016133b2565b602060405180830381600087803b158015611d7657600080fd5b505af1158015611d8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611dae9190810190612506565b505050505050565b604051806101a001604052806000815260200160006001600160a01b031681526020016000815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b828054828255906000526020600020908101928215611e98579160200282015b82811115611e9857825182547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03909116178255602090920191600190910190611e4b565b50611ea4929150611fc1565b5090565b828054828255906000526020600020908101928215611ee3579160200282015b82811115611ee3578251825591602001919060010190611ec8565b50611ea4929150611ffd565b828054828255906000526020600020908101928215611f3c579160200282015b82811115611f3c5782518051611f2c918491602090910190612017565b5091602001919060010190611f0f565b50611ea4929150612084565b828054828255906000526020600020908101928215611f95579160200282015b82811115611f955782518051611f85918491602090910190612017565b5091602001919060010190611f68565b50611ea49291506120a7565b604080516060810182526000808252602082018190529181019190915290565b61054591905b80821115611ea45780547fffffffffffffffffffffffff0000000000000000000000000000000000000000168155600101611fc7565b61054591905b80821115611ea45760008155600101612003565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061205857805160ff1916838001178555611ee3565b82800160010185558215611ee35791820182811115611ee3578251825591602001919060010190611ec8565b61054591905b80821115611ea457600061209e82826120ca565b5060010161208a565b61054591905b80821115611ea45760006120c182826120ca565b506001016120ad565b50805460018160011615610100020316600290046000825580601f106120f0575061210e565b601f01602090049060005260206000209081019061210e9190611ffd565b50565b80356118198161394c565b600082601f83011261212d57600080fd5b813561214061213b82613828565b613801565b9150818183526020840193506020810190508385602084028201111561216557600080fd5b60005b83811015612191578161217b8882612111565b8452506020928301929190910190600101612168565b5050505092915050565b600082601f8301126121ac57600080fd5b81356121ba61213b82613828565b81815260209384019390925082018360005b8381101561219157813586016121e288826122f1565b84525060209283019291909101906001016121cc565b600082601f83011261220957600080fd5b813561221761213b82613828565b81815260209384019390925082018360005b83811015612191578135860161223f88826122f1565b8452506020928301929190910190600101612229565b600082601f83011261226657600080fd5b813561227461213b82613828565b9150818183526020840193506020810190508385602084028201111561229957600080fd5b60005b8381101561219157816122af88826122db565b845250602092830192919091019060010161229c565b803561181981613960565b805161181981613960565b803561181981613969565b805161181981613969565b600082601f83011261230257600080fd5b813561231061213b82613849565b9150808252602083016020830185838301111561232c57600080fd5b612337838284613900565b50505092915050565b600082601f83011261235157600080fd5b815161235f61213b82613849565b9150808252602083016020830185838301111561237b57600080fd5b61233783828461390c565b803561181981613972565b80516118198161397b565b6000602082840312156123ae57600080fd5b60006123ba8484612111565b949350505050565b600080604083850312156123d557600080fd5b60006123e18585612111565b92505060206123f2858286016122db565b9150509250929050565b600080600080600060a0868803121561241457600080fd5b853567ffffffffffffffff81111561242b57600080fd5b6124378882890161211c565b955050602086013567ffffffffffffffff81111561245457600080fd5b61246088828901612255565b945050604086013567ffffffffffffffff81111561247d57600080fd5b612489888289016121f8565b935050606086013567ffffffffffffffff8111156124a657600080fd5b6124b28882890161219b565b925050608086013567ffffffffffffffff8111156124cf57600080fd5b6124db888289016122f1565b9150509295509295909350565b6000602082840312156124fa57600080fd5b60006123ba84846122d0565b60006020828403121561251857600080fd5b60006123ba84846122e6565b60006020828403121561253657600080fd5b815167ffffffffffffffff81111561254d57600080fd5b6123ba84828501612340565b60006020828403121561256b57600080fd5b60006123ba84846122db565b6000806040838503121561258a57600080fd5b600061259685856122db565b92505060206123f285828601612111565b600080604083850312156125ba57600080fd5b60006125c685856122db565b92505060206123f2858286016122c5565b600080600080600060a086880312156125ef57600080fd5b60006125fb88886122db565b955050602061260c888289016122c5565b945050604061261d88828901612386565b935050606061262e888289016122db565b92505060806124db888289016122db565b60006020828403121561265157600080fd5b60006123ba8484612391565b60006126698383612698565b505060200190565b6000611c0b838361283a565b60006126698383612820565b612692816138cd565b82525050565b61269281613890565b60006126ac82613883565b6126b68185613887565b93506126c183613871565b8060005b838110156126ef5781516126d9888261265d565b97506126e483613871565b9250506001016126c5565b509495945050505050565b600061270582613883565b61270f8185613887565b93508360208202850161272185613871565b8060005b8581101561275b578484038952815161273e8582612671565b945061274983613871565b60209a909a0199925050600101612725565b5091979650505050505050565b600061277382613883565b61277d8185613887565b93508360208202850161278f85613871565b8060005b8581101561275b57848403895281516127ac8582612671565b94506127b783613871565b60209a909a0199925050600101612793565b60006127d482613883565b6127de8185613887565b93506127e983613871565b8060005b838110156126ef578151612801888261267d565b975061280c83613871565b9250506001016127ed565b6126928161389b565b61269281610545565b61269261283582610545565b610545565b600061284582613883565b61284f8185613887565b935061285f81856020860161390c565b61286881613938565b9093019392505050565b60008154600181166000811461288f57600181146128b5576128f4565b607f60028304166128a08187613887565b60ff19841681529550506020850192506128f4565b600282046128c38187613887565b95506128ce85613877565b60005b828110156128ed578154888201526001909101906020016128d1565b8701945050505b505092915050565b612692816138d4565b612692816138df565b612692816138ea565b6000612924603983613887565b7f476f7665726e6f72416c7068613a3a5f5f61636365707441646d696e3a20736581527f6e646572206d75737420626520676f7620677561726469616e00000000000000602082015260400192915050565b6000612983600283610ae7565b7f1901000000000000000000000000000000000000000000000000000000000000815260020192915050565b60006129bc603583613887565b7f476f7665726e6f72416c7068613a70726f706f73657220766f7465732062656c81527f6f772070726f706f73616c207468726573686f6c640000000000000000000000602082015260400192915050565b6000612a1b604c83613887565b7f476f7665726e6f72416c7068613a3a5f5f6578656375746553657454696d656c81527f6f636b50656e64696e6741646d696e3a2073656e646572206d7573742062652060208201527f676f7620677561726469616e0000000000000000000000000000000000000000604082015260600192915050565b6000612aa0601883613887565b7f73657450656e64696e6741646d696e2861646472657373290000000000000000815260200192915050565b6000612ad9602983613887565b7f476f7665726e6f72416c7068613a3a73746174653a20696e76616c696420707281527f6f706f73616c2069640000000000000000000000000000000000000000000000602082015260400192915050565b6000612b38604f83613887565b7f476f7665726e6f72416c7068613a206f6e65206c6976652070726f706f73616c81527f207065722070726f706f7365722c20666f756e6420616e20616c72656164792060208201527f6163746976652070726f706f73616c0000000000000000000000000000000000604082015260600192915050565b6000612bbd603b83613887565b7f476f7665726e6f72416c7068613a70726f706f73616c2063616e206f6e6c792081527f6265206578656375746564206966206974206973207175657565640000000000602082015260400192915050565b6000612c1c602d83613887565b7f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f7465722081527f616c726561647920766f74656400000000000000000000000000000000000000602082015260400192915050565b6000612c7b605983613887565b7f476f7665726e6f72416c7068613a3a70726f706f73653a206f6e65206c69766581527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60208201527f20616c72656164792070656e64696e672070726f706f73616c00000000000000604082015260600192915050565b6000612d00604a83613887565b7f476f7665726e6f72416c7068613a3a5f5f717565756553657454696d656c6f6381527f6b50656e64696e6741646d696e3a2073656e646572206d75737420626520676f60208201527f7620677561726469616e00000000000000000000000000000000000000000000604082015260600192915050565b6000612d85603a83613887565b7f476f7665726e6f72416c7068613a70726f706f73616c2066756e6374696f6e2081527f696e666f726d6174696f6e206172697479206d69736d61746368000000000000602082015260400192915050565b6000612de4601183613887565b7f6164646974696f6e206f766572666c6f77000000000000000000000000000000815260200192915050565b6000612e1d604383610ae7565b7f454950373132446f6d61696e28737472696e67206e616d652c75696e7432353681527f20636861696e49642c6164647265737320766572696679696e67436f6e74726160208201527f6374290000000000000000000000000000000000000000000000000000000000604082015260430192915050565b6000612ea2603c83613887565b7f476f7665726e6f72416c7068613a70726f706f73616c2063616e206f6e6c792081527f6265207175657565642069662069742069732073756363656564656400000000602082015260400192915050565b6000612f01602783610ae7565b7f42616c6c6f742875696e743235362070726f706f73616c49642c626f6f6c207381527f7570706f72742900000000000000000000000000000000000000000000000000602082015260270192915050565b6000612f60602f83613887565b7f476f7665726e6f72416c7068613a3a63616e63656c3a2070726f706f7365722081527f61626f7665207468726573686f6c640000000000000000000000000000000000602082015260400192915050565b6000612fbf603383613887565b7f476f7665726e6f72416c7068613a70726f706f73616c20616374696f6e20616c81527f7265616479207175657565642061742065746100000000000000000000000000602082015260400192915050565b600061301e601e83613887565b7f476f7665726e6f72416c7068613a746f6f206d616e7920616374696f6e730000815260200192915050565b6000613057602283613887565b7f476f7665726e6f72416c7068613a6d7573742070726f7669646520616374696f81527f6e73000000000000000000000000000000000000000000000000000000000000602082015260400192915050565b60006130b6602f83613887565b7f476f7665726e6f72416c7068613a3a63617374566f746542795369673a20696e81527f76616c6964207369676e61747572650000000000000000000000000000000000602082015260400192915050565b6000613115603683613887565b7f476f7665726e6f72416c7068613a3a63616e63656c3a2063616e6e6f7420636181527f6e63656c2065786563757465642070726f706f73616c00000000000000000000602082015260400192915050565b6000613174602a83613887565b7f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f74696e6781527f20697320636c6f73656400000000000000000000000000000000000000000000602082015260400192915050565b60006131d3601583613887565b7f7375627472616374696f6e20756e646572666c6f770000000000000000000000815260200192915050565b600061320c603683613887565b7f476f7665726e6f72416c7068613a3a5f5f61626469636174653a2073656e646581527f72206d75737420626520676f7620677561726469616e00000000000000000000602082015260400192915050565b8051606083019061326f8482612817565b5060208201516132826020850182612817565b5060408201516110da60408501826132a7565b612692816138b6565b612692816138f5565b612692816138bc565b60006132bb82612976565b91506132c78285612829565b6020820191506132d78284612829565b5060200192915050565b600061181982612e10565b600061181982612ef4565b602081016118198284612698565b604081016133138285612689565b611c0b6020830184612820565b60a0810161332e8287612698565b61333b602083018661290e565b818103604083015261334c81612a93565b90508181036060830152613360818561283a565b90506115136080830184612820565b604081016133138285612698565b6080810161338b8287612698565b6133986020830186612820565b6133a56040830185612817565b611513606083018461329e565b60a081016133c08288612698565b6133cd6020830187612820565b81810360408301526133df818661283a565b905081810360608301526133f3818561283a565b90506134026080830184612820565b9695505050505050565b60a0810161341a8288612698565b6134276020830187612820565b81810360408301526134398186612872565b905081810360608301526133f38185612872565b6080808252810161345e81876126a1565b9050818103602083015261347281866127c9565b905081810360408301526134868185612768565b9050818103606083015261340281846126fa565b602081016118198284612820565b608081016134b68287612820565b6134c36020830186612820565b6134d06040830185612820565b6115136060830184612698565b606081016134eb8286612820565b6134f86020830185612820565b6123ba6040830184612817565b608081016135138287612820565b6135206020830186613295565b61352d6040830185612820565b6115136060830184612820565b6020810161181982846128fc565b602081016118198284612905565b60208082528101611c0b818461283a565b6020808252810161181981612917565b60208082528101611819816129af565b6020808252810161181981612a0e565b6020808252810161181981612acc565b6020808252810161181981612b2b565b6020808252810161181981612bb0565b6020808252810161181981612c0f565b6020808252810161181981612c6e565b6020808252810161181981612cf3565b6020808252810161181981612d78565b6020808252810161181981612dd7565b6020808252810161181981612e95565b6020808252810161181981612f53565b6020808252810161181981612fb2565b6020808252810161181981613011565b602080825281016118198161304a565b60208082528101611819816130a9565b6020808252810161181981613108565b6020808252810161181981613167565b60208082528101611819816131c6565b60208082528101611819816131ff565b60608101611819828461325e565b61012081016136d4828c612820565b6136e1602083018b612689565b81810360408301526136f3818a6126a1565b9050818103606083015261370781896127c9565b9050818103608083015261371b8188612768565b905081810360a083015261372f81876126fa565b905061373e60c0830186612820565b61374b60e0830185612820565b81810361010083015261375e818461283a565b9b9a5050505050505050505050565b610120810161377c828c612820565b613789602083018b612698565b613796604083018a612820565b6137a36060830189612820565b6137b06080830188612820565b6137bd60a0830187612820565b6137ca60c0830186612820565b6137d760e0830185612817565b6137e5610100830184612817565b9a9950505050505050505050565b604081016133138285612820565b60405181810167ffffffffffffffff8111828210171561382057600080fd5b604052919050565b600067ffffffffffffffff82111561383f57600080fd5b5060209081020190565b600067ffffffffffffffff82111561386057600080fd5b506020601f91909101601f19160190565b60200190565b60009081526020902090565b5190565b90815260200190565b6000611819826138aa565b151590565b80610ae781613942565b6001600160a01b031690565b60ff1690565b6bffffffffffffffffffffffff1690565b6000611819825b600061181982613890565b6000611819826138a0565b600061181982610545565b6000611819826138bc565b82818337506000910152565b60005b8381101561392757818101518382015260200161390f565b838111156110da5750506000910152565b601f01601f191690565b6008811061210e57fe5b61395581613890565b811461210e57600080fd5b6139558161389b565b61395581610545565b613955816138b6565b613955816138bc56fea365627a7a7231582016cf7ebe4caf7bd27f5a445c3700804b15160c4271d9fb150c286c6c9b8e1a946c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x6080604052600436106101ac5760003560e01c8063452a9320116100ec578063d33219b41161008a578063ddf0b00911610064578063ddf0b00914610473578063deaaa7cc14610493578063e23a9a52146104a8578063fe0d94c1146104d5576101ac565b8063d33219b414610429578063da35c6641461043e578063da95691a14610453576101ac565b80637bdbe4d0116100c65780637bdbe4d0146103ca57806391500671146103df578063b58131b0146103ff578063b9a6196114610414576101ac565b8063452a9320146103735780634634c61f14610395578063760fbc13146103b5576101ac565b806320606b7011610159578063328dd98211610133578063328dd982146102e15780633932abb1146103115780633e4f49e61461032657806340e58ee514610353576101ac565b806320606b701461029757806321f43e42146102ac57806324bc1a64146102cc576101ac565b8063109d0af81161018a578063109d0af81461023357806315373e3d1461025557806317977c6114610277576101ac565b8063013cf08b146101b157806302a251a3146101ef57806306fdde0314610211575b600080fd5b3480156101bd57600080fd5b506101d16101cc366004612559565b6104e8565b6040516101e69998979695949392919061376d565b60405180910390f35b3480156101fb57600080fd5b50610204610541565b6040516101e6919061349a565b34801561021d57600080fd5b50610226610548565b6040516101e69190613556565b34801561023f57600080fd5b50610248610581565b6040516101e6919061353a565b34801561026157600080fd5b506102756102703660046125a7565b610590565b005b34801561028357600080fd5b5061020461029236600461239c565b61059f565b3480156102a357600080fd5b506102046105b1565b3480156102b857600080fd5b506102756102c73660046123c2565b6105c8565b3480156102d857600080fd5b506102046106af565b3480156102ed57600080fd5b506103016102fc366004612559565b6106bd565b6040516101e6949392919061344d565b34801561031d57600080fd5b5061020461094c565b34801561033257600080fd5b50610346610341366004612559565b610951565b6040516101e69190613548565b34801561035f57600080fd5b5061027561036e366004612559565b610aec565b34801561037f57600080fd5b50610388610d5a565b6040516101e691906132f7565b3480156103a157600080fd5b506102756103b03660046125d7565b610d69565b3480156103c157600080fd5b50610275610f06565b3480156103d657600080fd5b50610204610f5a565b3480156103eb57600080fd5b506102756103fa3660046123c2565b610f5f565b34801561040b57600080fd5b50610204611034565b34801561042057600080fd5b50610275611042565b34801561043557600080fd5b506102486110e0565b34801561044a57600080fd5b506102046110ef565b34801561045f57600080fd5b5061020461046e3660046123fc565b6110f5565b34801561047f57600080fd5b5061027561048e366004612559565b61151c565b34801561049f57600080fd5b5061020461179f565b3480156104b457600080fd5b506104c86104c3366004612577565b6117ab565b6040516101e691906136b7565b6102756104e3366004612559565b61181f565b6004602052600090815260409020805460018201546002830154600784015460088501546009860154600a870154600b9097015495966001600160a01b0390951695939492939192909160ff8082169161010090041689565b6143805b90565b6040518060400160405280601581526020017f42697467656d20476f7665726e6f7220416c706861000000000000000000000081525081565b6001546001600160a01b031681565b61059b3383836119e4565b5050565b60056020526000908152604090205481565b6040516105bd906132e1565b604051809103902081565b6002546001600160a01b031633146105fb5760405162461bcd60e51b81526004016105f290613587565b60405180910390fd5b600080546040516001600160a01b0390911691630825f38f918391906106259087906020016132f7565b604051602081830303815290604052856040518563ffffffff1660e01b81526004016106549493929190613320565b600060405180830381600087803b15801561066e57600080fd5b505af1158015610682573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106aa9190810190612524565b505050565b69fe1c215e8f838e00000090565b6060806060806000600460008781526020019081526020016000209050806003018160040182600501836006018380548060200260200160405190810160405280929190818152602001828054801561073f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610721575b505050505093508280548060200260200160405190810160405280929190818152602001828054801561079157602002820191906000526020600020905b81548152602001906001019080831161077d575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b828210156108645760008481526020908190208301805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156108505780601f1061082557610100808354040283529160200191610850565b820191906000526020600020905b81548152906001019060200180831161083357829003601f168201915b5050505050815260200190600101906107b9565b50505050915080805480602002602001604051908101604052809291908181526020016000905b828210156109365760008481526020908190208301805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156109225780601f106108f757610100808354040283529160200191610922565b820191906000526020600020905b81548152906001019060200180831161090557829003601f168201915b50505050508152602001906001019061088b565b5050505090509450945094509450509193509193565b600190565b600081600354101580156109655750600082115b6109815760405162461bcd60e51b81526004016105f290613597565b6000828152600460205260409020600b81015460ff16156109a6576002915050610ae7565b806007015443116109bb576000915050610ae7565b806008015443116109d0576001915050610ae7565b80600a015481600901541115806109f157506109ea6106af565b8160090154105b15610a00576003915050610ae7565b6002810154610a13576004915050610ae7565b600b810154610100900460ff1615610a2f576007915050610ae7565b6002810154600054604080517fc1a287e20000000000000000000000000000000000000000000000000000000081529051610ad193926001600160a01b03169163c1a287e2916004808301926020929190829003018186803b158015610a9457600080fd5b505afa158015610aa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610acc9190810190612506565b611be6565b4210610ae1576006915050610ae7565b60059150505b919050565b6000610af782610951565b90506007816007811115610b0757fe5b1415610b255760405162461bcd60e51b81526004016105f290613677565b60008281526004602052604090206002546001600160a01b0316331480610bf55750610b4f611034565b60018054838201546001600160a01b039182169263782d6fe19290911690610b78904390611c12565b6040518363ffffffff1660e01b8152600401610b9592919061336f565b60206040518083038186803b158015610bad57600080fd5b505afa158015610bc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610be5919081019061263f565b6bffffffffffffffffffffffff16105b610c115760405162461bcd60e51b81526004016105f290613627565b600b8101805460ff1916600117905560005b6003820154811015610d1d576000546003830180546001600160a01b039092169163591fcdfe919084908110610c5557fe5b6000918252602090912001546004850180546001600160a01b039092169185908110610c7d57fe5b9060005260206000200154856005018581548110610c9757fe5b90600052602060002001866006018681548110610cb057fe5b9060005260206000200187600201546040518663ffffffff1660e01b8152600401610cdf95949392919061340c565b600060405180830381600087803b158015610cf957600080fd5b505af1158015610d0d573d6000803e3d6000fd5b505060019092019150610c239050565b507f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c83604051610d4d919061349a565b60405180910390a1505050565b6002546001600160a01b031681565b6000604051610d77906132e1565b60408051918290038220828201909152601582527f42697467656d20476f7665726e6f7220416c70686100000000000000000000006020909201919091527f6cdb7656239a64901d008bdf9bc7bd9dba57d6edb29fd530185be55777d5f4ce610dde611c3a565b30604051602001610df294939291906134a8565b6040516020818303038152906040528051906020012090506000604051610e18906132ec565b604051908190038120610e3191899089906020016134dd565b60405160208183030381529060405280519060200120905060008282604051602001610e5e9291906132b0565b604051602081830303815290604052805190602001209050600060018288888860405160008152602001604052604051610e9b9493929190613505565b6020604051602081039080840390855afa158015610ebd573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610ef05760405162461bcd60e51b81526004016105f290613667565b610efb818a8a6119e4565b505050505050505050565b6002546001600160a01b03163314610f305760405162461bcd60e51b81526004016105f2906136a7565b600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600a90565b6002546001600160a01b03163314610f895760405162461bcd60e51b81526004016105f2906135e7565b600080546040516001600160a01b0390911691633a66f90191839190610fb39087906020016132f7565b604051602081830303815290604052856040518563ffffffff1660e01b8152600401610fe29493929190613320565b602060405180830381600087803b158015610ffc57600080fd5b505af1158015611010573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106aa9190810190612506565b693f870857a3e0e380000090565b6002546001600160a01b0316331461106c5760405162461bcd60e51b81526004016105f290613567565b60008054604080517f0e18b68100000000000000000000000000000000000000000000000000000000815290516001600160a01b0390921692630e18b6819260048084019382900301818387803b1580156110c657600080fd5b505af11580156110da573d6000803e3d6000fd5b50505050565b6000546001600160a01b031681565b60035481565b60006110ff611034565b600180546001600160a01b03169063782d6fe1903390611120904390611c12565b6040518363ffffffff1660e01b815260040161113d929190613305565b60206040518083038186803b15801561115557600080fd5b505afa158015611169573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061118d919081019061263f565b6bffffffffffffffffffffffff16116111b85760405162461bcd60e51b81526004016105f290613577565b845186511480156111ca575083518651145b80156111d7575082518651145b6111f35760405162461bcd60e51b81526004016105f2906135f7565b85516112115760405162461bcd60e51b81526004016105f290613657565b611219610f5a565b865111156112395760405162461bcd60e51b81526004016105f290613647565b3360009081526005602052604090205480156112b657600061125a82610951565b9050600181600781111561126a57fe5b14156112885760405162461bcd60e51b81526004016105f2906135a7565b600081600781111561129657fe5b14156112b45760405162461bcd60e51b81526004016105f2906135d7565b505b60006112c443610acc61094c565b905060006112d482610acc610541565b60038054600101905590506112e7611db6565b604051806101a001604052806003548152602001336001600160a01b03168152602001600081526020018b81526020018a815260200189815260200188815260200184815260200183815260200160008152602001600081526020016000151581526020016000151581525090508060046000836000015181526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506040820151816002015560608201518160030190805190602001906113ca929190611e2b565b50608082015180516113e6916004840191602090910190611ea8565b5060a08201518051611402916005840191602090910190611eef565b5060c0820151805161141e916006840191602090910190611f48565b5060e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b0160006101000a81548160ff02191690831515021790555061018082015181600b0160016101000a81548160ff02191690831515021790555090505080600001516005600083602001516001600160a01b03166001600160a01b03168152602001908152602001600020819055507f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08160000151338c8c8c8c89898e604051611504999897969594939291906136c5565b60405180910390a15193505050505b95945050505050565b600461152782610951565b600781111561153257fe5b1461154f5760405162461bcd60e51b81526004016105f290613617565b6000818152600460208181526040808420845482517f6a42b8f800000000000000000000000000000000000000000000000000000000815292519195946115bd9442946001600160a01b0390931693636a42b8f8938084019390829003018186803b158015610a9457600080fd5b905060005b60038301548110156117655761175d8360030182815481106115e057fe5b6000918252602090912001546004850180546001600160a01b03909216918490811061160857fe5b906000526020600020015485600501848154811061162257fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156116b05780601f10611685576101008083540402835291602001916116b0565b820191906000526020600020905b81548152906001019060200180831161169357829003601f168201915b50505050508660060185815481106116c457fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156117525780601f1061172757610100808354040283529160200191611752565b820191906000526020600020905b81548152906001019060200180831161173557829003601f168201915b505050505086611c3e565b6001016115c2565b50600282018190556040517f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda289290610d4d90859084906137f3565b6040516105bd906132ec565b6117b3611fa1565b5060008281526004602090815260408083206001600160a01b0385168452600c018252918290208251606081018452905460ff80821615158352610100820416151592820192909252620100009091046bffffffffffffffffffffffff16918101919091525b92915050565b600561182a82610951565b600781111561183557fe5b146118525760405162461bcd60e51b81526004016105f2906135b7565b6000818152600460205260408120600b8101805461ff001916610100179055905b60038201548110156119a8576000546004830180546001600160a01b0390921691630825f38f9190849081106118a557fe5b90600052602060002001548460030184815481106118bf57fe5b6000918252602090912001546004860180546001600160a01b0390921691869081106118e757fe5b906000526020600020015486600501868154811061190157fe5b9060005260206000200187600601878154811061191a57fe5b9060005260206000200188600201546040518763ffffffff1660e01b815260040161194995949392919061340c565b6000604051808303818588803b15801561196257600080fd5b505af1158015611976573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261199f9190810190612524565b50600101611873565b507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f826040516119d8919061349a565b60405180910390a15050565b60016119ef83610951565b60078111156119fa57fe5b14611a175760405162461bcd60e51b81526004016105f290613687565b60008281526004602090815260408083206001600160a01b0387168452600c8101909252909120805460ff1615611a605760405162461bcd60e51b81526004016105f2906135c7565b60015460078301546040517f782d6fe10000000000000000000000000000000000000000000000000000000081526000926001600160a01b03169163782d6fe191611aaf918a9160040161336f565b60206040518083038186803b158015611ac757600080fd5b505afa158015611adb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611aff919081019061263f565b90508315611b2d57611b238360090154826bffffffffffffffffffffffff16611be6565b6009840155611b4f565b611b4983600a0154826bffffffffffffffffffffffff16611be6565b600a8401555b8154600160ff199091161761ff00191661010085151502177fffffffffffffffffffffffffffffffffffff000000000000000000000000ffff16620100006bffffffffffffffffffffffff8316021782556040517f877856338e13f63d0c36822ff0ef736b80934cd90574a3a5bc9262c39d217c4690611bd690889088908890869061337d565b60405180910390a1505050505050565b600082820183811015611c0b5760405162461bcd60e51b81526004016105f290613607565b9392505050565b600082821115611c345760405162461bcd60e51b81526004016105f290613697565b50900390565b4690565b6000546040516001600160a01b039091169063f2b0653790611c6c90889088908890889088906020016133b2565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b8152600401611c9e919061349a565b60206040518083038186803b158015611cb657600080fd5b505afa158015611cca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611cee91908101906124e8565b15611d0b5760405162461bcd60e51b81526004016105f290613637565b6000546040517f3a66f9010000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690633a66f90190611d5c90889088908890889088906004016133b2565b602060405180830381600087803b158015611d7657600080fd5b505af1158015611d8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611dae9190810190612506565b505050505050565b604051806101a001604052806000815260200160006001600160a01b031681526020016000815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b828054828255906000526020600020908101928215611e98579160200282015b82811115611e9857825182547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03909116178255602090920191600190910190611e4b565b50611ea4929150611fc1565b5090565b828054828255906000526020600020908101928215611ee3579160200282015b82811115611ee3578251825591602001919060010190611ec8565b50611ea4929150611ffd565b828054828255906000526020600020908101928215611f3c579160200282015b82811115611f3c5782518051611f2c918491602090910190612017565b5091602001919060010190611f0f565b50611ea4929150612084565b828054828255906000526020600020908101928215611f95579160200282015b82811115611f955782518051611f85918491602090910190612017565b5091602001919060010190611f68565b50611ea49291506120a7565b604080516060810182526000808252602082018190529181019190915290565b61054591905b80821115611ea45780547fffffffffffffffffffffffff0000000000000000000000000000000000000000168155600101611fc7565b61054591905b80821115611ea45760008155600101612003565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061205857805160ff1916838001178555611ee3565b82800160010185558215611ee35791820182811115611ee3578251825591602001919060010190611ec8565b61054591905b80821115611ea457600061209e82826120ca565b5060010161208a565b61054591905b80821115611ea45760006120c182826120ca565b506001016120ad565b50805460018160011615610100020316600290046000825580601f106120f0575061210e565b601f01602090049060005260206000209081019061210e9190611ffd565b50565b80356118198161394c565b600082601f83011261212d57600080fd5b813561214061213b82613828565b613801565b9150818183526020840193506020810190508385602084028201111561216557600080fd5b60005b83811015612191578161217b8882612111565b8452506020928301929190910190600101612168565b5050505092915050565b600082601f8301126121ac57600080fd5b81356121ba61213b82613828565b81815260209384019390925082018360005b8381101561219157813586016121e288826122f1565b84525060209283019291909101906001016121cc565b600082601f83011261220957600080fd5b813561221761213b82613828565b81815260209384019390925082018360005b83811015612191578135860161223f88826122f1565b8452506020928301929190910190600101612229565b600082601f83011261226657600080fd5b813561227461213b82613828565b9150818183526020840193506020810190508385602084028201111561229957600080fd5b60005b8381101561219157816122af88826122db565b845250602092830192919091019060010161229c565b803561181981613960565b805161181981613960565b803561181981613969565b805161181981613969565b600082601f83011261230257600080fd5b813561231061213b82613849565b9150808252602083016020830185838301111561232c57600080fd5b612337838284613900565b50505092915050565b600082601f83011261235157600080fd5b815161235f61213b82613849565b9150808252602083016020830185838301111561237b57600080fd5b61233783828461390c565b803561181981613972565b80516118198161397b565b6000602082840312156123ae57600080fd5b60006123ba8484612111565b949350505050565b600080604083850312156123d557600080fd5b60006123e18585612111565b92505060206123f2858286016122db565b9150509250929050565b600080600080600060a0868803121561241457600080fd5b853567ffffffffffffffff81111561242b57600080fd5b6124378882890161211c565b955050602086013567ffffffffffffffff81111561245457600080fd5b61246088828901612255565b945050604086013567ffffffffffffffff81111561247d57600080fd5b612489888289016121f8565b935050606086013567ffffffffffffffff8111156124a657600080fd5b6124b28882890161219b565b925050608086013567ffffffffffffffff8111156124cf57600080fd5b6124db888289016122f1565b9150509295509295909350565b6000602082840312156124fa57600080fd5b60006123ba84846122d0565b60006020828403121561251857600080fd5b60006123ba84846122e6565b60006020828403121561253657600080fd5b815167ffffffffffffffff81111561254d57600080fd5b6123ba84828501612340565b60006020828403121561256b57600080fd5b60006123ba84846122db565b6000806040838503121561258a57600080fd5b600061259685856122db565b92505060206123f285828601612111565b600080604083850312156125ba57600080fd5b60006125c685856122db565b92505060206123f2858286016122c5565b600080600080600060a086880312156125ef57600080fd5b60006125fb88886122db565b955050602061260c888289016122c5565b945050604061261d88828901612386565b935050606061262e888289016122db565b92505060806124db888289016122db565b60006020828403121561265157600080fd5b60006123ba8484612391565b60006126698383612698565b505060200190565b6000611c0b838361283a565b60006126698383612820565b612692816138cd565b82525050565b61269281613890565b60006126ac82613883565b6126b68185613887565b93506126c183613871565b8060005b838110156126ef5781516126d9888261265d565b97506126e483613871565b9250506001016126c5565b509495945050505050565b600061270582613883565b61270f8185613887565b93508360208202850161272185613871565b8060005b8581101561275b578484038952815161273e8582612671565b945061274983613871565b60209a909a0199925050600101612725565b5091979650505050505050565b600061277382613883565b61277d8185613887565b93508360208202850161278f85613871565b8060005b8581101561275b57848403895281516127ac8582612671565b94506127b783613871565b60209a909a0199925050600101612793565b60006127d482613883565b6127de8185613887565b93506127e983613871565b8060005b838110156126ef578151612801888261267d565b975061280c83613871565b9250506001016127ed565b6126928161389b565b61269281610545565b61269261283582610545565b610545565b600061284582613883565b61284f8185613887565b935061285f81856020860161390c565b61286881613938565b9093019392505050565b60008154600181166000811461288f57600181146128b5576128f4565b607f60028304166128a08187613887565b60ff19841681529550506020850192506128f4565b600282046128c38187613887565b95506128ce85613877565b60005b828110156128ed578154888201526001909101906020016128d1565b8701945050505b505092915050565b612692816138d4565b612692816138df565b612692816138ea565b6000612924603983613887565b7f476f7665726e6f72416c7068613a3a5f5f61636365707441646d696e3a20736581527f6e646572206d75737420626520676f7620677561726469616e00000000000000602082015260400192915050565b6000612983600283610ae7565b7f1901000000000000000000000000000000000000000000000000000000000000815260020192915050565b60006129bc603583613887565b7f476f7665726e6f72416c7068613a70726f706f73657220766f7465732062656c81527f6f772070726f706f73616c207468726573686f6c640000000000000000000000602082015260400192915050565b6000612a1b604c83613887565b7f476f7665726e6f72416c7068613a3a5f5f6578656375746553657454696d656c81527f6f636b50656e64696e6741646d696e3a2073656e646572206d7573742062652060208201527f676f7620677561726469616e0000000000000000000000000000000000000000604082015260600192915050565b6000612aa0601883613887565b7f73657450656e64696e6741646d696e2861646472657373290000000000000000815260200192915050565b6000612ad9602983613887565b7f476f7665726e6f72416c7068613a3a73746174653a20696e76616c696420707281527f6f706f73616c2069640000000000000000000000000000000000000000000000602082015260400192915050565b6000612b38604f83613887565b7f476f7665726e6f72416c7068613a206f6e65206c6976652070726f706f73616c81527f207065722070726f706f7365722c20666f756e6420616e20616c72656164792060208201527f6163746976652070726f706f73616c0000000000000000000000000000000000604082015260600192915050565b6000612bbd603b83613887565b7f476f7665726e6f72416c7068613a70726f706f73616c2063616e206f6e6c792081527f6265206578656375746564206966206974206973207175657565640000000000602082015260400192915050565b6000612c1c602d83613887565b7f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f7465722081527f616c726561647920766f74656400000000000000000000000000000000000000602082015260400192915050565b6000612c7b605983613887565b7f476f7665726e6f72416c7068613a3a70726f706f73653a206f6e65206c69766581527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60208201527f20616c72656164792070656e64696e672070726f706f73616c00000000000000604082015260600192915050565b6000612d00604a83613887565b7f476f7665726e6f72416c7068613a3a5f5f717565756553657454696d656c6f6381527f6b50656e64696e6741646d696e3a2073656e646572206d75737420626520676f60208201527f7620677561726469616e00000000000000000000000000000000000000000000604082015260600192915050565b6000612d85603a83613887565b7f476f7665726e6f72416c7068613a70726f706f73616c2066756e6374696f6e2081527f696e666f726d6174696f6e206172697479206d69736d61746368000000000000602082015260400192915050565b6000612de4601183613887565b7f6164646974696f6e206f766572666c6f77000000000000000000000000000000815260200192915050565b6000612e1d604383610ae7565b7f454950373132446f6d61696e28737472696e67206e616d652c75696e7432353681527f20636861696e49642c6164647265737320766572696679696e67436f6e74726160208201527f6374290000000000000000000000000000000000000000000000000000000000604082015260430192915050565b6000612ea2603c83613887565b7f476f7665726e6f72416c7068613a70726f706f73616c2063616e206f6e6c792081527f6265207175657565642069662069742069732073756363656564656400000000602082015260400192915050565b6000612f01602783610ae7565b7f42616c6c6f742875696e743235362070726f706f73616c49642c626f6f6c207381527f7570706f72742900000000000000000000000000000000000000000000000000602082015260270192915050565b6000612f60602f83613887565b7f476f7665726e6f72416c7068613a3a63616e63656c3a2070726f706f7365722081527f61626f7665207468726573686f6c640000000000000000000000000000000000602082015260400192915050565b6000612fbf603383613887565b7f476f7665726e6f72416c7068613a70726f706f73616c20616374696f6e20616c81527f7265616479207175657565642061742065746100000000000000000000000000602082015260400192915050565b600061301e601e83613887565b7f476f7665726e6f72416c7068613a746f6f206d616e7920616374696f6e730000815260200192915050565b6000613057602283613887565b7f476f7665726e6f72416c7068613a6d7573742070726f7669646520616374696f81527f6e73000000000000000000000000000000000000000000000000000000000000602082015260400192915050565b60006130b6602f83613887565b7f476f7665726e6f72416c7068613a3a63617374566f746542795369673a20696e81527f76616c6964207369676e61747572650000000000000000000000000000000000602082015260400192915050565b6000613115603683613887565b7f476f7665726e6f72416c7068613a3a63616e63656c3a2063616e6e6f7420636181527f6e63656c2065786563757465642070726f706f73616c00000000000000000000602082015260400192915050565b6000613174602a83613887565b7f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f74696e6781527f20697320636c6f73656400000000000000000000000000000000000000000000602082015260400192915050565b60006131d3601583613887565b7f7375627472616374696f6e20756e646572666c6f770000000000000000000000815260200192915050565b600061320c603683613887565b7f476f7665726e6f72416c7068613a3a5f5f61626469636174653a2073656e646581527f72206d75737420626520676f7620677561726469616e00000000000000000000602082015260400192915050565b8051606083019061326f8482612817565b5060208201516132826020850182612817565b5060408201516110da60408501826132a7565b612692816138b6565b612692816138f5565b612692816138bc565b60006132bb82612976565b91506132c78285612829565b6020820191506132d78284612829565b5060200192915050565b600061181982612e10565b600061181982612ef4565b602081016118198284612698565b604081016133138285612689565b611c0b6020830184612820565b60a0810161332e8287612698565b61333b602083018661290e565b818103604083015261334c81612a93565b90508181036060830152613360818561283a565b90506115136080830184612820565b604081016133138285612698565b6080810161338b8287612698565b6133986020830186612820565b6133a56040830185612817565b611513606083018461329e565b60a081016133c08288612698565b6133cd6020830187612820565b81810360408301526133df818661283a565b905081810360608301526133f3818561283a565b90506134026080830184612820565b9695505050505050565b60a0810161341a8288612698565b6134276020830187612820565b81810360408301526134398186612872565b905081810360608301526133f38185612872565b6080808252810161345e81876126a1565b9050818103602083015261347281866127c9565b905081810360408301526134868185612768565b9050818103606083015261340281846126fa565b602081016118198284612820565b608081016134b68287612820565b6134c36020830186612820565b6134d06040830185612820565b6115136060830184612698565b606081016134eb8286612820565b6134f86020830185612820565b6123ba6040830184612817565b608081016135138287612820565b6135206020830186613295565b61352d6040830185612820565b6115136060830184612820565b6020810161181982846128fc565b602081016118198284612905565b60208082528101611c0b818461283a565b6020808252810161181981612917565b60208082528101611819816129af565b6020808252810161181981612a0e565b6020808252810161181981612acc565b6020808252810161181981612b2b565b6020808252810161181981612bb0565b6020808252810161181981612c0f565b6020808252810161181981612c6e565b6020808252810161181981612cf3565b6020808252810161181981612d78565b6020808252810161181981612dd7565b6020808252810161181981612e95565b6020808252810161181981612f53565b6020808252810161181981612fb2565b6020808252810161181981613011565b602080825281016118198161304a565b60208082528101611819816130a9565b6020808252810161181981613108565b6020808252810161181981613167565b60208082528101611819816131c6565b60208082528101611819816131ff565b60608101611819828461325e565b61012081016136d4828c612820565b6136e1602083018b612689565b81810360408301526136f3818a6126a1565b9050818103606083015261370781896127c9565b9050818103608083015261371b8188612768565b905081810360a083015261372f81876126fa565b905061373e60c0830186612820565b61374b60e0830185612820565b81810361010083015261375e818461283a565b9b9a5050505050505050505050565b610120810161377c828c612820565b613789602083018b612698565b613796604083018a612820565b6137a36060830189612820565b6137b06080830188612820565b6137bd60a0830187612820565b6137ca60c0830186612820565b6137d760e0830185612817565b6137e5610100830184612817565b9a9950505050505050505050565b604081016133138285612820565b60405181810167ffffffffffffffff8111828210171561382057600080fd5b604052919050565b600067ffffffffffffffff82111561383f57600080fd5b5060209081020190565b600067ffffffffffffffff82111561386057600080fd5b506020601f91909101601f19160190565b60200190565b60009081526020902090565b5190565b90815260200190565b6000611819826138aa565b151590565b80610ae781613942565b6001600160a01b031690565b60ff1690565b6bffffffffffffffffffffffff1690565b6000611819825b600061181982613890565b6000611819826138a0565b600061181982610545565b6000611819826138bc565b82818337506000910152565b60005b8381101561392757818101518382015260200161390f565b838111156110da5750506000910152565b601f01601f191690565b6008811061210e57fe5b61395581613890565b811461210e57600080fd5b6139558161389b565b61395581610545565b613955816138b6565b613955816138bc56fea365627a7a7231582016cf7ebe4caf7bd27f5a445c3700804b15160c4271d9fb150c286c6c9b8e1a946c6578706572696d656e74616cf564736f6c63430005100040",
  "libraries": {
    "Strings": "0x9cd2aa68ecCF27b393E825c6fC844eF4217D4c22",
    "AddressSet": "0x22221807f0E47654729213994D40ea8c5e23892F",
    "UInt256Set": "0x0690fedAEc49A5Bd4c2fb723Cf3F0114E57014BC",
    "Create2": "0x931Fd76E170a15918409dBA587F0802da03845AD",
    "WrappedTokenLib": "0x5E99B7A7e6855BEdaa31d0Fca1117bFb7cF23e2e",
    "ComplexPoolLib": "0xc59f6643335979369672a05Db01FeC97fB219608"
  },
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "proposalMaxOperations()": {
        "notice": "The maximum number of actions that can be included in a proposal"
      },
      "proposalThreshold()": {
        "notice": "The number of votes required in order for a voter to become a proposer"
      },
      "quorumVotes()": {
        "notice": "The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed"
      },
      "votingDelay()": {
        "notice": "The delay before voting on a proposal may take place, once proposed"
      },
      "votingPeriod()": {
        "notice": "The duration of voting on a proposal, in blocks"
      }
    }
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 47,
        "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
        "label": "timelock",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(TimelockInterface)1233"
      },
      {
        "astId": 49,
        "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
        "label": "comp",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(CompInterface)1243"
      },
      {
        "astId": 51,
        "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
        "label": "guardian",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 53,
        "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
        "label": "proposalCount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 108,
        "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
        "label": "proposals",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(Proposal)88_storage)"
      },
      {
        "astId": 112,
        "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
        "label": "latestProposalIds",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(CompInterface)1243": {
        "encoding": "inplace",
        "label": "contract CompInterface",
        "numberOfBytes": "20"
      },
      "t_contract(TimelockInterface)1233": {
        "encoding": "inplace",
        "label": "contract TimelockInterface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Receipt)95_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GovernorAlpha.Receipt)",
        "numberOfBytes": "32",
        "value": "t_struct(Receipt)95_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Proposal)88_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GovernorAlpha.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)88_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)88_storage": {
        "encoding": "inplace",
        "label": "struct GovernorAlpha.Proposal",
        "members": [
          {
            "astId": 55,
            "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 57,
            "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "proposer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 59,
            "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "eta",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 62,
            "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "targets",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 65,
            "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "values",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 68,
            "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "signatures",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 71,
            "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "calldatas",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_bytes_storage)dyn_storage"
          },
          {
            "astId": 73,
            "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "startBlock",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 75,
            "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "endBlock",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 77,
            "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "forVotes",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 79,
            "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "againstVotes",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 81,
            "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "canceled",
            "offset": 0,
            "slot": "11",
            "type": "t_bool"
          },
          {
            "astId": 83,
            "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "executed",
            "offset": 1,
            "slot": "11",
            "type": "t_bool"
          },
          {
            "astId": 87,
            "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "receipts",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_struct(Receipt)95_storage)"
          }
        ],
        "numberOfBytes": "416"
      },
      "t_struct(Receipt)95_storage": {
        "encoding": "inplace",
        "label": "struct GovernorAlpha.Receipt",
        "members": [
          {
            "astId": 90,
            "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "hasVoted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 92,
            "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "support",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 94,
            "contract": "src/governance/GovernorAlpha.sol:GovernorAlpha",
            "label": "votes",
            "offset": 2,
            "slot": "0",
            "type": "t_uint96"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint96": {
        "encoding": "inplace",
        "label": "uint96",
        "numberOfBytes": "12"
      }
    }
  }
}
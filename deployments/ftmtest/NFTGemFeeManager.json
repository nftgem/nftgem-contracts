{
  "address": "0x51355Bc1642114a06F491Cb5F6933a7a09783193",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "controllerAddress",
          "type": "address"
        }
      ],
      "name": "ControllerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "controllerAddress",
          "type": "address"
        }
      ],
      "name": "ControllerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "feeHash",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "FeeChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FLASH_LOAN_HASH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINIMUM_LIQUIDITY_HASH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POOL_FEE_HASH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WRAP_GEM_HASH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "addController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "feeHash",
          "type": "uint256"
        }
      ],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "feeRet",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isController",
      "outputs": [
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "relinquishControl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "feeHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x5335344fbc395b170af29bbfe0c99813d0ece48d3878fbf32ad0e901a6ef5896",
  "receipt": {
    "to": null,
    "from": "0xE5E82ae456c04Ad0879785B4f678A4Fcace12AAf",
    "contractAddress": "0x51355Bc1642114a06F491Cb5F6933a7a09783193",
    "transactionIndex": 0,
    "gasUsed": "666984",
    "logsBloom": "0x
    "blockHash": "0x00000cb300004d4a72e909b5f093e8a61afc9b1a22eeeca8de47c024d1873b98",
    "transactionHash": "0x5335344fbc395b170af29bbfe0c99813d0ece48d3878fbf32ad0e901a6ef5896",
    "logs": [],
    "blockNumber": 1200261,
    "cumulativeGasUsed": "666984",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "7d18b36fc9d0f37073003b6f2b916a6c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controllerAddress\",\"type\":\"address\"}],\"name\":\"ControllerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controllerAddress\",\"type\":\"address\"}],\"name\":\"ControllerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"feeHash\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FeeChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FLASH_LOAN_HASH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY_HASH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL_FEE_HASH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WRAP_GEM_HASH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"feeHash\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeRet\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isController\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relinquishControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"feeHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addController(address)\":{\"details\":\"Add an address allowed to control this contract\"},\"balanceOf(address)\":{\"details\":\"get the balance of this fee manager. Pass a zero address in for FTM balance\"},\"constructor\":{\"details\":\"constructor\"},\"fee(uint256)\":{\"details\":\"Get the fee divisor for the specified token\"},\"isController(address)\":{\"details\":\"Check if this address is a controller\"},\"relinquishControl()\":{\"details\":\"Remove the sender address from the list of controllers\"},\"setFee(uint256,uint256)\":{\"details\":\"Set the fee divisor for the specified token\"},\"transferEth(address,uint256)\":{\"details\":\"transfer ETH from this contract to the to given recipient\"},\"transferToken(address,address,uint256)\":{\"details\":\"transfer tokens from this contract to the to given recipient\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/fees/NFTGemFeeManager.sol\":\"NFTGemFeeManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2222},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"src/access/Controllable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"../interfaces/IControllable.sol\\\";\\n\\nabstract contract Controllable is IControllable {\\n    mapping(address => bool) internal _controllers;\\n\\n    /**\\n     * @dev Throws if called by any account not in authorized list\\n     */\\n    modifier onlyController() {\\n        require(\\n            _controllers[msg.sender] == true || address(this) == msg.sender,\\n            \\\"Controllable: caller is not a controller\\\"\\n        );\\n        _;\\n    }\\n\\n    /**\\n     * @dev Add an address allowed to control this contract\\n     */\\n    function _addController(address _controller) internal {\\n        _controllers[_controller] = true;\\n    }\\n\\n    /**\\n     * @dev Add an address allowed to control this contract\\n     */\\n    function addController(address _controller)\\n        external\\n        override\\n        onlyController\\n    {\\n        _controllers[_controller] = true;\\n    }\\n\\n    /**\\n     * @dev Check if this address is a controller\\n     */\\n    function isController(address _address)\\n        external\\n        view\\n        override\\n        returns (bool allowed)\\n    {\\n        allowed = _controllers[_address];\\n    }\\n\\n    /**\\n     * @dev Remove the sender address from the list of controllers\\n     */\\n    function relinquishControl() external override onlyController {\\n        delete _controllers[msg.sender];\\n    }\\n}\\n\",\"keccak256\":\"0xa31f752b3b092c788ea06a6dced266db79c4407d69733d78bc15e519f39e1d3f\",\"license\":\"MIT\"},\"src/fees/NFTGemFeeManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"../access/Controllable.sol\\\";\\nimport \\\"../interfaces/INFTGemFeeManager.sol\\\";\\n\\ncontract NFTGemFeeManager is Controllable, INFTGemFeeManager {\\n    address private operator;\\n\\n    uint256 public constant MINIMUM_LIQUIDITY_HASH =\\n        uint256(keccak256(\\\"min_liquidity\\\"));\\n    uint256 public constant POOL_FEE_HASH =\\n        uint256(keccak256(abi.encodePacked(\\\"pool_fee\\\")));\\n    uint256 public constant WRAP_GEM_HASH =\\n        uint256(keccak256(abi.encodePacked(\\\"wrap_gem\\\")));\\n    uint256 public constant FLASH_LOAN_HASH =\\n        uint256(keccak256(abi.encodePacked(\\\"flash_loan\\\")));\\n\\n    uint256 private constant MINIMUM_LIQUIDITY = 50;\\n    uint256 private constant POOL_FEE = 2000;\\n    uint256 private constant WRAP_GEM = 2000;\\n    uint256 private constant FLASH_LOAN = 10000;\\n\\n    mapping(uint256 => uint256) private fees;\\n\\n    /**\\n     * @dev constructor\\n     */\\n    constructor() {\\n        _addController(msg.sender);\\n        fees[MINIMUM_LIQUIDITY_HASH] = MINIMUM_LIQUIDITY;\\n        fees[POOL_FEE_HASH] = POOL_FEE;\\n        fees[WRAP_GEM_HASH] = WRAP_GEM;\\n        fees[FLASH_LOAN_HASH] = FLASH_LOAN;\\n    }\\n\\n    /**\\n     * @dev receive funds\\n     */\\n    receive() external payable {\\n        //\\n    }\\n\\n    /**\\n     * @dev Get the fee divisor for the specified token\\n     */\\n    function fee(uint256 feeHash)\\n        external\\n        view\\n        override\\n        returns (uint256 feeRet)\\n    {\\n        feeRet = fees[feeHash];\\n    }\\n\\n    /**\\n     * @dev Set the fee divisor for the specified token\\n     */\\n    function setFee(uint256 feeHash, uint256 _fee)\\n        external\\n        override\\n        onlyController\\n    {\\n        fees[feeHash] = _fee;\\n        emit FeeChanged(operator, feeHash, _fee);\\n    }\\n\\n    /**\\n     * @dev get the balance of this fee manager. Pass a zero address in for FTM balance\\n     */\\n    function balanceOf(address token) external view override returns (uint256) {\\n        return\\n            token == address(0)\\n                ? address(this).balance\\n                : IERC20(token).balanceOf(address(this));\\n    }\\n\\n    /**\\n     * @dev transfer ETH from this contract to the to given recipient\\n     */\\n    function transferEth(address payable recipient, uint256 amount)\\n        external\\n        override\\n        onlyController\\n    {\\n        recipient.transfer(amount);\\n    }\\n\\n    /**\\n     * @dev transfer tokens from this contract to the to given recipient\\n     */\\n    function transferToken(\\n        address token,\\n        address recipient,\\n        uint256 amount\\n    ) external override onlyController {\\n        IERC20(token).transfer(recipient, amount);\\n    }\\n}\\n\",\"keccak256\":\"0xd63442bca1ffede1150506666c9ec47bdf284071869892541204d410ffe59178\",\"license\":\"MIT\"},\"src/interfaces/IControllable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\ninterface IControllable {\\n    event ControllerAdded(\\n        address indexed contractAddress,\\n        address indexed controllerAddress\\n    );\\n    event ControllerRemoved(\\n        address indexed contractAddress,\\n        address indexed controllerAddress\\n    );\\n\\n    function addController(address controller) external;\\n\\n    function isController(address controller) external view returns (bool);\\n\\n    function relinquishControl() external;\\n}\\n\",\"keccak256\":\"0x2a44548d9ba1bcd73d5734b2265db6c1556c013ccc61df621a6cbd5cca42cfaf\",\"license\":\"MIT\"},\"src/interfaces/INFTGemFeeManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\ninterface INFTGemFeeManager {\\n    event FeeChanged(\\n        address indexed operator,\\n        uint256 indexed feeHash,\\n        uint256 value\\n    );\\n\\n    function fee(uint256 feeTypeHash) external view returns (uint256);\\n\\n    function setFee(uint256 feeTypeHash, uint256 _fee) external;\\n\\n    function balanceOf(address token) external view returns (uint256);\\n\\n    function transferEth(address payable recipient, uint256 amount) external;\\n\\n    function transferToken(\\n        address token,\\n        address recipient,\\n        uint256 amount\\n    ) external;\\n}\\n\",\"keccak256\":\"0x073089b45be4de1e2feecfa65d36ea9cb3ec18cec7e3c1e9de18ea8923c016c2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361012a565b7f0ec00ae29f2aafdb279bec8e892846e2ce37e27acd3eba6c98ed18e29aedb88a60009081526002602081815260327fc5f3cf42c593b9bf57769b99bec2bf71e94324b20cb50593e531a062e020c741556040516107d0939161007d9101610178565b6040516020818303038152906040528051906020012060001c8152602001908152602001600020819055506107d0600260006040516020016100be90610164565b6040516020818303038152906040528051906020012060001c815260200190815260200160002081905550612710600260006040516020016100ff9061014e565b60408051601f198184030181529181528151602092830120835290820192909252016000205561018c565b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b69333630b9b42fb637b0b760b11b8152600a0190565b67777261705f67656d60c01b815260080190565b67706f6f6c5f66656560c01b815260080190565b6109308061019b6000396000f3fe6080604052600436106100cb5760003560e01c8063a7fc7a0711610074578063e1c28bef1161004e578063e1c28bef146101f0578063e9bb84c214610205578063f5537ede14610225576100d2565b8063a7fc7a071461018e578063b429afeb146101ae578063ba4fd3e9146101db576100d2565b806370a08231116100a557806370a08231146101445780638546403c14610164578063a5d3e48314610179576100d2565b806339b37ab0146100d757806341039fd21461010d57806352f7c98814610122576100d2565b366100d257005b600080fd5b3480156100e357600080fd5b506100f76100f2366004610751565b610245565b60405161010491906108cc565b60405180910390f35b34801561011957600080fd5b506100f7610257565b34801561012e57600080fd5b5061014261013d366004610781565b61027b565b005b34801561015057600080fd5b506100f761015f3660046106a3565b61032c565b34801561017057600080fd5b506100f76103f9565b34801561018557600080fd5b506100f7610424565b34801561019a57600080fd5b506101426101a93660046106a3565b610433565b3480156101ba57600080fd5b506101ce6101c93660046106a3565b6104a2565b6040516101049190610864565b3480156101e757600080fd5b506100f76104cd565b3480156101fc57600080fd5b506101426104dc565b34801561021157600080fd5b506101426102203660046106c6565b610533565b34801561023157600080fd5b506101426102403660046106f1565b6105b9565b60009081526002602052604090205490565b7f0ec00ae29f2aafdb279bec8e892846e2ce37e27acd3eba6c98ed18e29aedb88a81565b3360009081526020819052604090205460ff1615156001148061029d57503033145b6102c25760405162461bcd60e51b81526004016102b99061086f565b60405180910390fd5b600082815260026020526040908190208290556001549051839173ffffffffffffffffffffffffffffffffffffffff16907ff98c81ad0a5eb3551c3561de8dc9d1512e8680fb77425ea138ebfe9a9c0065ff906103209085906108cc565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff8216156103f1576040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316906370a082319061039c90309060040161081d565b60206040518083038186803b1580156103b457600080fd5b505afa1580156103c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ec9190610769565b6103f3565b475b92915050565b604051602001610408906107cb565b6040516020818303038152906040528051906020012060001c81565b604051602001610408906107f4565b3360009081526020819052604090205460ff1615156001148061045557503033145b6104715760405162461bcd60e51b81526004016102b99061086f565b73ffffffffffffffffffffffffffffffffffffffff166000908152602081905260409020805460ff19166001179055565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b604051602001610408906107a2565b3360009081526020819052604090205460ff161515600114806104fe57503033145b61051a5760405162461bcd60e51b81526004016102b99061086f565b336000908152602081905260409020805460ff19169055565b3360009081526020819052604090205460ff1615156001148061055557503033145b6105715760405162461bcd60e51b81526004016102b99061086f565b60405173ffffffffffffffffffffffffffffffffffffffff83169082156108fc029083906000818181858888f193505050501580156105b4573d6000803e3d6000fd5b505050565b3360009081526020819052604090205460ff161515600114806105db57503033145b6105f75760405162461bcd60e51b81526004016102b99061086f565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063a9059cbb9061064b908590859060040161083e565b602060405180830381600087803b15801561066557600080fd5b505af1158015610679573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069d9190610731565b50505050565b6000602082840312156106b4578081fd5b81356106bf816108d5565b9392505050565b600080604083850312156106d8578081fd5b82356106e3816108d5565b946020939093013593505050565b600080600060608486031215610705578081fd5b8335610710816108d5565b92506020840135610720816108d5565b929592945050506040919091013590565b600060208284031215610742578081fd5b815180151581146106bf578182fd5b600060208284031215610762578081fd5b5035919050565b60006020828403121561077a578081fd5b5051919050565b60008060408385031215610793578182fd5b50508035926020909101359150565b7f666c6173685f6c6f616e000000000000000000000000000000000000000000008152600a0190565b7f777261705f67656d000000000000000000000000000000000000000000000000815260080190565b7f706f6f6c5f666565000000000000000000000000000000000000000000000000815260080190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b901515815260200190565b60208082526028908201527f436f6e74726f6c6c61626c653a2063616c6c6572206973206e6f74206120636f60408201527f6e74726f6c6c6572000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b73ffffffffffffffffffffffffffffffffffffffff811681146108f757600080fd5b5056fea264697066735822122021246c9e23bfdf6c1a81829568001640374e8bc8314314d85f667353f4b5befc64736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100cb5760003560e01c8063a7fc7a0711610074578063e1c28bef1161004e578063e1c28bef146101f0578063e9bb84c214610205578063f5537ede14610225576100d2565b8063a7fc7a071461018e578063b429afeb146101ae578063ba4fd3e9146101db576100d2565b806370a08231116100a557806370a08231146101445780638546403c14610164578063a5d3e48314610179576100d2565b806339b37ab0146100d757806341039fd21461010d57806352f7c98814610122576100d2565b366100d257005b600080fd5b3480156100e357600080fd5b506100f76100f2366004610751565b610245565b60405161010491906108cc565b60405180910390f35b34801561011957600080fd5b506100f7610257565b34801561012e57600080fd5b5061014261013d366004610781565b61027b565b005b34801561015057600080fd5b506100f761015f3660046106a3565b61032c565b34801561017057600080fd5b506100f76103f9565b34801561018557600080fd5b506100f7610424565b34801561019a57600080fd5b506101426101a93660046106a3565b610433565b3480156101ba57600080fd5b506101ce6101c93660046106a3565b6104a2565b6040516101049190610864565b3480156101e757600080fd5b506100f76104cd565b3480156101fc57600080fd5b506101426104dc565b34801561021157600080fd5b506101426102203660046106c6565b610533565b34801561023157600080fd5b506101426102403660046106f1565b6105b9565b60009081526002602052604090205490565b7f0ec00ae29f2aafdb279bec8e892846e2ce37e27acd3eba6c98ed18e29aedb88a81565b3360009081526020819052604090205460ff1615156001148061029d57503033145b6102c25760405162461bcd60e51b81526004016102b99061086f565b60405180910390fd5b600082815260026020526040908190208290556001549051839173ffffffffffffffffffffffffffffffffffffffff16907ff98c81ad0a5eb3551c3561de8dc9d1512e8680fb77425ea138ebfe9a9c0065ff906103209085906108cc565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff8216156103f1576040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316906370a082319061039c90309060040161081d565b60206040518083038186803b1580156103b457600080fd5b505afa1580156103c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ec9190610769565b6103f3565b475b92915050565b604051602001610408906107cb565b6040516020818303038152906040528051906020012060001c81565b604051602001610408906107f4565b3360009081526020819052604090205460ff1615156001148061045557503033145b6104715760405162461bcd60e51b81526004016102b99061086f565b73ffffffffffffffffffffffffffffffffffffffff166000908152602081905260409020805460ff19166001179055565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b604051602001610408906107a2565b3360009081526020819052604090205460ff161515600114806104fe57503033145b61051a5760405162461bcd60e51b81526004016102b99061086f565b336000908152602081905260409020805460ff19169055565b3360009081526020819052604090205460ff1615156001148061055557503033145b6105715760405162461bcd60e51b81526004016102b99061086f565b60405173ffffffffffffffffffffffffffffffffffffffff83169082156108fc029083906000818181858888f193505050501580156105b4573d6000803e3d6000fd5b505050565b3360009081526020819052604090205460ff161515600114806105db57503033145b6105f75760405162461bcd60e51b81526004016102b99061086f565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063a9059cbb9061064b908590859060040161083e565b602060405180830381600087803b15801561066557600080fd5b505af1158015610679573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069d9190610731565b50505050565b6000602082840312156106b4578081fd5b81356106bf816108d5565b9392505050565b600080604083850312156106d8578081fd5b82356106e3816108d5565b946020939093013593505050565b600080600060608486031215610705578081fd5b8335610710816108d5565b92506020840135610720816108d5565b929592945050506040919091013590565b600060208284031215610742578081fd5b815180151581146106bf578182fd5b600060208284031215610762578081fd5b5035919050565b60006020828403121561077a578081fd5b5051919050565b60008060408385031215610793578182fd5b50508035926020909101359150565b7f666c6173685f6c6f616e000000000000000000000000000000000000000000008152600a0190565b7f777261705f67656d000000000000000000000000000000000000000000000000815260080190565b7f706f6f6c5f666565000000000000000000000000000000000000000000000000815260080190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b901515815260200190565b60208082526028908201527f436f6e74726f6c6c61626c653a2063616c6c6572206973206e6f74206120636f60408201527f6e74726f6c6c6572000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b73ffffffffffffffffffffffffffffffffffffffff811681146108f757600080fd5b5056fea264697066735822122021246c9e23bfdf6c1a81829568001640374e8bc8314314d85f667353f4b5befc64736f6c63430008000033",
  "libraries": {
    "Strings": "0x9cd2aa68ecCF27b393E825c6fC844eF4217D4c22",
    "AddressSet": "0x22221807f0E47654729213994D40ea8c5e23892F",
    "UInt256Set": "0x0690fedAEc49A5Bd4c2fb723Cf3F0114E57014BC",
    "Create2": "0x931Fd76E170a15918409dBA587F0802da03845AD",
    "WrappedTokenLib": "0x5E99B7A7e6855BEdaa31d0Fca1117bFb7cF23e2e",
    "ComplexPoolLib": "0xc59f6643335979369672a05Db01FeC97fB219608"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addController(address)": {
        "details": "Add an address allowed to control this contract"
      },
      "balanceOf(address)": {
        "details": "get the balance of this fee manager. Pass a zero address in for FTM balance"
      },
      "constructor": {
        "details": "constructor"
      },
      "fee(uint256)": {
        "details": "Get the fee divisor for the specified token"
      },
      "isController(address)": {
        "details": "Check if this address is a controller"
      },
      "relinquishControl()": {
        "details": "Remove the sender address from the list of controllers"
      },
      "setFee(uint256,uint256)": {
        "details": "Set the fee divisor for the specified token"
      },
      "transferEth(address,uint256)": {
        "details": "transfer ETH from this contract to the to given recipient"
      },
      "transferToken(address,address,uint256)": {
        "details": "transfer tokens from this contract to the to given recipient"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4752,
        "contract": "src/fees/NFTGemFeeManager.sol:NFTGemFeeManager",
        "label": "_controllers",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 5427,
        "contract": "src/fees/NFTGemFeeManager.sol:NFTGemFeeManager",
        "label": "operator",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 5484,
        "contract": "src/fees/NFTGemFeeManager.sol:NFTGemFeeManager",
        "label": "fees",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
{
  "address": "0x62A36f307519b731ff2693dACCa7a0A3C3837bb5",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "controllerAddress",
          "type": "address"
        }
      ],
      "name": "ControllerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "controllerAddress",
          "type": "address"
        }
      ],
      "name": "ControllerRemoved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "addController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "multitoken",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "quantities",
          "type": "uint256[]"
        }
      ],
      "name": "bulkMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isController",
      "outputs": [
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "relinquishControl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4b0d8be39f7161323a35dbda145eb4c28aca49224f423c194c155da291c32dde",
  "receipt": {
    "to": null,
    "from": "0xE5E82ae456c04Ad0879785B4f678A4Fcace12AAf",
    "contractAddress": "0x62A36f307519b731ff2693dACCa7a0A3C3837bb5",
    "transactionIndex": 0,
    "gasUsed": "390124",
    "logsBloom": "0x
    "blockHash": "0x0000663b00000a47ffe9bc6566e01f484fb285c7497cfb50551cc069a7b35bcb",
    "transactionHash": "0x4b0d8be39f7161323a35dbda145eb4c28aca49224f423c194c155da291c32dde",
    "logs": [],
    "blockNumber": 14408219,
    "cumulativeGasUsed": "390124",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "2d2f4ad3fdc4b1ca8ac0f60db5b68735",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controllerAddress\",\"type\":\"address\"}],\"name\":\"ControllerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controllerAddress\",\"type\":\"address\"}],\"name\":\"ControllerRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"quantities\",\"type\":\"uint256[]\"}],\"name\":\"bulkMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isController\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relinquishControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Collection of utility functions that mint tokens\",\"kind\":\"dev\",\"methods\":{\"addController(address)\":{\"details\":\"Add an address allowed to control this contract\"},\"bulkMint(address,address[],uint256[])\":{\"details\":\"Mint one token hash type to multiple accounts with multiple quantities\"},\"isController(address)\":{\"details\":\"Check if this address is a controller\"},\"relinquishControl()\":{\"details\":\"Remove the sender address from the list of controllers\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/BulkGovernanceTokenMinter.sol\":\"BulkGovernanceTokenMinter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2222},\"remappings\":[]},\"sources\":{\"src/access/Controllable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"../interfaces/IControllable.sol\\\";\\n\\nabstract contract Controllable is IControllable {\\n    mapping(address => bool) internal _controllers;\\n\\n    /**\\n     * @dev Throws if called by any account not in authorized list\\n     */\\n    modifier onlyController() {\\n        require(\\n            _controllers[msg.sender] == true || address(this) == msg.sender,\\n            \\\"Controllable: caller is not a controller\\\"\\n        );\\n        _;\\n    }\\n\\n    /**\\n     * @dev Add an address allowed to control this contract\\n     */\\n    function _addController(address _controller) internal {\\n        _controllers[_controller] = true;\\n    }\\n\\n    /**\\n     * @dev Add an address allowed to control this contract\\n     */\\n    function addController(address _controller)\\n        external\\n        override\\n        onlyController\\n    {\\n        _controllers[_controller] = true;\\n    }\\n\\n    /**\\n     * @dev Check if this address is a controller\\n     */\\n    function isController(address _address)\\n        external\\n        view\\n        override\\n        returns (bool allowed)\\n    {\\n        allowed = _controllers[_address];\\n    }\\n\\n    /**\\n     * @dev Remove the sender address from the list of controllers\\n     */\\n    function relinquishControl() external override onlyController {\\n        delete _controllers[msg.sender];\\n    }\\n}\\n\",\"keccak256\":\"0xa31f752b3b092c788ea06a6dced266db79c4407d69733d78bc15e519f39e1d3f\",\"license\":\"MIT\"},\"src/interfaces/IControllable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\ninterface IControllable {\\n    event ControllerAdded(\\n        address indexed contractAddress,\\n        address indexed controllerAddress\\n    );\\n    event ControllerRemoved(\\n        address indexed contractAddress,\\n        address indexed controllerAddress\\n    );\\n\\n    function addController(address controller) external;\\n\\n    function isController(address controller) external view returns (bool);\\n\\n    function relinquishControl() external;\\n}\\n\",\"keccak256\":\"0x2a44548d9ba1bcd73d5734b2265db6c1556c013ccc61df621a6cbd5cca42cfaf\",\"license\":\"MIT\"},\"src/interfaces/IGovernanceMintable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\ninterface IGovernanceMintable {\\n    function mint(address account, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x248d74222c03322db1219687adfab7d97fe4eaaa72d1fbebdc93c8d69157f3a2\",\"license\":\"MIT\"},\"src/interfaces/IGovernanceTokenMinter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\ninterface IGovernanceTokenMinter {\\n    function bulkMint(\\n        address token,\\n        address[] memory recipients,\\n        uint256[] memory gquantities\\n    ) external;\\n}\\n\",\"keccak256\":\"0xf6f78292e28fcb5263a1dd13dd7bcb9048279f09e58a940361e4a977d8851b66\",\"license\":\"MIT\"},\"src/interfaces/INFTGemMultiToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface INFTGemMultiToken {\\n    enum TokenType {\\n        GOVERNANCE,\\n        CLAIM,\\n        GEM\\n    }\\n\\n    struct Royalty {\\n        address owner;\\n        uint256 royaltyPermillion;\\n    }\\n\\n    // called by controller to mint a claim or a gem\\n    function mint(\\n        address account,\\n        uint256 tokenHash,\\n        uint256 amount\\n    ) external;\\n\\n    // called by controller to mint a claim or a gem\\n    function mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) external;\\n\\n    function burnBatch(\\n        address account,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) external;\\n\\n    // called by controller to burn a claim\\n    function burn(\\n        address account,\\n        uint256 tokenHash,\\n        uint256 amount\\n    ) external;\\n\\n    function heldTokens(address holder)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    function allHeldTokens(address holder, uint256 _idx)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function allHeldTokensLength(address holder)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function tokenHolders(uint256 _token)\\n        external\\n        view\\n        returns (address[] memory);\\n\\n    function allTokenHolders(uint256 _token, uint256 _idx)\\n        external\\n        view\\n        returns (address);\\n\\n    function allTokenHoldersLength(uint256 _token)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function totalBalances(uint256 _id) external view returns (uint256);\\n\\n    function allProxyRegistries(uint256 _idx) external view returns (address);\\n\\n    function allProxyRegistriesLength() external view returns (uint256);\\n\\n    function addProxyRegistry(address registry) external;\\n\\n    function removeProxyRegistryAt(uint256 index) external;\\n\\n    function getRegistryManager() external view returns (address);\\n\\n    function setRegistryManager(address newManager) external;\\n\\n    function setRoyaltyInfo(\\n        uint256 _tokenId,\\n        address _owner,\\n        uint256 feePermil\\n    ) external;\\n\\n    function lock(uint256 token, uint256 timeframe) external;\\n\\n    function unlockTime(address account, uint256 token)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function setTokenData(\\n        uint256 tokenHash,\\n        TokenType tokenType,\\n        address tokenPool\\n    ) external;\\n\\n    function getTokenData(uint256 tokenHash)\\n        external\\n        view\\n        returns (TokenType, address);\\n}\\n\",\"keccak256\":\"0x1d54431d4f990265d8a0c692430e75c5c77870b78f19264069e1cfe86d7464c0\",\"license\":\"MIT\"},\"src/utils/BulkGovernanceTokenMinter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\nimport \\\"../access/Controllable.sol\\\";\\n\\nimport \\\"../interfaces/INFTGemMultiToken.sol\\\";\\nimport \\\"../interfaces/IGovernanceTokenMinter.sol\\\";\\nimport \\\"../interfaces/IGovernanceMintable.sol\\\";\\n\\n/**\\n * @dev Collection of utility functions that mint tokens\\n */\\ncontract BulkGovernanceTokenMinter is IGovernanceTokenMinter, Controllable {\\n    constructor() {\\n        _addController(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Mint one token hash type to multiple accounts with multiple quantities\\n     */\\n    function bulkMint(\\n        address multitoken,\\n        address[] memory recipients,\\n        uint256[] memory quantities\\n    ) external override onlyController {\\n        for (uint256 i = 0; i < recipients.length; i++) {\\n            IGovernanceMintable(multitoken).mint(recipients[i], quantities[i]);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa2fdcf6cd07f1e40f859764c1b3f46dbb3a4ee0f1b9b280b13255d04df359264\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b610043565b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b6105b5806100526000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063a7fc7a0714610051578063b429afeb14610066578063cbf3164d1461008f578063e1c28bef146100a2575b600080fd5b61006461005f366004610357565b6100aa565b005b610079610074366004610357565b610122565b604051610086919061046e565b60405180910390f35b61006461009d366004610378565b61014d565b61006461026b565b3360009081526020819052604090205460ff161515600114806100cc57503033145b6100f15760405162461bcd60e51b81526004016100e890610479565b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff166000908152602081905260409020805460ff19166001179055565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b3360009081526020819052604090205460ff1615156001148061016f57503033145b61018b5760405162461bcd60e51b81526004016100e890610479565b60005b8251811015610265578373ffffffffffffffffffffffffffffffffffffffff166340c10f198483815181106101d357634e487b7160e01b600052603260045260246000fd5b60200260200101518484815181106101fb57634e487b7160e01b600052603260045260246000fd5b60200260200101516040518363ffffffff1660e01b8152600401610220929190610448565b600060405180830381600087803b15801561023a57600080fd5b505af115801561024e573d6000803e3d6000fd5b50505050808061025d90610524565b91505061018e565b50505050565b3360009081526020819052604090205460ff1615156001148061028d57503033145b6102a95760405162461bcd60e51b81526004016100e890610479565b336000908152602081905260409020805460ff19169055565b803573ffffffffffffffffffffffffffffffffffffffff811681146102e657600080fd5b919050565b600082601f8301126102fb578081fd5b8135602061031061030b83610500565b6104d6565b828152818101908583018385028701840188101561032c578586fd5b855b8581101561034a5781358452928401929084019060010161032e565b5090979650505050505050565b600060208284031215610368578081fd5b610371826102c2565b9392505050565b60008060006060848603121561038c578182fd5b610395846102c2565b925060208085013567ffffffffffffffff808211156103b2578485fd5b818701915087601f8301126103c5578485fd5b81356103d361030b82610500565b81815284810190848601868402860187018c10156103ef578889fd5b8895505b8386101561041857610404816102c2565b8352600195909501949186019186016103f3565b50965050506040870135925080831115610430578384fd5b505061043e868287016102eb565b9150509250925092565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b901515815260200190565b60208082526028908201527f436f6e74726f6c6c61626c653a2063616c6c6572206973206e6f74206120636f60408201527f6e74726f6c6c6572000000000000000000000000000000000000000000000000606082015260800190565b60405181810167ffffffffffffffff811182821017156104f8576104f8610569565b604052919050565b600067ffffffffffffffff82111561051a5761051a610569565b5060209081020190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561056257634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212203736b68809b2b2c7920f226a074bbf3da8b6df5e1ba9077150c2bdc14624325964736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063a7fc7a0714610051578063b429afeb14610066578063cbf3164d1461008f578063e1c28bef146100a2575b600080fd5b61006461005f366004610357565b6100aa565b005b610079610074366004610357565b610122565b604051610086919061046e565b60405180910390f35b61006461009d366004610378565b61014d565b61006461026b565b3360009081526020819052604090205460ff161515600114806100cc57503033145b6100f15760405162461bcd60e51b81526004016100e890610479565b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff166000908152602081905260409020805460ff19166001179055565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b3360009081526020819052604090205460ff1615156001148061016f57503033145b61018b5760405162461bcd60e51b81526004016100e890610479565b60005b8251811015610265578373ffffffffffffffffffffffffffffffffffffffff166340c10f198483815181106101d357634e487b7160e01b600052603260045260246000fd5b60200260200101518484815181106101fb57634e487b7160e01b600052603260045260246000fd5b60200260200101516040518363ffffffff1660e01b8152600401610220929190610448565b600060405180830381600087803b15801561023a57600080fd5b505af115801561024e573d6000803e3d6000fd5b50505050808061025d90610524565b91505061018e565b50505050565b3360009081526020819052604090205460ff1615156001148061028d57503033145b6102a95760405162461bcd60e51b81526004016100e890610479565b336000908152602081905260409020805460ff19169055565b803573ffffffffffffffffffffffffffffffffffffffff811681146102e657600080fd5b919050565b600082601f8301126102fb578081fd5b8135602061031061030b83610500565b6104d6565b828152818101908583018385028701840188101561032c578586fd5b855b8581101561034a5781358452928401929084019060010161032e565b5090979650505050505050565b600060208284031215610368578081fd5b610371826102c2565b9392505050565b60008060006060848603121561038c578182fd5b610395846102c2565b925060208085013567ffffffffffffffff808211156103b2578485fd5b818701915087601f8301126103c5578485fd5b81356103d361030b82610500565b81815284810190848601868402860187018c10156103ef578889fd5b8895505b8386101561041857610404816102c2565b8352600195909501949186019186016103f3565b50965050506040870135925080831115610430578384fd5b505061043e868287016102eb565b9150509250925092565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b901515815260200190565b60208082526028908201527f436f6e74726f6c6c61626c653a2063616c6c6572206973206e6f74206120636f60408201527f6e74726f6c6c6572000000000000000000000000000000000000000000000000606082015260800190565b60405181810167ffffffffffffffff811182821017156104f8576104f8610569565b604052919050565b600067ffffffffffffffff82111561051a5761051a610569565b5060209081020190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561056257634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212203736b68809b2b2c7920f226a074bbf3da8b6df5e1ba9077150c2bdc14624325964736f6c63430008000033",
  "libraries": {
    "Strings": "0xeB3E79099663eC952e02E608E00d463F36b4Fb75",
    "AddressSet": "0x8974D57fCfF9C10E9d41709da86d006604D8c75d",
    "UInt256Set": "0x8B6893DB13b55d4952a51d5188215e2a470515a9",
    "Create2": "0xBa85d3e8E0F9e48F5c21649d33f6d0f9Af12E3f5",
    "WrappedTokenLib": "0x0307a2E913FD8fb384a939Cfb7655C30820727D8",
    "ComplexPoolLib": "0x3802c9d35c585ac6668e24A93Bb341D50662aA4E"
  },
  "devdoc": {
    "details": "Collection of utility functions that mint tokens",
    "kind": "dev",
    "methods": {
      "addController(address)": {
        "details": "Add an address allowed to control this contract"
      },
      "bulkMint(address,address[],uint256[])": {
        "details": "Mint one token hash type to multiple accounts with multiple quantities"
      },
      "isController(address)": {
        "details": "Check if this address is a controller"
      },
      "relinquishControl()": {
        "details": "Remove the sender address from the list of controllers"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12816,
        "contract": "src/utils/BulkGovernanceTokenMinter.sol:BulkGovernanceTokenMinter",
        "label": "_controllers",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}
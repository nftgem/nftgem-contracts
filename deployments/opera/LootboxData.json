{
  "address": "0x87948A720f2d5C437bfBb2F3b823701ca44C3fFE",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "controllerAddress",
          "type": "address"
        }
      ],
      "name": "ControllerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "controllerAddress",
          "type": "address"
        }
      ],
      "name": "ControllerRemoved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "addController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lootbox",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "lootHash",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "probability",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "probabilityIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "probabilityRoll",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxMint",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minted",
              "type": "uint256"
            }
          ],
          "internalType": "struct ILootbox.Loot",
          "name": "lootboxData",
          "type": "tuple"
        }
      ],
      "name": "addLoot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "randomFarmer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lootboxHash",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "minLootPerOpen",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "maxLootPerOpen",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "maxOpens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalLootGenerated",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "probabilitiesSum",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            }
          ],
          "internalType": "struct ILootbox.Lootbox",
          "name": "_lootbox",
          "type": "tuple"
        }
      ],
      "name": "addLootbox",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lootbox",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenSeller",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyPrice",
              "type": "uint256"
            },
            {
              "internalType": "enum ITokenSeller.BuyPriceIncreaseRateType",
              "name": "buyPriceIncreaseRateType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "buyPriceIncreaseRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxQuantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxBuyAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxTotalBuyAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "saleStartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "saleEndTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalPurchased",
              "type": "uint256"
            }
          ],
          "internalType": "struct ITokenSeller.TokenSellerInfo",
          "name": "tokenSellerInfo",
          "type": "tuple"
        }
      ],
      "name": "addTokenSeller",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenSellerIndex",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lootbox",
          "type": "uint256"
        }
      ],
      "name": "allLoot",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "lootHash",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "probability",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "probabilityIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "probabilityRoll",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxMint",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minted",
              "type": "uint256"
            }
          ],
          "internalType": "struct ILootbox.Loot[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "allLootboxes",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "randomFarmer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lootboxHash",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "minLootPerOpen",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "maxLootPerOpen",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "maxOpens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalLootGenerated",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "probabilitiesSum",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            }
          ],
          "internalType": "struct ILootbox.Lootbox",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allLootboxesLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "allTokenSellers",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyPrice",
              "type": "uint256"
            },
            {
              "internalType": "enum ITokenSeller.BuyPriceIncreaseRateType",
              "name": "buyPriceIncreaseRateType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "buyPriceIncreaseRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxQuantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxBuyAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxTotalBuyAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "saleStartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "saleEndTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalPurchased",
              "type": "uint256"
            }
          ],
          "internalType": "struct ITokenSeller.TokenSellerInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allTokenSellersLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lootbox",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "delLoot",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "lootHash",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "probability",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "probabilityIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "probabilityRoll",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxMint",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minted",
              "type": "uint256"
            }
          ],
          "internalType": "struct ILootbox.Loot",
          "name": "lootboxData",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        }
      ],
      "name": "getAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        }
      ],
      "name": "getBool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_data",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        }
      ],
      "name": "getBytes",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFeeManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        }
      ],
      "name": "getInt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_data",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lootbox",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getLoot",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "lootHash",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "probability",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "probabilityIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "probabilityRoll",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxMint",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minted",
              "type": "uint256"
            }
          ],
          "internalType": "struct ILootbox.Loot",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lootbox",
          "type": "address"
        }
      ],
      "name": "getLootboxByAddress",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "randomFarmer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lootboxHash",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "minLootPerOpen",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "maxLootPerOpen",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "maxOpens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalLootGenerated",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "probabilitiesSum",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            }
          ],
          "internalType": "struct ILootbox.Lootbox",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lootbox",
          "type": "uint256"
        }
      ],
      "name": "getLootboxByHash",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "randomFarmer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lootboxHash",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "minLootPerOpen",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "maxLootPerOpen",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "maxOpens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalLootGenerated",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "probabilitiesSum",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            }
          ],
          "internalType": "struct ILootbox.Lootbox",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        }
      ],
      "name": "getStr",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenSeller",
          "type": "address"
        }
      ],
      "name": "getTokenSeller",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyPrice",
              "type": "uint256"
            },
            {
              "internalType": "enum ITokenSeller.BuyPriceIncreaseRateType",
              "name": "buyPriceIncreaseRateType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "buyPriceIncreaseRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxQuantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxBuyAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxTotalBuyAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "saleStartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "saleEndTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalPurchased",
              "type": "uint256"
            }
          ],
          "internalType": "struct ITokenSeller.TokenSellerInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenSeller",
          "type": "address"
        }
      ],
      "name": "increaseBuyPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isController",
      "outputs": [
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lootboxes",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "randomFarmer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lootboxHash",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "minLootPerOpen",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "maxLootPerOpen",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "maxOpens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalLootGenerated",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "probabilitiesSum",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            }
          ],
          "internalType": "struct ILootbox.Lootbox[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "relinquishControl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "setAddr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "bval",
          "type": "bool"
        }
      ],
      "name": "setBool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "setBytes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "feeManagerAddress",
          "type": "address"
        }
      ],
      "name": "setFeeManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setInt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lootbox",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "lootHash",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "probability",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "probabilityIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "probabilityRoll",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxMint",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minted",
              "type": "uint256"
            }
          ],
          "internalType": "struct ILootbox.Loot",
          "name": "lootboxData",
          "type": "tuple"
        }
      ],
      "name": "setLoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "randomFarmer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lootboxHash",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "minLootPerOpen",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "maxLootPerOpen",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "maxOpens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "openCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalLootGenerated",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "probabilitiesSum",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            }
          ],
          "internalType": "struct ILootbox.Lootbox",
          "name": "lootboxData",
          "type": "tuple"
        }
      ],
      "name": "setLootbox",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "value",
          "type": "string"
        }
      ],
      "name": "setStr",
      "outputs": [
        {
          "internalType": "string",
          "name": "oldData",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenSellerAddress",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyPrice",
              "type": "uint256"
            },
            {
              "internalType": "enum ITokenSeller.BuyPriceIncreaseRateType",
              "name": "buyPriceIncreaseRateType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "buyPriceIncreaseRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxQuantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxBuyAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxTotalBuyAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "saleStartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "saleEndTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalPurchased",
              "type": "uint256"
            }
          ],
          "internalType": "struct ITokenSeller.TokenSellerInfo",
          "name": "tokenSellerData",
          "type": "tuple"
        }
      ],
      "name": "setTokenSeller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenSellers",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "buyPrice",
              "type": "uint256"
            },
            {
              "internalType": "enum ITokenSeller.BuyPriceIncreaseRateType",
              "name": "buyPriceIncreaseRateType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "buyPriceIncreaseRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxQuantity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxBuyAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxTotalBuyAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "saleStartTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "saleEndTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "totalPurchased",
              "type": "uint256"
            }
          ],
          "internalType": "struct ITokenSeller.TokenSellerInfo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x31dbd08fb79507d2ba9e3b6c5870249ec08c7488f97fe04325ac4e4678a4333d",
  "receipt": {
    "to": null,
    "from": "0xE5E82ae456c04Ad0879785B4f678A4Fcace12AAf",
    "contractAddress": "0x87948A720f2d5C437bfBb2F3b823701ca44C3fFE",
    "transactionIndex": 1,
    "gasUsed": "3705577",
    "logsBloom": "0x
    "blockHash": "0x0000795000000ecea7357773fe81086bbc0b450dd640b78a4fe2644d12caaf57",
    "transactionHash": "0x31dbd08fb79507d2ba9e3b6c5870249ec08c7488f97fe04325ac4e4678a4333d",
    "logs": [],
    "blockNumber": 16212492,
    "cumulativeGasUsed": "3745187",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "2dcd9e984e50e58528a2168ad5da2fbd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controllerAddress\",\"type\":\"address\"}],\"name\":\"ControllerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controllerAddress\",\"type\":\"address\"}],\"name\":\"ControllerRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lootbox\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lootHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"probability\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"probabilityIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"probabilityRoll\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxMint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minted\",\"type\":\"uint256\"}],\"internalType\":\"struct ILootbox.Loot\",\"name\":\"lootboxData\",\"type\":\"tuple\"}],\"name\":\"addLoot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"randomFarmer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lootboxHash\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"minLootPerOpen\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"maxLootPerOpen\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxOpens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalLootGenerated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"probabilitiesSum\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"internalType\":\"struct ILootbox.Lootbox\",\"name\":\"_lootbox\",\"type\":\"tuple\"}],\"name\":\"addLootbox\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lootbox\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenSeller\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyPrice\",\"type\":\"uint256\"},{\"internalType\":\"enum ITokenSeller.BuyPriceIncreaseRateType\",\"name\":\"buyPriceIncreaseRateType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"buyPriceIncreaseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxQuantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBuyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTotalBuyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEndTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalPurchased\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenSeller.TokenSellerInfo\",\"name\":\"tokenSellerInfo\",\"type\":\"tuple\"}],\"name\":\"addTokenSeller\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenSellerIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lootbox\",\"type\":\"uint256\"}],\"name\":\"allLoot\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lootHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"probability\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"probabilityIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"probabilityRoll\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxMint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minted\",\"type\":\"uint256\"}],\"internalType\":\"struct ILootbox.Loot[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"allLootboxes\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"randomFarmer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lootboxHash\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"minLootPerOpen\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"maxLootPerOpen\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxOpens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalLootGenerated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"probabilitiesSum\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"internalType\":\"struct ILootbox.Lootbox\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allLootboxesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"allTokenSellers\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyPrice\",\"type\":\"uint256\"},{\"internalType\":\"enum ITokenSeller.BuyPriceIncreaseRateType\",\"name\":\"buyPriceIncreaseRateType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"buyPriceIncreaseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxQuantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBuyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTotalBuyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEndTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalPurchased\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenSeller.TokenSellerInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allTokenSellersLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lootbox\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"delLoot\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lootHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"probability\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"probabilityIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"probabilityRoll\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxMint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minted\",\"type\":\"uint256\"}],\"internalType\":\"struct ILootbox.Loot\",\"name\":\"lootboxData\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"getAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"getBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_data\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"getBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"getInt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_data\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lootbox\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getLoot\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lootHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"probability\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"probabilityIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"probabilityRoll\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxMint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minted\",\"type\":\"uint256\"}],\"internalType\":\"struct ILootbox.Loot\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lootbox\",\"type\":\"address\"}],\"name\":\"getLootboxByAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"randomFarmer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lootboxHash\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"minLootPerOpen\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"maxLootPerOpen\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxOpens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalLootGenerated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"probabilitiesSum\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"internalType\":\"struct ILootbox.Lootbox\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lootbox\",\"type\":\"uint256\"}],\"name\":\"getLootboxByHash\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"randomFarmer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lootboxHash\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"minLootPerOpen\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"maxLootPerOpen\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxOpens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalLootGenerated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"probabilitiesSum\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"internalType\":\"struct ILootbox.Lootbox\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"getStr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenSeller\",\"type\":\"address\"}],\"name\":\"getTokenSeller\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyPrice\",\"type\":\"uint256\"},{\"internalType\":\"enum ITokenSeller.BuyPriceIncreaseRateType\",\"name\":\"buyPriceIncreaseRateType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"buyPriceIncreaseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxQuantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBuyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTotalBuyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEndTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalPurchased\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenSeller.TokenSellerInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenSeller\",\"type\":\"address\"}],\"name\":\"increaseBuyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isController\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lootboxes\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"randomFarmer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lootboxHash\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"minLootPerOpen\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"maxLootPerOpen\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxOpens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalLootGenerated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"probabilitiesSum\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"internalType\":\"struct ILootbox.Lootbox[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relinquishControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"setAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"bval\",\"type\":\"bool\"}],\"name\":\"setBool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"setBytes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeManagerAddress\",\"type\":\"address\"}],\"name\":\"setFeeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setInt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lootbox\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lootHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"probability\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"probabilityIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"probabilityRoll\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxMint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minted\",\"type\":\"uint256\"}],\"internalType\":\"struct ILootbox.Loot\",\"name\":\"lootboxData\",\"type\":\"tuple\"}],\"name\":\"setLoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"randomFarmer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lootboxHash\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"minLootPerOpen\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"maxLootPerOpen\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxOpens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalLootGenerated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"probabilitiesSum\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"internalType\":\"struct ILootbox.Lootbox\",\"name\":\"lootboxData\",\"type\":\"tuple\"}],\"name\":\"setLootbox\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setStr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"oldData\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenSellerAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyPrice\",\"type\":\"uint256\"},{\"internalType\":\"enum ITokenSeller.BuyPriceIncreaseRateType\",\"name\":\"buyPriceIncreaseRateType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"buyPriceIncreaseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxQuantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBuyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTotalBuyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEndTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalPurchased\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenSeller.TokenSellerInfo\",\"name\":\"tokenSellerData\",\"type\":\"tuple\"}],\"name\":\"setTokenSeller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenSellers\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyPrice\",\"type\":\"uint256\"},{\"internalType\":\"enum ITokenSeller.BuyPriceIncreaseRateType\",\"name\":\"buyPriceIncreaseRateType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"buyPriceIncreaseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxQuantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBuyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTotalBuyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEndTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalPurchased\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenSeller.TokenSellerInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addController(address)\":{\"details\":\"Add an address allowed to control this contract\"},\"getStr(string)\":{\"details\":\"set a string value\",\"params\":{\"key\":\"the key of the string value\"},\"returns\":{\"_0\":\"the value if the value was set, falsey otherwise\"}},\"isController(address)\":{\"details\":\"Check if this address is a controller\"},\"relinquishControl()\":{\"details\":\"Remove the sender address from the list of controllers\"},\"setStr(string,string)\":{\"details\":\"set a string value\",\"params\":{\"key\":\"the key of the string value\",\"value\":\"the value to set\"},\"returns\":{\"oldData\":\"string the old data the the new data replaced\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lootbox/LootboxData.sol\":\"LootboxData\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2222},\"remappings\":[]},\"sources\":{\"src/access/Controllable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"../interfaces/IControllable.sol\\\";\\n\\nabstract contract Controllable is IControllable {\\n    mapping(address => bool) internal _controllers;\\n\\n    /**\\n     * @dev Throws if called by any account not in authorized list\\n     */\\n    modifier onlyController() {\\n        require(\\n            _controllers[msg.sender] == true || address(this) == msg.sender,\\n            \\\"Controllable: caller is not a controller\\\"\\n        );\\n        _;\\n    }\\n\\n    /**\\n     * @dev Add an address allowed to control this contract\\n     */\\n    function _addController(address _controller) internal {\\n        _controllers[_controller] = true;\\n    }\\n\\n    /**\\n     * @dev Add an address allowed to control this contract\\n     */\\n    function addController(address _controller)\\n        external\\n        override\\n        onlyController\\n    {\\n        _controllers[_controller] = true;\\n    }\\n\\n    /**\\n     * @dev Check if this address is a controller\\n     */\\n    function isController(address _address)\\n        external\\n        view\\n        override\\n        returns (bool allowed)\\n    {\\n        allowed = _controllers[_address];\\n    }\\n\\n    /**\\n     * @dev Remove the sender address from the list of controllers\\n     */\\n    function relinquishControl() external override onlyController {\\n        delete _controllers[msg.sender];\\n    }\\n}\\n\",\"keccak256\":\"0xa31f752b3b092c788ea06a6dced266db79c4407d69733d78bc15e519f39e1d3f\",\"license\":\"MIT\"},\"src/data/GenericDataSource.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\nimport \\\"../interfaces/IGenericDataSource.sol\\\";\\nimport \\\"../access/Controllable.sol\\\";\\n\\n/// this contract provides a generic data source for other smart contracts.\\n/// data can be set and retrieved by the owner of the contract. The basic datattypes\\n/// are supported: string, bytes, uint, bool, and address. Data is set and retrieved\\n/// through the 'setXXX' and 'getXXX' methods. This contract exists to enable a\\n/// modular design pattern that enables easy upgrades of business logic without\\n/// changing the smart contract.\\ncontract GenericDatasource is IGenericDatasource, Controllable {\\n    mapping(string => string) internal stringData;\\n    mapping(string => bytes) internal bytesData;\\n    mapping(string => uint256) internal uintData;\\n    mapping(string => bool) internal boolData;\\n    mapping(string => address) internal addressData;\\n\\n    /// @dev contract constructor\\n    constructor() {\\n        _addController(msg.sender);\\n    }\\n\\n    /// @dev set a string value\\n    /// @param key the key of the string value\\n    /// @return the value if the value was set, falsey otherwise\\n    function getStr(string memory key)\\n        external\\n        view\\n        override\\n        onlyController\\n        returns (string memory)\\n    {\\n        return stringData[key];\\n    }\\n\\n    /// @dev set a string value\\n    /// @param key the key of the string value\\n    /// @param value the value to set\\n    /// @return oldData string the old data the the new data replaced\\n    function setStr(string memory key, string memory value)\\n        external\\n        override\\n        onlyController\\n        returns (string memory oldData)\\n    {\\n        oldData = stringData[key];\\n        stringData[key] = value;\\n    }\\n\\n    function getInt(string memory key)\\n        external\\n        view\\n        override\\n        onlyController\\n        returns (uint256 _data)\\n    {\\n        _data = uintData[key];\\n    }\\n\\n    function setInt(string memory key, uint256 value)\\n        external\\n        override\\n        onlyController\\n    {\\n        uintData[key] = value;\\n    }\\n\\n    function getBool(string memory key)\\n        external\\n        view\\n        override\\n        onlyController\\n        returns (bool _data)\\n    {\\n        _data = boolData[key];\\n    }\\n\\n    function setBool(string memory key, bool bval)\\n        external\\n        override\\n        onlyController\\n    {\\n        boolData[key] = bval;\\n    }\\n\\n    function getBytes(string memory key)\\n        external\\n        view\\n        override\\n        onlyController\\n        returns (bytes memory)\\n    {\\n        return bytesData[key];\\n    }\\n\\n    function setBytes(string memory key, bytes memory value)\\n        external\\n        override\\n        onlyController\\n    {\\n        bytesData[key] = value;\\n    }\\n\\n    function getAddr(string memory key)\\n        external\\n        view\\n        override\\n        onlyController\\n        returns (address)\\n    {\\n        return addressData[key];\\n    }\\n\\n    function setAddr(string memory key, address value)\\n        external\\n        override\\n        onlyController\\n    {\\n        addressData[key] = value;\\n    }\\n}\\n\",\"keccak256\":\"0x4ebc46c468e417f971a5bbb64df3b16ac3dc4e6211e29387b49dcd9bb6f813fc\",\"license\":\"MIT\"},\"src/interfaces/IControllable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\ninterface IControllable {\\n    event ControllerAdded(\\n        address indexed contractAddress,\\n        address indexed controllerAddress\\n    );\\n    event ControllerRemoved(\\n        address indexed contractAddress,\\n        address indexed controllerAddress\\n    );\\n\\n    function addController(address controller) external;\\n\\n    function isController(address controller) external view returns (bool);\\n\\n    function relinquishControl() external;\\n}\\n\",\"keccak256\":\"0x2a44548d9ba1bcd73d5734b2265db6c1556c013ccc61df621a6cbd5cca42cfaf\",\"license\":\"MIT\"},\"src/interfaces/IGenericDataSource.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\ninterface IGenericDatasource {\\n    function getStr(string memory key) external view returns (string memory);\\n\\n    function setStr(string memory key, string memory value)\\n        external\\n        returns (string memory);\\n\\n    function getInt(string memory key) external view returns (uint256);\\n\\n    function setInt(string memory key, uint256 value) external;\\n\\n    function getBool(string memory key) external view returns (bool);\\n\\n    function setBool(string memory key, bool value) external;\\n\\n    function getBytes(string memory key) external view returns (bytes memory);\\n\\n    function setBytes(string memory key, bytes memory value) external;\\n\\n    function getAddr(string memory key) external view returns (address);\\n\\n    function setAddr(string memory key, address value) external;\\n}\\n\",\"keccak256\":\"0x00d1ba729e1f93becb7b522bbefdeb28ee51f7b2806644e72e42eeda796861d4\",\"license\":\"MIT\"},\"src/interfaces/ILootbox.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\nimport \\\"./ITokenSeller.sol\\\";\\n\\n/// @dev A lootbox is a contract that works with an erc1155 to implement a game lootbox:\\n/// a lootbox is a contract that accepts a single quantity of some erc1155 tokenhash and\\n/// then based on a set of rules goverened by probability, mints one or more outgoing tokens\\n/// as it burns the incoming token. The rules are defined by the lootbox author and are\\n/// stored in the lootbox contract. A newly-created lootbox contract assigns controllership\\n/// to its creator, who can them add other controllers, and can set the rules for the lootbox.\\n/// Each lootbox is configured with some number of Loot items, each of which has deterministic\\n/// tokenhash. These loot items each have names, symboles, and a probability of being minted.\\n/// Users open the lootbox by providing the right gem to the lootbox contract, and then\\n/// the lootbox contract mints the right number of tokens for the user. This contract uses\\n/// a pseudo-random deterministic sieve to determine the number and type of tokens minted\\n\\ninterface ILootbox {\\n    // the lootbox itself\\n    struct Lootbox {\\n        address owner; // the owner of the lootbox. they can do some admin things others cannot\\n        address contractAddress; // this is the address of the smart contract that implements lootbox\\n        address randomFarmer; // address of the random number generator used to generate the random numbers\\n        address multitoken; // address of the multitoken contract that mints the tokens\\n        uint256 lootboxHash; // identifier and lootbox token hash for the lootbox\\n        string symbol; // the symbol of the lootbox\\n        string name; // the name of the lootbox\\n        string description; // the description of the lootbox\\n        uint8 minLootPerOpen; // the minimum number of loot items that can be issued per open\\n        uint8 maxLootPerOpen; // the maximum number of loot items that can be issued per open\\n        uint256 maxOpens; // maximum number of times the lootbox can be opened\\n        // these are all values set by the system - not configurable by the user\\n        uint256 openCount;\\n        uint256 totalLootGenerated;\\n        uint256 probabilitiesSum;\\n        bool initialized;\\n    }\\n\\n    // loot items\\n    struct Loot {\\n        uint256 lootHash;\\n        address owner;\\n        address multitoken;\\n        string symbol;\\n        string name;\\n        uint256 probability;\\n        uint256 probabilityIndex;\\n        uint256 probabilityRoll;\\n        uint256 maxMint;\\n        uint256 minted;\\n    }\\n\\n    event LootboxCreated(\\n        address indexed creator,\\n        uint256 indexed hash,\\n        address indexed contractAddress,\\n        Lootbox data\\n    );\\n\\n    event LootboxMigrated(\\n        address indexed migrator,\\n        uint256 indexed hash,\\n        address indexed oldContractAddress,\\n        address newContractAddress,\\n        Lootbox data\\n    );\\n\\n    event LootboxOpened(\\n        address indexed opener,\\n        uint256 indexed hash,\\n        Lootbox openedLootbox,\\n        Loot[] receivedLoot\\n    );\\n\\n    event LootAdded(\\n        address indexed adder,\\n        uint256 indexed hash,\\n        Lootbox addedLootbox,\\n        Loot addedLoot\\n    );\\n\\n    event LootboxTokensMinted(\\n        address indexed minter,\\n        uint256 indexed hash,\\n        Lootbox mintedLootbox,\\n        uint256 mintedAmount\\n    );\\n\\n    event LootMinted(\\n        address indexed minter,\\n        uint256 indexed hash,\\n        Lootbox mintedLootbox,\\n        Loot mintedLoot\\n    );\\n\\n    function initialize(\\n        address lootboxData,\\n        ITokenSeller.TokenSellerInfo memory tokenSellerInfo,\\n        ILootbox.Lootbox memory lootboxInit\\n    ) external;\\n\\n    function mintLootboxTokens(uint256 amount) external;\\n\\n    function mintLoot(uint8 index, uint256 amount)\\n        external\\n        returns (Loot memory);\\n\\n    function openLootbox() external returns (Loot[] memory);\\n\\n    function allLoot() external view returns (Loot[] memory);\\n\\n    function addLoot(Loot memory _loot) external returns (uint256);\\n\\n    function getLoot(uint256 index) external view returns (Loot memory);\\n\\n    // TODO: add a allItemsLength()\\n}\\n\",\"keccak256\":\"0xf0e627372286960d65a46f4df6310c64b557055428322b8f2201f3a2352c6d16\",\"license\":\"MIT\"},\"src/interfaces/ILootboxData.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\nimport \\\"./ILootbox.sol\\\";\\nimport \\\"./ITokenSeller.sol\\\";\\n\\ninterface ILootboxData {\\n    function getFeeManager() external view returns (address);\\n\\n    function setFeeManager(address feeManagerAddress) external;\\n\\n    function addLootbox(ILootbox.Lootbox memory)\\n        external\\n        returns (uint256 lootbox);\\n\\n    function getLootboxByAddress(address lootbox)\\n        external\\n        view\\n        returns (ILootbox.Lootbox memory);\\n\\n    function getLootboxByHash(uint256 lootbox)\\n        external\\n        view\\n        returns (ILootbox.Lootbox memory);\\n\\n    function setLootbox(\\n        ILootbox.Lootbox memory lootboxData\\n    ) external;\\n\\n    function lootboxes() external view returns (ILootbox.Lootbox[] memory);\\n\\n    function allLootboxes(uint256 index)\\n        external\\n        view\\n        returns (ILootbox.Lootbox memory);\\n\\n    function allLootboxesLength() external view returns (uint256);\\n\\n    function getLoot(uint256 lootbox, uint256 index)\\n        external\\n        view\\n        returns (ILootbox.Loot memory);\\n\\n    function addLoot(uint256 lootbox, ILootbox.Loot memory lootboxData)\\n        external\\n        returns (uint256);\\n\\n    function setLoot(\\n        uint256 lootbox,\\n        uint256 index,\\n        ILootbox.Loot memory lootboxData\\n    ) external;\\n\\n    function allLoot(uint256 lootbox)\\n        external\\n        view\\n        returns (ILootbox.Loot[] memory);\\n\\n    function delLoot(uint256 lootbox, uint256 index)\\n        external\\n        returns (ILootbox.Loot memory);\\n\\n    function addTokenSeller(\\n        address tokenSeller,\\n        ITokenSeller.TokenSellerInfo memory\\n    ) external returns (uint256 tokenSellerIndex);\\n\\n    function getTokenSeller(address tokenSeller)\\n        external\\n        view\\n        returns (ITokenSeller.TokenSellerInfo memory);\\n\\n    function setTokenSeller(\\n        address tokenSellerAddress,\\n        ITokenSeller.TokenSellerInfo memory tokenSellerData\\n    ) external;\\n\\n    function tokenSellers()\\n        external\\n        view\\n        returns (ITokenSeller.TokenSellerInfo[] memory);\\n\\n    function allTokenSellers(uint256 index)\\n        external\\n        view\\n        returns (ITokenSeller.TokenSellerInfo memory);\\n\\n    function allTokenSellersLength() external view returns (uint256);\\n\\n    function increaseBuyPrice(address tokenSeller) external view  returns (uint256);\\n}\\n\",\"keccak256\":\"0x8bb32e5de27e125c38a97c75464ca6a6b585228794ffb4d276bd2129f79f92b1\",\"license\":\"MIT\"},\"src/interfaces/INFTComplexGemPool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Interface for a Bitgem staking pool\\n */\\ninterface INFTComplexGemPool {\\n    enum RequirementType {\\n        ERC20,\\n        ERC1155,\\n        POOL\\n    }\\n\\n    /**\\n     * @dev Event generated when an NFT claim is created using ETH\\n     */\\n    event NFTGemClaimCreated(\\n        address indexed account,\\n        address indexed pool,\\n        uint256 indexed claimHash,\\n        uint256 length,\\n        uint256 quantity,\\n        uint256 amountPaid\\n    );\\n\\n    /**\\n     * @dev Event generated when an NFT claim is created using ERC20 tokens\\n     */\\n    event NFTGemERC20ClaimCreated(\\n        address indexed account,\\n        address indexed pool,\\n        uint256 indexed claimHash,\\n        uint256 length,\\n        address token,\\n        uint256 quantity,\\n        uint256 conversionRate\\n    );\\n\\n    /**\\n     * @dev Event generated when an NFT claim is redeemed\\n     */\\n    event NFTGemClaimRedeemed(\\n        address indexed account,\\n        address indexed pool,\\n        uint256 indexed claimHash,\\n        uint256 amountPaid,\\n        uint256 quantity,\\n        uint256 feeAssessed\\n    );\\n\\n    /**\\n     * @dev Event generated when an NFT claim is redeemed\\n     */\\n    event NFTGemERC20ClaimRedeemed(\\n        address indexed account,\\n        address indexed pool,\\n        uint256 indexed claimHash,\\n        address token,\\n        uint256 ethPrice,\\n        uint256 tokenAmount,\\n        uint256 quantity,\\n        uint256 feeAssessed\\n    );\\n\\n    /**\\n     * @dev Event generated when a gem is created\\n     */\\n    event NFTGemCreated(\\n        address account,\\n        address pool,\\n        uint256 claimHash,\\n        uint256 gemHash,\\n        uint256 quantity\\n    );\\n\\n    function setMultiToken(address token) external;\\n\\n    function setGovernor(address addr) external;\\n\\n    function setFeeTracker(address addr) external;\\n\\n    function setSwapHelper(address addr) external;\\n\\n    function mintGenesisGems(address creator, address funder) external;\\n\\n    function createClaim(uint256 timeframe) external payable;\\n\\n    function createClaims(uint256 timeframe, uint256 count) external payable;\\n\\n    function createERC20Claim(address erc20token, uint256 tokenAmount) external;\\n\\n    function createERC20Claims(\\n        address erc20token,\\n        uint256 tokenAmount,\\n        uint256 count\\n    ) external;\\n\\n    function collectClaim(uint256 claimHash, bool requireMature) external;\\n\\n    function purchaseGems(uint256 count) external payable;\\n\\n    function initialize(\\n        string memory,\\n        string memory,\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256,\\n        uint256,\\n        address\\n    ) external;\\n}\\n\",\"keccak256\":\"0x82c44e3e50944c227762a26043a1307be6c51ce8621153fe0a69b0633abe0a73\",\"license\":\"MIT\"},\"src/interfaces/INFTComplexGemPoolData.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\nimport \\\"./INFTGemMultiToken.sol\\\";\\nimport \\\"./INFTComplexGemPool.sol\\\";\\n\\ninterface INFTComplexGemPoolData {\\n    enum PriceIncrementType {\\n        COMPOUND,\\n        INVERSELOG,\\n        NONE\\n    }\\n\\n    /**\\n     * @dev a requirement of erc20, erc1155, or nft gem\\n     */\\n    struct InputRequirement {\\n        address token;\\n        address pool;\\n        // TODO reassess whether we really want to support foreign reqs\\n        INFTComplexGemPool.RequirementType inputType; // 1 = erc20, 2 = erc1155, 3 = pool\\n        uint256 tokenId; // if erc20 slot 0 contains required amount\\n        uint256 minVal;\\n        bool takeCustody;\\n        bool burn;\\n        bool exactAmount;\\n    }\\n\\n    /**\\n     * @dev Event generated when an NFT claim is imported from a legacy contract\\n     */\\n    event NFTGemImported(\\n        address indexed converter,\\n        address indexed pool,\\n        address oldPool,\\n        address oldToken,\\n        uint256 indexed gemHash,\\n        uint256 quantity\\n    );\\n\\n    function addInputRequirement(\\n        address theToken,\\n        address pool,\\n        INFTComplexGemPool.RequirementType inputType,\\n        uint256 theTokenId,\\n        uint256 minAmount,\\n        bool takeCustody,\\n        bool burn,\\n        bool exactAmount\\n    ) external;\\n\\n    function updateInputRequirement(\\n        uint256 ndx,\\n        address theToken,\\n        address pool,\\n        INFTComplexGemPool.RequirementType inputType,\\n        uint256 tid,\\n        uint256 minAmount,\\n        bool takeCustody,\\n        bool burn,\\n        bool exactAmount\\n    ) external;\\n\\n    function allInputRequirementsLength() external returns (uint256);\\n\\n    function allInputRequirements(uint256 ndx)\\n        external\\n        view\\n        returns (\\n            address,\\n            address,\\n            INFTComplexGemPool.RequirementType,\\n            uint256,\\n            uint256,\\n            bool,\\n            bool,\\n            bool\\n        );\\n\\n    function settings()\\n        external\\n        view\\n        returns (\\n            string memory settingsSymbol,\\n            string memory settingsName,\\n            string memory settingsDescription,\\n            uint256 settingsCategory,\\n            uint256 settingsEthPrice,\\n            uint256 settingsMinTime,\\n            uint256 settingsMaxTime,\\n            uint256 settingsDiffStep,\\n            uint256 settingsMacClaims,\\n            uint256 settingsMaxQuantityPerClaim,\\n            uint256 settingsMaxClaimsPerAccount\\n        );\\n\\n    function stats()\\n        external\\n        view\\n        returns (\\n            bool statsVisible,\\n            uint256 statsClaimedCount,\\n            uint256 statsMintedCount,\\n            uint256 statsTotalStakedEth,\\n            uint256 statsNextClaimHash,\\n            uint256 statsNextGemHash,\\n            uint256 statsNextClaimId,\\n            uint256 statsNextGemId\\n        );\\n\\n    function claim(uint256 claimHash)\\n        external\\n        view\\n        returns (\\n            uint256 claimClaimAmount,\\n            uint256 claimClaimQuantity,\\n            uint256 claimClaimUnlockTime,\\n            uint256 claimClaimTokenAmount,\\n            address claimStakedToken,\\n            uint256 claimNextClaimId\\n        );\\n\\n    function token(uint256 tokenHash)\\n        external\\n        view\\n        returns (\\n            INFTGemMultiToken.TokenType tokenTokenType,\\n            uint256 tokenTokenId,\\n            address tokenTokenSource\\n        );\\n\\n    function addAllowedTokenSource(address allowedToken) external;\\n\\n    function removeAllowedTokenSource(address allowedToken) external;\\n\\n    function allowedTokenSources() external view returns (address[] memory);\\n\\n    function importLegacyGem(\\n        address pool,\\n        address legacyToken,\\n        uint256 tokenHash,\\n        address recipient,\\n        bool burnOld\\n    ) external;\\n\\n    function isLegacyGemImported(address account, uint256 tokenhash)\\n        external\\n        view\\n        returns (bool);\\n\\n    function setNextIds(uint256 _nextClaimId, uint256 _nextGemId) external;\\n\\n    function tokenHashes() external view returns (uint256[] memory);\\n\\n    function setTokenHashes(uint256[] memory inTokenHashes) external;\\n\\n    // pool is inited with these parameters. Once inited, all\\n    // but ethPrice are immutable. ethPrice only increases. ONLY UP\\n    function symbol() external view returns (string memory);\\n\\n    function ethPrice() external view returns (uint256);\\n\\n    function setVisible(bool isVisible) external;\\n\\n    function visible() external view returns (bool);\\n\\n    function setCategory(uint256 theCategory) external;\\n\\n    function category() external view returns (uint256);\\n\\n    function setDescription(string memory desc) external;\\n\\n    function description() external view returns (string memory);\\n\\n    // these describe the pools created contents over time. This is where\\n    // you query to get information about a token that a pool created\\n    function claimedCount() external view returns (uint256);\\n\\n    function claimAmount(uint256 claimId) external view returns (uint256);\\n\\n    function claimQuantity(uint256 claimId) external view returns (uint256);\\n\\n    function maxQuantityPerClaim() external view returns (uint256);\\n\\n    function maxClaimsPerAccount() external view returns (uint256);\\n\\n    function setMaxQuantityPerClaim(uint256 claimId) external;\\n\\n    function setMaxClaimsPerAccount(uint256 claimId) external;\\n\\n    function mintedCount() external view returns (uint256);\\n\\n    function totalStakedEth() external view returns (uint256);\\n\\n    function tokenId(uint256 tokenHash) external view returns (uint256);\\n\\n    function tokenType(uint256 tokenHash)\\n        external\\n        view\\n        returns (INFTGemMultiToken.TokenType);\\n\\n    function allTokenHashesLength() external view returns (uint256);\\n\\n    function allTokenHashes(uint256 ndx) external view returns (uint256);\\n\\n    function nextClaimHash() external view returns (uint256);\\n\\n    function nextGemHash() external view returns (uint256);\\n\\n    function nextGemId() external view returns (uint256);\\n\\n    function nextClaimId() external view returns (uint256);\\n\\n    function setValidateErc20(bool) external;\\n\\n    function validateErc20() external view returns (bool);\\n\\n    function claimUnlockTime(uint256 claimId) external view returns (uint256);\\n\\n    function claimTokenAmount(uint256 claimId) external view returns (uint256);\\n\\n    function gemClaimHash(uint256 gemHash) external view returns (uint256);\\n\\n    function stakedToken(uint256 claimId) external view returns (address);\\n\\n    function allowedTokensLength() external view returns (uint256);\\n\\n    function allowedTokens(uint256 idx) external view returns (address);\\n\\n    function isTokenAllowed(address tkn) external view returns (bool);\\n\\n    function addAllowedToken(address tkn) external;\\n\\n    function removeAllowedToken(address tkn) external;\\n\\n    function allowPurchase() external view returns (bool);\\n\\n    function setAllowPurchase(bool allow) external;\\n\\n    function enabled() external view returns (bool);\\n\\n    function setEnabled(bool enable) external;\\n\\n    function priceIncrementType() external view returns (PriceIncrementType);\\n\\n    function setPriceIncrementType(PriceIncrementType incrementType) external;\\n}\\n\",\"keccak256\":\"0x2807ed48afc7c0b78841112d919328b6acd112d00363ab523e7ac0281f501f45\",\"license\":\"MIT\"},\"src/interfaces/INFTGemMultiToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface INFTGemMultiToken {\\n    enum TokenType {\\n        GOVERNANCE,\\n        CLAIM,\\n        GEM\\n    }\\n\\n    struct Royalty {\\n        address owner;\\n        uint256 royaltyPermillion;\\n    }\\n\\n    // called by controller to mint a claim or a gem\\n    function mint(\\n        address account,\\n        uint256 tokenHash,\\n        uint256 amount\\n    ) external;\\n\\n    // called by controller to mint a claim or a gem\\n    function mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) external;\\n\\n    function burnBatch(\\n        address account,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) external;\\n\\n    // called by controller to burn a claim\\n    function burn(\\n        address account,\\n        uint256 tokenHash,\\n        uint256 amount\\n    ) external;\\n\\n    function heldTokens(address holder)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    function allHeldTokens(address holder, uint256 _idx)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function allHeldTokensLength(address holder)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function tokenHolders(uint256 _token)\\n        external\\n        view\\n        returns (address[] memory);\\n\\n    function allTokenHolders(uint256 _token, uint256 _idx)\\n        external\\n        view\\n        returns (address);\\n\\n    function allTokenHoldersLength(uint256 _token)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function totalBalances(uint256 _id) external view returns (uint256);\\n\\n    function allProxyRegistries(uint256 _idx) external view returns (address);\\n\\n    function allProxyRegistriesLength() external view returns (uint256);\\n\\n    function addProxyRegistry(address registry) external;\\n\\n    function removeProxyRegistryAt(uint256 index) external;\\n\\n    function getRegistryManager() external view returns (address);\\n\\n    function setRegistryManager(address newManager) external;\\n\\n    function setRoyaltyInfo(\\n        uint256 _tokenId,\\n        address _owner,\\n        uint256 feePermil\\n    ) external;\\n\\n    function lock(uint256 token, uint256 timeframe) external;\\n\\n    function unlockTime(address account, uint256 token)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function setTokenData(\\n        uint256 tokenHash,\\n        TokenType tokenType,\\n        address tokenPool\\n    ) external;\\n\\n    function getTokenData(uint256 tokenHash)\\n        external\\n        view\\n        returns (TokenType, address);\\n}\\n\",\"keccak256\":\"0x1d54431d4f990265d8a0c692430e75c5c77870b78f19264069e1cfe86d7464c0\",\"license\":\"MIT\"},\"src/interfaces/ITokenSeller.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\n/// @dev A token seller is a contract that can sell tokens to a token buyer.\\n/// The token buyer can buy tokens from the seller by paying a certain amount\\n/// of base currency to receive a certain amount of erc1155 tokens. the number\\n/// of tokens that can be bought is limited by the seller - the seller can\\n/// specify the maximum number of tokens that can be bought per transaction\\n/// and the maximum number of tokens that can be bought in total for a given\\n/// address. The seller can also specify the price of erc1155 tokens and how\\n/// that price increases per successful transaction. the token seller assumes\\n/// supply of the erc1155 is unlimited and features a request method\\n\\ninterface ITokenSeller {\\n    enum BuyPriceIncreaseRateType {\\n        NONE,\\n        FIXED,\\n        EXPONENTIAL,\\n        INVERSELOG\\n    }\\n\\n    struct TokenSellerInfo {\\n        address multitoken;\\n        address contractAddress;\\n        address owner;\\n        uint256 tokenHash;\\n        uint256 buyPrice;\\n        BuyPriceIncreaseRateType buyPriceIncreaseRateType;\\n        uint256 buyPriceIncreaseRate;\\n        uint256 maxQuantity;\\n        uint256 maxBuyAmount;\\n        uint256 maxTotalBuyAmount;\\n        uint256 saleStartTime;\\n        uint256 saleEndTime;\\n        bool initialized;\\n        bool open;\\n        uint256 totalPurchased;\\n    }\\n\\n    event TokenSellerCreated(address indexed creator, TokenSellerInfo info);\\n\\n    event Sold(\\n        address indexed contractAddress,\\n        address indexed buyer,\\n        uint256 indexed tokenHash,\\n        uint256 price,\\n        uint256 amount\\n    );\\n\\n    event Requested(\\n        address indexed contractAddress,\\n        address indexed seller,\\n        uint256 indexed tokenId,\\n        uint256 amount\\n    );\\n\\n    event Funded(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        uint256 amount\\n    );\\n\\n    event FundsCollected(address indexed receiver, uint256 indexed amount);\\n\\n    event TokenSellerMigrated(\\n        address indexed migrator,\\n        address indexed hash,\\n        address indexed oldContractAddress,\\n        address newContractAddress,\\n        TokenSellerInfo data\\n    );\\n\\n    function initialize(address tokenSellerData, TokenSellerInfo memory _info)\\n        external;\\n\\n    function isInitialized() external view returns (bool);\\n\\n    function getInfo() external view returns (TokenSellerInfo memory);\\n\\n    function setInfo(TokenSellerInfo memory _info) external;\\n\\n    /// @dev Buy tokens from the token seller.\\n    /// @param _amount The amount of erc1155 tokens to buy.\\n    /// @return The amount of erc1155 tokens that were bought.\\n    function buy(uint256 _amount) external payable returns (uint256);\\n\\n    /// @dev Request tokens from the token provider.\\n    /// @param _recipient The address of the token receiver.\\n    /// @param _amount The amount of erc1155 tokens to buy.\\n    /// @return The amount of erc1155 tokens that were requested.\\n    function request(address _recipient, uint256 _amount)\\n        external\\n        returns (uint256);\\n\\n    function receivePayout(address payable _recipient) external;\\n}\\n\",\"keccak256\":\"0x8783cfa454e469fc9425161cdc4336a2ea0db1379ad2828de0ab9197c36ea43c\",\"license\":\"MIT\"},\"src/lootbox/LootboxData.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\nimport \\\"../data/GenericDataSource.sol\\\";\\n\\nimport \\\"../interfaces/ILootboxData.sol\\\";\\n\\nimport \\\"../interfaces/ITokenSeller.sol\\\";\\n\\nimport \\\"../interfaces/INFTGemMultiToken.sol\\\";\\n\\nimport \\\"../interfaces/INFTComplexGemPoolData.sol\\\";\\n\\nimport \\\"../interfaces/ILootbox.sol\\\";\\n\\ncontract LootboxData is ILootboxData, GenericDatasource {\\n    // all track lootboxes - as an array, by hash, and by symbol hash\\n    ILootbox.Lootbox[] private _allLootboxes;\\n    mapping(uint256 => ILootbox.Lootbox) private _lootboxes;\\n    mapping(address => ILootbox.Lootbox) private _lootboxesByAddress;\\n\\n    // tracks loot for each lootbox\\n    mapping(uint256 => ILootbox.Loot[]) private _loot;\\n\\n    // tracks token sale data\\n    ITokenSeller.TokenSellerInfo[] private _allTokenSellers;\\n    mapping(address => ITokenSeller.TokenSellerInfo) private _tokenSellers;\\n\\n    constructor() {\\n        _addController(msg.sender);\\n    }\\n\\n    function addLootbox(ILootbox.Lootbox memory _lootbox)\\n        external\\n        override\\n        returns (uint256 lootbox)\\n    {\\n        require(bytes(_lootbox.symbol).length != 0, \\\"symbol must be set\\\");\\n        if(_lootbox.lootboxHash == 0) {\\n            _lootbox.lootboxHash = uint256(keccak256(abi.encodePacked(_lootbox.symbol)));\\n        }\\n        if(_lootbox.contractAddress == address(0)) {\\n            _lootbox.contractAddress = msg.sender;\\n        }\\n        _allLootboxes.push(_lootbox);\\n        _lootboxes[_lootbox.lootboxHash] = _lootbox;\\n        _lootboxesByAddress[_lootbox.contractAddress] = _lootbox;\\n        return _allLootboxes.length - 1;\\n    }\\n\\n    function getLootboxByAddress(address lootbox)\\n        external\\n        view\\n        override\\n        onlyController\\n        returns (ILootbox.Lootbox memory)\\n    {\\n        return _lootboxesByAddress[lootbox];\\n    }\\n\\n    function getLootboxByHash(uint256 lootbox)\\n        external\\n        view\\n        override\\n        onlyController\\n        returns (ILootbox.Lootbox memory)\\n    {\\n        return _lootboxes[lootbox];\\n    }\\n\\n    function lootboxes()\\n        external\\n        view\\n        override\\n        onlyController\\n        returns (ILootbox.Lootbox[] memory)\\n    {\\n        return _allLootboxes;\\n    }\\n\\n    function allLootboxes(uint256 index)\\n        external\\n        view\\n        override\\n        onlyController\\n        returns (ILootbox.Lootbox memory)\\n    {\\n        return _allLootboxes[index];\\n    }\\n\\n    function allLootboxesLength()\\n        external\\n        view\\n        override\\n        onlyController\\n        returns (uint256)\\n    {\\n        return _allLootboxes.length;\\n    }\\n\\n    function setLootbox(\\n        ILootbox.Lootbox memory lootboxData\\n    ) external override onlyController {\\n        require(_lootboxes[lootboxData.lootboxHash].contractAddress != address(0)\\n        && _lootboxes[lootboxData.lootboxHash].contractAddress == lootboxData.contractAddress, \\\"lootbox must be initialized\\\");\\n        // TODO: upddate this so it only sets the updateable fields\\n        _lootboxes[lootboxData.lootboxHash] = lootboxData;\\n    }\\n\\n    function getLoot(uint256 lootbox, uint256 index)\\n        external\\n        view\\n        override\\n        onlyController\\n        returns (ILootbox.Loot memory)\\n    {\\n        return _loot[lootbox][index];\\n    }\\n\\n    function addLoot(uint256 lootbox, ILootbox.Loot memory lootboxData)\\n        external\\n        override\\n        onlyController\\n        returns (uint256)\\n    {\\n        require(_lootboxes[lootbox].owner != address(0), \\\"Lootbox is not set\\\"); // require a valid lootbox\\n        _loot[lootbox].push(lootboxData);\\n        return _loot[lootbox].length;\\n    }\\n\\n    function setLoot(\\n        uint256 lootbox,\\n        uint256 index,\\n        ILootbox.Loot memory lootboxData\\n    ) external override onlyController {\\n        require(index < _loot[lootbox].length, \\\"Index out of bounds\\\");\\n        _loot[lootbox][index] = lootboxData;\\n    }\\n\\n    function allLoot(uint256 lootbox)\\n        external\\n        view\\n        override\\n        onlyController\\n        returns (ILootbox.Loot[] memory)\\n    {\\n        return _loot[lootbox];\\n    }\\n\\n    function delLoot(uint256 lootbox, uint256 index)\\n        external\\n        override\\n        onlyController\\n        returns (ILootbox.Loot memory lootboxData)\\n    {\\n        require(\\n            index >= 0 && index < _loot[lootbox].length,\\n            \\\"Index out of bounds\\\"\\n        );\\n        uint256 lastEl = _loot[lootbox].length - 1;\\n        lootboxData = _loot[lootbox][index];\\n        if (lastEl > index) {\\n            _loot[lootbox][index] = _loot[lootbox][lastEl];\\n        }\\n        _loot[lootbox].pop();\\n    }\\n\\n    function addTokenSeller(\\n        address tokenSeller,\\n        ITokenSeller.TokenSellerInfo memory tokenSellerInfo\\n    ) external override onlyController returns (uint256 tokenSellerIndex) {\\n        require(\\n            _tokenSellers[tokenSeller].multitoken == address(0),\\n            \\\"Token seller already exists\\\"\\n        );\\n        _tokenSellers[tokenSeller] = tokenSellerInfo;\\n        return _allTokenSellers.length;\\n    }\\n\\n    function getTokenSeller(address tokenSeller)\\n        external\\n        view\\n        override\\n        onlyController\\n        returns (ITokenSeller.TokenSellerInfo memory)\\n    {\\n        return _tokenSellers[tokenSeller];\\n    }\\n\\n    function setTokenSeller(\\n        address tokenSellerAddress,\\n        ITokenSeller.TokenSellerInfo memory tokenSellerData\\n    ) external override onlyController {\\n        require(msg.sender == tokenSellerAddress, \\\"Token seller is not set\\\");\\n        _tokenSellers[tokenSellerAddress] = tokenSellerData;\\n    }\\n\\n    function tokenSellers()\\n        external\\n        view\\n        override\\n        onlyController\\n        returns (ITokenSeller.TokenSellerInfo[] memory)\\n    {\\n        return _allTokenSellers;\\n    }\\n\\n    function allTokenSellers(uint256 index)\\n        external\\n        view\\n        override\\n        onlyController\\n        returns (ITokenSeller.TokenSellerInfo memory)\\n    {\\n        return _allTokenSellers[index];\\n    }\\n\\n    function allTokenSellersLength()\\n        external\\n        view\\n        override\\n        onlyController\\n        returns (uint256)\\n    {\\n        return _allTokenSellers.length;\\n    }\\n\\n    function getFeeManager() external view override returns (address) {\\n        return this.getAddr(\\\"feeManagerAddress\\\");\\n    }\\n\\n    function setFeeManager(address feeManagerAddress) external override {\\n        this.setAddr(\\\"feeManagerAddress\\\", feeManagerAddress);\\n    }\\n\\n    function increaseBuyPrice(address tokenSeller) external view override returns (uint256) {\\n        ITokenSeller.TokenSellerInfo memory _tokenSeller = _tokenSellers[tokenSeller];\\n        if (\\n            _tokenSeller.buyPriceIncreaseRateType ==\\n            ITokenSeller.BuyPriceIncreaseRateType.NONE\\n        ) {\\n            return _tokenSeller.buyPrice;\\n        } else if (\\n            _tokenSeller.buyPriceIncreaseRateType ==\\n            ITokenSeller.BuyPriceIncreaseRateType.FIXED\\n        ) {\\n            return _tokenSeller.buyPrice + _tokenSeller.buyPriceIncreaseRate;\\n        } else if (\\n            _tokenSeller.buyPriceIncreaseRateType ==\\n            ITokenSeller.BuyPriceIncreaseRateType.EXPONENTIAL\\n        ) {\\n            return\\n                _tokenSeller.buyPrice +\\n                (_tokenSeller.buyPrice / _tokenSeller.buyPriceIncreaseRate);\\n        } else if (\\n            _tokenSeller.buyPriceIncreaseRateType ==\\n            ITokenSeller.BuyPriceIncreaseRateType.INVERSELOG\\n        ) {\\n            return\\n                _tokenSeller.buyPrice +\\n                (_tokenSeller.buyPriceIncreaseRate / _tokenSeller.buyPrice);\\n        }\\n        return _tokenSeller.buyPrice;\\n    }\\n}\\n\",\"keccak256\":\"0x476e9efb2934984241180eed1075a667a5fe25d5cf312b00bec95c967ac24b35\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200001d336200002e565b62000028336200002e565b62000052565b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b6141a780620000626000396000f3fe608060405234801561001057600080fd5b50600436106102265760003560e01c80639535ce121161012a578063d8ba5903116100bd578063e449c52a1161008c578063ec89b53f11610071578063ec89b53f146104ce578063f2d63826146104e1578063fda69fae146104e957610226565b8063e449c52a146104a8578063ebb4465f146104bb57610226565b8063d8ba590314610467578063d8de899d1461047a578063e01c8b251461048d578063e1c28bef146104a057610226565b8063a7fc7a07116100f9578063a7fc7a071461040e578063b429afeb14610421578063b8b2bdad14610434578063d502db971461044757610226565b80639535ce12146103a85780639a929e32146103c85780639b73a6fb146103db578063a6cc11a6146103fb57610226565b8063472d35b9116101bd5780635d6101771161018c5780637813917311610171578063781391731461037857806389c010361461038b57806392fe2aba1461039357610226565b80635d6101771461035057806368d8641a1461036557610226565b8063472d35b91461030257806349107dc614610315578063516d16b91461032857806353b8a8641461033057610226565b8063213b9eb8116101f9578063213b9eb81461029c57806322f7a450146102af57806329962c5e146102cf57806336805961146102e257610226565b8063017680521461022b57806305308ff01461025457806308197e14146102745780630f09b13e14610289575b600080fd5b61023e6102393660046138fd565b6104fc565b60405161024b9190614021565b60405180910390f35b61026761026236600461345e565b6107e6565b60405161024b9190614043565b610287610282366004613971565b610a14565b005b61023e6102973660046138fd565b610b72565b6102876102aa3660046135e4565b610c2a565b6102c26102bd36600461345e565b610cac565b60405161024b9190614034565b6102876102dd36600461378e565b610e0f565b6102f56102f03660046136f4565b611002565b60405161024b9190613e19565b61028761031036600461345e565b611125565b61028761032336600461374b565b611196565b6102676111f9565b61034361033e366004613950565b61123e565b60405161024b919061400e565b61035861145e565b60405161024b9190613d6c565b610287610373366004613680565b611757565b6102c26103863660046138fd565b6117cc565b6102676118bf565b61039b611904565b60405161024b9190613dbf565b6103bb6103b63660046135a9565b611a97565b60405161024b9190613e0e565b6102676103d6366004613915565b611afe565b6103ee6103e93660046138fd565b611c52565b60405161024b9190613d0c565b610343610409366004613950565b611e80565b61028761041c36600461345e565b6122eb565b6103bb61042f36600461345e565b61234d565b610287610442366004613634565b61236b565b61045a6104553660046135a9565b6123de565b60405161024b9190613cf8565b610287610475366004613496565b61244c565b6102f56104883660046135a9565b6125e8565b61026761049b36600461378e565b6126d7565b610287612bf0565b6102f56104b63660046135a9565b612c47565b6102676104c9366004613496565b612c98565b61023e6104dc36600461345e565b612e4d565b61045a612f07565b6102676104f73660046135a9565b612f99565b610504612ffd565b3360009081526020819052604090205460ff1615156001148061052657503033145b61054b5760405162461bcd60e51b815260040161054290613ed1565b60405180910390fd5b6006828154811061056c57634e487b7160e01b600052603260045260246000fd5b6000918252602091829020604080516101e081018252600e90930290910180546001600160a01b03908116845260018201548116948401949094526002810154841691830191909152600381015490921660608201526004820154608082015260058201805491929160a0840191906105e4906140f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610610906140f5565b801561065d5780601f106106325761010080835404028352916020019161065d565b820191906000526020600020905b81548152906001019060200180831161064057829003601f168201915b50505050508152602001600682018054610676906140f5565b80601f01602080910402602001604051908101604052809291908181526020018280546106a2906140f5565b80156106ef5780601f106106c4576101008083540402835291602001916106ef565b820191906000526020600020905b8154815290600101906020018083116106d257829003601f168201915b50505050508152602001600782018054610708906140f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610734906140f5565b80156107815780601f1061075657610100808354040283529160200191610781565b820191906000526020600020905b81548152906001019060200180831161076457829003601f168201915b5050509183525050600882015460ff80821660208401526101009091048116604083015260098301546060830152600a8301546080830152600b83015460a0830152600c83015460c0830152600d90920154909116151560e09091015290505b919050565b6001600160a01b038082166000908152600b6020908152604080832081516101e0810183528154861681526001820154861693810193909352600281015490941690820152600380840154606083015260048401546080830152600584015492938493909160a084019160ff169081111561087157634e487b7160e01b600052602160045260246000fd5b600381111561089057634e487b7160e01b600052602160045260246000fd5b815260068201546020820152600782015460408201526008820154606082015260098201546080820152600a82015460a0820152600b82015460c0820152600c82015460ff808216151560e08401526101009182900416151590820152600d9091015461012090910152905060008160a00151600381111561092257634e487b7160e01b600052602160045260246000fd5b1415610933576080015190506107e1565b60018160a00151600381111561095957634e487b7160e01b600052602160045260246000fd5b141561097b578060c0015181608001516109739190614076565b9150506107e1565b60028160a0015160038111156109a157634e487b7160e01b600052602160045260246000fd5b14156109ca578060c0015181608001516109bb919061408e565b81608001516109739190614076565b60038160a0015160038111156109f057634e487b7160e01b600052602160045260246000fd5b1415610a0a5780608001518160c001516109bb919061408e565b6080015192915050565b3360009081526020819052604090205460ff16151560011480610a3657503033145b610a525760405162461bcd60e51b815260040161054290613ed1565b6000838152600960205260409020548210610a7f5760405162461bcd60e51b815260040161054290613fa0565b6000838152600960205260409020805482919084908110610ab057634e487b7160e01b600052603260045260246000fd5b60009182526020918290208351600a90920201908155828201516001820180546001600160a01b039283166001600160a01b0319918216179091556040850151600284018054919093169116179055606083015180519192610b1a9260038501929091019061309f565b5060808201518051610b3691600484019160209091019061309f565b5060a0820151600582015560c0820151600682015560e08201516007820155610100820151600882015561012090910151600990910155505050565b610b7a612ffd565b3360009081526020819052604090205460ff16151560011480610b9c57503033145b610bb85760405162461bcd60e51b815260040161054290613ed1565b60008281526007602090815260409182902082516101e08101845281546001600160a01b03908116825260018301548116938201939093526002820154831693810193909352600381015490911660608301526004810154608083015260058101805460a0840191906105e4906140f5565b3360009081526020819052604090205460ff16151560011480610c4c57503033145b610c685760405162461bcd60e51b815260040161054290613ed1565b80600583604051610c799190613cdc565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b03199092169190911790555050565b610cb4613123565b3360009081526020819052604090205460ff16151560011480610cd657503033145b610cf25760405162461bcd60e51b815260040161054290613ed1565b6001600160a01b038083166000908152600b602090815260409182902082516101e0810184528154851681526001820154851692810192909252600281015490931691810191909152600380830154606083015260048301546080830152600583015491929160a084019160ff90911690811115610d8057634e487b7160e01b600052602160045260246000fd5b6003811115610d9f57634e487b7160e01b600052602160045260246000fd5b815260068201546020820152600782015460408201526008820154606082015260098201546080820152600a82015460a0820152600b82015460c0820152600c82015460ff808216151560e08401526101009182900416151590820152600d909101546101209091015292915050565b3360009081526020819052604090205460ff16151560011480610e3157503033145b610e4d5760405162461bcd60e51b815260040161054290613ed1565b60808101516000908152600760205260409020600101546001600160a01b031615801590610ea357506020808201516080830151600090815260079092526040909120600101546001600160a01b039081169116145b610ebf5760405162461bcd60e51b815260040161054290613e2c565b608081018051600090815260076020908152604091829020845181546001600160a01b03199081166001600160a01b0392831617835583870151600184018054831691841691909117905593860151600283018054861691831691909117905560608601516003830180549095169116179092559151600482015560a083015180518493610f5492600585019291019061309f565b5060c08201518051610f7091600684019160209091019061309f565b5060e08201518051610f8c91600784019160209091019061309f565b506101008281015160088301805461012086015160ff1991821660ff9485161761ff00191693169093029190911790556101408301516009830155610160830151600a830155610180830151600b8301556101a0830151600c8301556101c090920151600d909101805490921690151517905550565b3360009081526020819052604090205460609060ff1615156001148061102757503033145b6110435760405162461bcd60e51b815260040161054290613ed1565b6001836040516110539190613cdc565b9081526020016040518091039020805461106c906140f5565b80601f0160208091040260200160405190810160405280929190818152602001828054611098906140f5565b80156110e55780601f106110ba576101008083540402835291602001916110e5565b820191906000526020600020905b8154815290600101906020018083116110c857829003601f168201915b50505050509050816001846040516110fd9190613cdc565b9081526020016040518091039020908051906020019061111e92919061309f565b5092915050565b6040517f213b9eb8000000000000000000000000000000000000000000000000000000008152309063213b9eb890611161908490600401613f77565b600060405180830381600087803b15801561117b57600080fd5b505af115801561118f573d6000803e3d6000fd5b5050505050565b3360009081526020819052604090205460ff161515600114806111b857503033145b6111d45760405162461bcd60e51b815260040161054290613ed1565b806003836040516111e59190613cdc565b908152604051908190036020019020555050565b3360009081526020819052604081205460ff1615156001148061121b57503033145b6112375760405162461bcd60e51b815260040161054290613ed1565b5060065490565b61124661319d565b3360009081526020819052604090205460ff1615156001148061126857503033145b6112845760405162461bcd60e51b815260040161054290613ed1565b60008381526009602052604090208054839081106112b257634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805161014081018252600a9093029091018054835260018101546001600160a01b039081169484019490945260028101549093169082015260038201805491929160608401919061130f906140f5565b80601f016020809104026020016040519081016040528092919081815260200182805461133b906140f5565b80156113885780601f1061135d57610100808354040283529160200191611388565b820191906000526020600020905b81548152906001019060200180831161136b57829003601f168201915b505050505081526020016004820180546113a1906140f5565b80601f01602080910402602001604051908101604052809291908181526020018280546113cd906140f5565b801561141a5780601f106113ef5761010080835404028352916020019161141a565b820191906000526020600020905b8154815290600101906020018083116113fd57829003601f168201915b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152505090505b92915050565b3360009081526020819052604090205460609060ff1615156001148061148357503033145b61149f5760405162461bcd60e51b815260040161054290613ed1565b6006805480602002602001604051908101604052809291908181526020016000905b8282101561174e576000848152602090819020604080516101e081018252600e860290920180546001600160a01b03908116845260018201548116948401949094526002810154841691830191909152600381015490921660608201526004820154608082015260058201805491929160a084019190611540906140f5565b80601f016020809104026020016040519081016040528092919081815260200182805461156c906140f5565b80156115b95780601f1061158e576101008083540402835291602001916115b9565b820191906000526020600020905b81548152906001019060200180831161159c57829003601f168201915b505050505081526020016006820180546115d2906140f5565b80601f01602080910402602001604051908101604052809291908181526020018280546115fe906140f5565b801561164b5780601f106116205761010080835404028352916020019161164b565b820191906000526020600020905b81548152906001019060200180831161162e57829003601f168201915b50505050508152602001600782018054611664906140f5565b80601f0160208091040260200160405190810160405280929190818152602001828054611690906140f5565b80156116dd5780601f106116b2576101008083540402835291602001916116dd565b820191906000526020600020905b8154815290600101906020018083116116c057829003601f168201915b5050509183525050600882015460ff8082166020808501919091526101009092048116604084015260098401546060840152600a8401546080840152600b84015460a0840152600c84015460c0840152600d90930154909216151560e09091015290825260019290920191016114c1565b50505050905090565b3360009081526020819052604090205460ff1615156001148061177957503033145b6117955760405162461bcd60e51b815260040161054290613ed1565b806002836040516117a69190613cdc565b908152602001604051809103902090805190602001906117c792919061309f565b505050565b6117d4613123565b3360009081526020819052604090205460ff161515600114806117f657503033145b6118125760405162461bcd60e51b815260040161054290613ed1565b600a828154811061183357634e487b7160e01b600052603260045260246000fd5b6000918252602091829020604080516101e081018252600e90930290910180546001600160a01b0390811684526001820154811694840194909452600281015490931690820152600380830154606083015260048301546080830152600583015491929160a084019160ff90911690811115610d8057634e487b7160e01b600052602160045260246000fd5b3360009081526020819052604081205460ff161515600114806118e157503033145b6118fd5760405162461bcd60e51b815260040161054290613ed1565b50600a5490565b3360009081526020819052604090205460609060ff1615156001148061192957503033145b6119455760405162461bcd60e51b815260040161054290613ed1565b600a805480602002602001604051908101604052809291908181526020016000905b8282101561174e576000848152602090819020604080516101e081018252600e860290920180546001600160a01b0390811684526001820154811694840194909452600281015490931690820152600380830154606083015260048301546080830152600583015491929160a084019160ff909116908111156119fa57634e487b7160e01b600052602160045260246000fd5b6003811115611a1957634e487b7160e01b600052602160045260246000fd5b81526006820154602080830191909152600783015460408301526008830154606083015260098301546080830152600a83015460a0830152600b83015460c0830152600c83015460ff808216151560e08501526101009182900416151590830152600d90920154610120909101529082526001929092019101611967565b3360009081526020819052604081205460ff16151560011480611ab957503033145b611ad55760405162461bcd60e51b815260040161054290613ed1565b600482604051611ae59190613cdc565b9081526040519081900360200190205460ff1692915050565b3360009081526020819052604081205460ff16151560011480611b2057503033145b611b3c5760405162461bcd60e51b815260040161054290613ed1565b6000838152600760205260409020546001600160a01b0316611b705760405162461bcd60e51b815260040161054290613fd7565b6000838152600960209081526040808320805460018082018355918552938390208651600a909502019384558583015190840180546001600160a01b03199081166001600160a01b039384161790915591860151600285018054909316911617905560608401518051859392611bed92600385019291019061309f565b5060808201518051611c0991600484019160209091019061309f565b5060a0820151600582015560c0820151600682015560e0820151600782015561010082015160088201556101209091015160099182015560009384526020525050604090205490565b3360009081526020819052604090205460609060ff16151560011480611c7757503033145b611c935760405162461bcd60e51b815260040161054290613ed1565b600082815260096020908152604080832080548251818502810185019093528083529193909284015b82821015611e755760008481526020908190206040805161014081018252600a86029092018054835260018101546001600160a01b0390811694840194909452600281015490931690820152600382018054919291606084019190611d20906140f5565b80601f0160208091040260200160405190810160405280929190818152602001828054611d4c906140f5565b8015611d995780601f10611d6e57610100808354040283529160200191611d99565b820191906000526020600020905b815481529060010190602001808311611d7c57829003601f168201915b50505050508152602001600482018054611db2906140f5565b80601f0160208091040260200160405190810160405280929190818152602001828054611dde906140f5565b8015611e2b5780601f10611e0057610100808354040283529160200191611e2b565b820191906000526020600020905b815481529060010190602001808311611e0e57829003601f168201915b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152505081526020019060010190611cbc565b505050509050919050565b611e8861319d565b3360009081526020819052604090205460ff16151560011480611eaa57503033145b611ec65760405162461bcd60e51b815260040161054290613ed1565b6000838152600960205260409020548210611ef35760405162461bcd60e51b815260040161054290613fa0565b600083815260096020526040812054611f0e906001906140ae565b600085815260096020526040902080549192509084908110611f4057634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805161014081018252600a9093029091018054835260018101546001600160a01b0390811694840194909452600281015490931690820152600382018054919291606084019190611f9d906140f5565b80601f0160208091040260200160405190810160405280929190818152602001828054611fc9906140f5565b80156120165780601f10611feb57610100808354040283529160200191612016565b820191906000526020600020905b815481529060010190602001808311611ff957829003601f168201915b5050505050815260200160048201805461202f906140f5565b80601f016020809104026020016040519081016040528092919081815260200182805461205b906140f5565b80156120a85780601f1061207d576101008083540402835291602001916120a8565b820191906000526020600020905b81548152906001019060200180831161208b57829003601f168201915b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152505091508281111561222057600084815260096020526040902080548290811061211b57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600a020160096000868152602001908152602001600020848154811061215b57634e487b7160e01b600052603260045260246000fd5b600091825260209091208254600a9092020190815560018083015490820180546001600160a01b039283166001600160a01b031991821617909155600280850154908401805491909316911617905560038083018054918301916121be906140f5565b6121c9929190613202565b5060048201816004019080546121de906140f5565b6121e9929190613202565b5060058201548160050155600682015481600601556007820154816007015560088201548160080155600982015481600901559050505b600084815260096020526040902080548061224b57634e487b7160e01b600052603160045260246000fd5b600082815260208120600a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909301928302018181556001810180546001600160a01b03199081169091556002820180549091169055906122af600383018261327d565b6122bd60048301600061327d565b5060006005820181905560068201819055600782018190556008820181905560099091015590555092915050565b3360009081526020819052604090205460ff1615156001148061230d57503033145b6123295760405162461bcd60e51b815260040161054290613ed1565b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b6001600160a01b031660009081526020819052604090205460ff1690565b3360009081526020819052604090205460ff1615156001148061238d57503033145b6123a95760405162461bcd60e51b815260040161054290613ed1565b806004836040516123ba9190613cdc565b908152604051908190036020019020805491151560ff199092169190911790555050565b3360009081526020819052604081205460ff1615156001148061240057503033145b61241c5760405162461bcd60e51b815260040161054290613ed1565b60058260405161242c9190613cdc565b908152604051908190036020019020546001600160a01b03169050919050565b3360009081526020819052604090205460ff1615156001148061246e57503033145b61248a5760405162461bcd60e51b815260040161054290613ed1565b336001600160a01b038316146124b25760405162461bcd60e51b815260040161054290613f2e565b6001600160a01b038083166000908152600b6020908152604091829020845181549085166001600160a01b0319918216178255918501516001808301805492871692851692909217909155928501516002820180549190951692169190911790925560608301516003808401919091556080840151600484015560a08401516005840180548695949293919260ff1990911691849081111561256457634e487b7160e01b600052602160045260246000fd5b021790555060c0820151600682015560e082015160078201556101008083015160088301556101208301516009830155610140830151600a830155610160830151600b830155610180830151600c830180546101a086015160ff199091169215159290921761ff0019169115159092021790556101c090910151600d909101555050565b3360009081526020819052604090205460609060ff1615156001148061260d57503033145b6126295760405162461bcd60e51b815260040161054290613ed1565b6002826040516126399190613cdc565b90815260200160405180910390208054612652906140f5565b80601f016020809104026020016040519081016040528092919081815260200182805461267e906140f5565b80156126cb5780601f106126a0576101008083540402835291602001916126cb565b820191906000526020600020905b8154815290600101906020018083116126ae57829003601f168201915b50505050509050919050565b60008160a0015151600014156126ff5760405162461bcd60e51b815260040161054290613e63565b608082015161273b578160a0015160405160200161271d9190613cdc565b60408051601f19818403018152919052805160209091012060808301525b60208201516001600160a01b0316612754573360208301525b6006805460018101825560009190915282517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f600e90920291820180546001600160a01b03199081166001600160a01b039384161782556020808701517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4086018054841691861691909117905560408701517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4186018054841691861691909117905560608701517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4286018054909316941693909317905560808501517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4384015560a08501518051869492936128ad937ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d440192019061309f565b5060c082015180516128c991600684019160209091019061309f565b5060e082015180516128e591600784019160209091019061309f565b506101008281015160088301805461012086015160ff1991821660ff9485161761ff00191693169093029190911790556101408301516009830155610160830151600a830155610180830151600b8301556101a0830151600c8301556101c090920151600d9091018054909216901515179055608082018051600090815260076020908152604091829020855181546001600160a01b03199081166001600160a01b0392831617835583880151600184018054831691841691909117905593870151600283018054861691831691909117905560608701516003830180549095169116179092559151600482015560a0840151805185936129ed92600585019291019061309f565b5060c08201518051612a0991600684019160209091019061309f565b5060e08201518051612a2591600784019160209091019061309f565b50610100828101516008838101805461012087015160ff1991821660ff9586161761ff0019169416909402929092179091556101408401516009840155610160840151600a840155610180840151600b8401556101a0840151600c8401556101c090930151600d9092018054909116911515919091179055602083810180516001600160a01b039081166000908152938352604093849020865181546001600160a01b031990811691841691909117825592516001820180548516918416919091179055938601516002850180548416918316919091179055606086015160038501805490931691161790556080840151600483015560a08401518051859392612b3692600585019291019061309f565b5060c08201518051612b5291600684019160209091019061309f565b5060e08201518051612b6e91600784019160209091019061309f565b506101008281015160088301805461012086015160ff1991821660ff9485161761ff00191693169093029190911790556101408301516009830155610160830151600a830155610180830151600b8301556101a0830151600c8301556101c090920151600d9091018054909216901515179055600654611458906001906140ae565b3360009081526020819052604090205460ff16151560011480612c1257503033145b612c2e5760405162461bcd60e51b815260040161054290613ed1565b336000908152602081905260409020805460ff19169055565b3360009081526020819052604090205460609060ff16151560011480612c6c57503033145b612c885760405162461bcd60e51b815260040161054290613ed1565b6001826040516126399190613cdc565b3360009081526020819052604081205460ff16151560011480612cba57503033145b612cd65760405162461bcd60e51b815260040161054290613ed1565b6001600160a01b038381166000908152600b60205260409020541615612d0e5760405162461bcd60e51b815260040161054290613e9a565b6001600160a01b038084166000908152600b6020908152604091829020855181549085166001600160a01b0319918216178255918601516001808301805492871692851692909217909155928601516002820180549190951692169190911790925560608401516003808401919091556080850151600484015560a08501516005840180548795949293919260ff19909116918490811115612dc057634e487b7160e01b600052602160045260246000fd5b021790555060c0820151600682015560e082015160078201556101008083015160088301556101208301516009830155610140830151600a80840191909155610160840151600b840155610180840151600c840180546101a087015160ff199091169215159290921761ff001916911515909302179091556101c090920151600d90910155549392505050565b612e55612ffd565b3360009081526020819052604090205460ff16151560011480612e7757503033145b612e935760405162461bcd60e51b815260040161054290613ed1565b6001600160a01b0380831660009081526008602090815260409182902082516101e08101845281548516815260018201548516928101929092526002810154841692820192909252600382015490921660608301526004810154608083015260058101805460a0840191906105e4906140f5565b6040517fd502db97000000000000000000000000000000000000000000000000000000008152600090309063d502db9790612f4490600401613f65565b60206040518083038186803b158015612f5c57600080fd5b505afa158015612f70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f94919061347a565b905090565b3360009081526020819052604081205460ff16151560011480612fbb57503033145b612fd75760405162461bcd60e51b815260040161054290613ed1565b600382604051612fe79190613cdc565b9081526020016040518091039020549050919050565b604051806101e0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001606081526020016060815260200160608152602001600060ff168152602001600060ff168152602001600081526020016000815260200160008152602001600081526020016000151581525090565b8280546130ab906140f5565b90600052602060002090601f0160209004810192826130cd5760008555613113565b82601f106130e657805160ff1916838001178555613113565b82800160010185558215613113579182015b828111156131135782518255916020019190600101906130f8565b5061311f9291506132bc565b5090565b604080516101e08101825260008082526020820181905291810182905260608101829052608081018290529060a08201908152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600015158152602001600015158152602001600081525090565b6040518061014001604052806000815260200160006001600160a01b0316815260200160006001600160a01b03168152602001606081526020016060815260200160008152602001600081526020016000815260200160008152602001600081525090565b82805461320e906140f5565b90600052602060002090601f0160209004810192826132305760008555613113565b82601f106132415780548555613113565b8280016001018555821561311357600052602060002091601f016020900482015b82811115613113578254825591600101919060010190613262565b508054613289906140f5565b6000825580601f1061329b57506132b9565b601f0160209004906000526020600020908101906132b991906132bc565b50565b5b8082111561311f57600081556001016132bd565b600067ffffffffffffffff8311156132eb576132eb614146565b6132fe6020601f19601f8601160161404c565b905082815283838301111561331257600080fd5b828260208301376000602084830101529392505050565b80356107e18161415c565b803580151581146107e157600080fd5b8035600481106107e157600080fd5b600082601f830112613363578081fd5b613372838335602085016132d1565b9392505050565b600061014080838503121561338c578182fd5b6133958161404c565b915050813581526133a860208301613329565b60208201526133b960408301613329565b6040820152606082013567ffffffffffffffff808211156133d957600080fd5b6133e585838601613353565b606084015260808401359150808211156133fe57600080fd5b5061340b84828501613353565b60808301525060a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525092915050565b803560ff811681146107e157600080fd5b60006020828403121561346f578081fd5b81356133728161415c565b60006020828403121561348b578081fd5b81516133728161415c565b6000808284036102008112156134aa578182fd5b83356134b58161415c565b92506101e0601f1982018113156134ca578283fd5b6134d38161404c565b91506134e160208601613329565b82526134ef60408601613329565b602083015261350060608601613329565b60408301526080850135606083015260a0850135608083015261352560c08601613344565b60a083015260e085013560c08301526101008086013560e084015261012080870135828501526101409150818701358185015250610160808701358285015261018091508187013581850152506101a0613580818801613334565b828501526101c09150613594828801613334565b90840152940135938101939093525092909150565b6000602082840312156135ba578081fd5b813567ffffffffffffffff8111156135d0578182fd5b6135dc84828501613353565b949350505050565b600080604083850312156135f6578182fd5b823567ffffffffffffffff81111561360c578283fd5b61361885828601613353565b92505060208301356136298161415c565b809150509250929050565b60008060408385031215613646578182fd5b823567ffffffffffffffff81111561365c578283fd5b61366885828601613353565b92505061367760208401613334565b90509250929050565b60008060408385031215613692578182fd5b823567ffffffffffffffff808211156136a9578384fd5b6136b586838701613353565b935060208501359150808211156136ca578283fd5b508301601f810185136136db578182fd5b6136ea858235602084016132d1565b9150509250929050565b60008060408385031215613706578182fd5b823567ffffffffffffffff8082111561371d578384fd5b61372986838701613353565b9350602085013591508082111561373e578283fd5b506136ea85828601613353565b6000806040838503121561375d578182fd5b823567ffffffffffffffff811115613773578283fd5b61377f85828601613353565b95602094909401359450505050565b60006020828403121561379f578081fd5b813567ffffffffffffffff808211156137b6578283fd5b81840191506101e08083870312156137cc578384fd5b6137d58161404c565b90506137e083613329565b81526137ee60208401613329565b60208201526137ff60408401613329565b604082015261381060608401613329565b60608201526080830135608082015260a083013582811115613830578485fd5b61383c87828601613353565b60a08301525060c083013582811115613853578485fd5b61385f87828601613353565b60c08301525060e083013582811115613876578485fd5b61388287828601613353565b60e083015250610100915061389882840161344d565b8282015261012091506138ac82840161344d565b918101919091526101408281013590820152610160808301359082015261018080830135908201526101a080830135908201526101c0906138ee828401613334565b91810191909152949350505050565b60006020828403121561390e578081fd5b5035919050565b60008060408385031215613927578182fd5b82359150602083013567ffffffffffffffff811115613944578182fd5b6136ea85828601613379565b60008060408385031215613962578182fd5b50508035926020909101359150565b600080600060608486031215613985578081fd5b8335925060208401359150604084013567ffffffffffffffff8111156139a9578182fd5b6139b586828701613379565b9150509250925092565b6001600160a01b03169052565b15159052565b600081518084526139ea8160208601602086016140c5565b601f01601f19169290920160200192915050565b60048110613a1c57634e487b7160e01b600052602160045260246000fd5b9052565b601181527f6665654d616e6167657241646472657373000000000000000000000000000000602082015260400190565b6000610140825184526020830151613a6b60208601826139bf565b506040830151613a7e60408601826139bf565b506060830151816060860152613a96828601826139d2565b91505060808301518482036080860152613ab082826139d2565b91505060a083015160a085015260c083015160c085015260e083015160e08501526101008084015181860152506101208084015181860152508091505092915050565b60006101e0613b038484516139bf565b6020830151613b1560208601826139bf565b506040830151613b2860408601826139bf565b506060830151613b3b60608601826139bf565b506080830151608085015260a08301518160a0860152613b5d828601826139d2565b91505060c083015184820360c0860152613b7782826139d2565b91505060e083015184820360e0860152613b9182826139d2565b91505061010080840151613ba782870182613cd5565b505061012080840151613bbc82870182613cd5565b50506101408381015190850152610160808401519085015261018080840151908501526101a080840151908501526101c080840151613bfd828701826139cc565b5090949350505050565b613c128282516139bf565b6020810151613c2460208401826139bf565b506040810151613c3760408401826139bf565b50606081015160608301526080810151608083015260a0810151613c5e60a08401826139fe565b5060c0818101519083015260e08082015190830152610100808201519083015261012080820151908301526101408082015190830152610160808201519083015261018080820151613cb2828501826139cc565b50506101a080820151613cc7828501826139cc565b50506101c090810151910152565b60ff169052565b60008251613cee8184602087016140c5565b9190910192915050565b6001600160a01b0391909116815260200190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015613d5f57603f19888603018452613d4d858351613a50565b94509285019290850190600101613d31565b5092979650505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015613d5f57603f19888603018452613dad858351613af3565b94509285019290850190600101613d91565b6020808252825182820181905260009190848201906040850190845b81811015613e0257613dee838551613c07565b928401926101e09290920191600101613ddb565b50909695505050505050565b901515815260200190565b60006020825261337260208301846139d2565b6020808252601b908201527f6c6f6f74626f78206d75737420626520696e697469616c697a65640000000000604082015260600190565b60208082526012908201527f73796d626f6c206d757374206265207365740000000000000000000000000000604082015260600190565b6020808252601b908201527f546f6b656e2073656c6c657220616c7265616479206578697374730000000000604082015260600190565b60208082526028908201527f436f6e74726f6c6c61626c653a2063616c6c6572206973206e6f74206120636f60408201527f6e74726f6c6c6572000000000000000000000000000000000000000000000000606082015260800190565b60208082526017908201527f546f6b656e2073656c6c6572206973206e6f7420736574000000000000000000604082015260600190565b60006020825261145860208301613a20565b600060408252613f8960408301613a20565b90506001600160a01b038316602083015292915050565b60208082526013908201527f496e646578206f7574206f6620626f756e647300000000000000000000000000604082015260600190565b60208082526012908201527f4c6f6f74626f78206973206e6f74207365740000000000000000000000000000604082015260600190565b6000602082526133726020830184613a50565b6000602082526133726020830184613af3565b6101e081016114588284613c07565b90815260200190565b60405181810167ffffffffffffffff8111828210171561406e5761406e614146565b604052919050565b6000821982111561408957614089614130565b500190565b6000826140a957634e487b7160e01b81526012600452602481fd5b500490565b6000828210156140c0576140c0614130565b500390565b60005b838110156140e05781810151838201526020016140c8565b838111156140ef576000848401525b50505050565b60028104600182168061410957607f821691505b6020821081141561412a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146132b957600080fdfea2646970667358221220898a1cdccf6bebefb29020e962dea6ccd34cefa3f26addce731ddbcace9f37fc64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102265760003560e01c80639535ce121161012a578063d8ba5903116100bd578063e449c52a1161008c578063ec89b53f11610071578063ec89b53f146104ce578063f2d63826146104e1578063fda69fae146104e957610226565b8063e449c52a146104a8578063ebb4465f146104bb57610226565b8063d8ba590314610467578063d8de899d1461047a578063e01c8b251461048d578063e1c28bef146104a057610226565b8063a7fc7a07116100f9578063a7fc7a071461040e578063b429afeb14610421578063b8b2bdad14610434578063d502db971461044757610226565b80639535ce12146103a85780639a929e32146103c85780639b73a6fb146103db578063a6cc11a6146103fb57610226565b8063472d35b9116101bd5780635d6101771161018c5780637813917311610171578063781391731461037857806389c010361461038b57806392fe2aba1461039357610226565b80635d6101771461035057806368d8641a1461036557610226565b8063472d35b91461030257806349107dc614610315578063516d16b91461032857806353b8a8641461033057610226565b8063213b9eb8116101f9578063213b9eb81461029c57806322f7a450146102af57806329962c5e146102cf57806336805961146102e257610226565b8063017680521461022b57806305308ff01461025457806308197e14146102745780630f09b13e14610289575b600080fd5b61023e6102393660046138fd565b6104fc565b60405161024b9190614021565b60405180910390f35b61026761026236600461345e565b6107e6565b60405161024b9190614043565b610287610282366004613971565b610a14565b005b61023e6102973660046138fd565b610b72565b6102876102aa3660046135e4565b610c2a565b6102c26102bd36600461345e565b610cac565b60405161024b9190614034565b6102876102dd36600461378e565b610e0f565b6102f56102f03660046136f4565b611002565b60405161024b9190613e19565b61028761031036600461345e565b611125565b61028761032336600461374b565b611196565b6102676111f9565b61034361033e366004613950565b61123e565b60405161024b919061400e565b61035861145e565b60405161024b9190613d6c565b610287610373366004613680565b611757565b6102c26103863660046138fd565b6117cc565b6102676118bf565b61039b611904565b60405161024b9190613dbf565b6103bb6103b63660046135a9565b611a97565b60405161024b9190613e0e565b6102676103d6366004613915565b611afe565b6103ee6103e93660046138fd565b611c52565b60405161024b9190613d0c565b610343610409366004613950565b611e80565b61028761041c36600461345e565b6122eb565b6103bb61042f36600461345e565b61234d565b610287610442366004613634565b61236b565b61045a6104553660046135a9565b6123de565b60405161024b9190613cf8565b610287610475366004613496565b61244c565b6102f56104883660046135a9565b6125e8565b61026761049b36600461378e565b6126d7565b610287612bf0565b6102f56104b63660046135a9565b612c47565b6102676104c9366004613496565b612c98565b61023e6104dc36600461345e565b612e4d565b61045a612f07565b6102676104f73660046135a9565b612f99565b610504612ffd565b3360009081526020819052604090205460ff1615156001148061052657503033145b61054b5760405162461bcd60e51b815260040161054290613ed1565b60405180910390fd5b6006828154811061056c57634e487b7160e01b600052603260045260246000fd5b6000918252602091829020604080516101e081018252600e90930290910180546001600160a01b03908116845260018201548116948401949094526002810154841691830191909152600381015490921660608201526004820154608082015260058201805491929160a0840191906105e4906140f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610610906140f5565b801561065d5780601f106106325761010080835404028352916020019161065d565b820191906000526020600020905b81548152906001019060200180831161064057829003601f168201915b50505050508152602001600682018054610676906140f5565b80601f01602080910402602001604051908101604052809291908181526020018280546106a2906140f5565b80156106ef5780601f106106c4576101008083540402835291602001916106ef565b820191906000526020600020905b8154815290600101906020018083116106d257829003601f168201915b50505050508152602001600782018054610708906140f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610734906140f5565b80156107815780601f1061075657610100808354040283529160200191610781565b820191906000526020600020905b81548152906001019060200180831161076457829003601f168201915b5050509183525050600882015460ff80821660208401526101009091048116604083015260098301546060830152600a8301546080830152600b83015460a0830152600c83015460c0830152600d90920154909116151560e09091015290505b919050565b6001600160a01b038082166000908152600b6020908152604080832081516101e0810183528154861681526001820154861693810193909352600281015490941690820152600380840154606083015260048401546080830152600584015492938493909160a084019160ff169081111561087157634e487b7160e01b600052602160045260246000fd5b600381111561089057634e487b7160e01b600052602160045260246000fd5b815260068201546020820152600782015460408201526008820154606082015260098201546080820152600a82015460a0820152600b82015460c0820152600c82015460ff808216151560e08401526101009182900416151590820152600d9091015461012090910152905060008160a00151600381111561092257634e487b7160e01b600052602160045260246000fd5b1415610933576080015190506107e1565b60018160a00151600381111561095957634e487b7160e01b600052602160045260246000fd5b141561097b578060c0015181608001516109739190614076565b9150506107e1565b60028160a0015160038111156109a157634e487b7160e01b600052602160045260246000fd5b14156109ca578060c0015181608001516109bb919061408e565b81608001516109739190614076565b60038160a0015160038111156109f057634e487b7160e01b600052602160045260246000fd5b1415610a0a5780608001518160c001516109bb919061408e565b6080015192915050565b3360009081526020819052604090205460ff16151560011480610a3657503033145b610a525760405162461bcd60e51b815260040161054290613ed1565b6000838152600960205260409020548210610a7f5760405162461bcd60e51b815260040161054290613fa0565b6000838152600960205260409020805482919084908110610ab057634e487b7160e01b600052603260045260246000fd5b60009182526020918290208351600a90920201908155828201516001820180546001600160a01b039283166001600160a01b0319918216179091556040850151600284018054919093169116179055606083015180519192610b1a9260038501929091019061309f565b5060808201518051610b3691600484019160209091019061309f565b5060a0820151600582015560c0820151600682015560e08201516007820155610100820151600882015561012090910151600990910155505050565b610b7a612ffd565b3360009081526020819052604090205460ff16151560011480610b9c57503033145b610bb85760405162461bcd60e51b815260040161054290613ed1565b60008281526007602090815260409182902082516101e08101845281546001600160a01b03908116825260018301548116938201939093526002820154831693810193909352600381015490911660608301526004810154608083015260058101805460a0840191906105e4906140f5565b3360009081526020819052604090205460ff16151560011480610c4c57503033145b610c685760405162461bcd60e51b815260040161054290613ed1565b80600583604051610c799190613cdc565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b03199092169190911790555050565b610cb4613123565b3360009081526020819052604090205460ff16151560011480610cd657503033145b610cf25760405162461bcd60e51b815260040161054290613ed1565b6001600160a01b038083166000908152600b602090815260409182902082516101e0810184528154851681526001820154851692810192909252600281015490931691810191909152600380830154606083015260048301546080830152600583015491929160a084019160ff90911690811115610d8057634e487b7160e01b600052602160045260246000fd5b6003811115610d9f57634e487b7160e01b600052602160045260246000fd5b815260068201546020820152600782015460408201526008820154606082015260098201546080820152600a82015460a0820152600b82015460c0820152600c82015460ff808216151560e08401526101009182900416151590820152600d909101546101209091015292915050565b3360009081526020819052604090205460ff16151560011480610e3157503033145b610e4d5760405162461bcd60e51b815260040161054290613ed1565b60808101516000908152600760205260409020600101546001600160a01b031615801590610ea357506020808201516080830151600090815260079092526040909120600101546001600160a01b039081169116145b610ebf5760405162461bcd60e51b815260040161054290613e2c565b608081018051600090815260076020908152604091829020845181546001600160a01b03199081166001600160a01b0392831617835583870151600184018054831691841691909117905593860151600283018054861691831691909117905560608601516003830180549095169116179092559151600482015560a083015180518493610f5492600585019291019061309f565b5060c08201518051610f7091600684019160209091019061309f565b5060e08201518051610f8c91600784019160209091019061309f565b506101008281015160088301805461012086015160ff1991821660ff9485161761ff00191693169093029190911790556101408301516009830155610160830151600a830155610180830151600b8301556101a0830151600c8301556101c090920151600d909101805490921690151517905550565b3360009081526020819052604090205460609060ff1615156001148061102757503033145b6110435760405162461bcd60e51b815260040161054290613ed1565b6001836040516110539190613cdc565b9081526020016040518091039020805461106c906140f5565b80601f0160208091040260200160405190810160405280929190818152602001828054611098906140f5565b80156110e55780601f106110ba576101008083540402835291602001916110e5565b820191906000526020600020905b8154815290600101906020018083116110c857829003601f168201915b50505050509050816001846040516110fd9190613cdc565b9081526020016040518091039020908051906020019061111e92919061309f565b5092915050565b6040517f213b9eb8000000000000000000000000000000000000000000000000000000008152309063213b9eb890611161908490600401613f77565b600060405180830381600087803b15801561117b57600080fd5b505af115801561118f573d6000803e3d6000fd5b5050505050565b3360009081526020819052604090205460ff161515600114806111b857503033145b6111d45760405162461bcd60e51b815260040161054290613ed1565b806003836040516111e59190613cdc565b908152604051908190036020019020555050565b3360009081526020819052604081205460ff1615156001148061121b57503033145b6112375760405162461bcd60e51b815260040161054290613ed1565b5060065490565b61124661319d565b3360009081526020819052604090205460ff1615156001148061126857503033145b6112845760405162461bcd60e51b815260040161054290613ed1565b60008381526009602052604090208054839081106112b257634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805161014081018252600a9093029091018054835260018101546001600160a01b039081169484019490945260028101549093169082015260038201805491929160608401919061130f906140f5565b80601f016020809104026020016040519081016040528092919081815260200182805461133b906140f5565b80156113885780601f1061135d57610100808354040283529160200191611388565b820191906000526020600020905b81548152906001019060200180831161136b57829003601f168201915b505050505081526020016004820180546113a1906140f5565b80601f01602080910402602001604051908101604052809291908181526020018280546113cd906140f5565b801561141a5780601f106113ef5761010080835404028352916020019161141a565b820191906000526020600020905b8154815290600101906020018083116113fd57829003601f168201915b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152505090505b92915050565b3360009081526020819052604090205460609060ff1615156001148061148357503033145b61149f5760405162461bcd60e51b815260040161054290613ed1565b6006805480602002602001604051908101604052809291908181526020016000905b8282101561174e576000848152602090819020604080516101e081018252600e860290920180546001600160a01b03908116845260018201548116948401949094526002810154841691830191909152600381015490921660608201526004820154608082015260058201805491929160a084019190611540906140f5565b80601f016020809104026020016040519081016040528092919081815260200182805461156c906140f5565b80156115b95780601f1061158e576101008083540402835291602001916115b9565b820191906000526020600020905b81548152906001019060200180831161159c57829003601f168201915b505050505081526020016006820180546115d2906140f5565b80601f01602080910402602001604051908101604052809291908181526020018280546115fe906140f5565b801561164b5780601f106116205761010080835404028352916020019161164b565b820191906000526020600020905b81548152906001019060200180831161162e57829003601f168201915b50505050508152602001600782018054611664906140f5565b80601f0160208091040260200160405190810160405280929190818152602001828054611690906140f5565b80156116dd5780601f106116b2576101008083540402835291602001916116dd565b820191906000526020600020905b8154815290600101906020018083116116c057829003601f168201915b5050509183525050600882015460ff8082166020808501919091526101009092048116604084015260098401546060840152600a8401546080840152600b84015460a0840152600c84015460c0840152600d90930154909216151560e09091015290825260019290920191016114c1565b50505050905090565b3360009081526020819052604090205460ff1615156001148061177957503033145b6117955760405162461bcd60e51b815260040161054290613ed1565b806002836040516117a69190613cdc565b908152602001604051809103902090805190602001906117c792919061309f565b505050565b6117d4613123565b3360009081526020819052604090205460ff161515600114806117f657503033145b6118125760405162461bcd60e51b815260040161054290613ed1565b600a828154811061183357634e487b7160e01b600052603260045260246000fd5b6000918252602091829020604080516101e081018252600e90930290910180546001600160a01b0390811684526001820154811694840194909452600281015490931690820152600380830154606083015260048301546080830152600583015491929160a084019160ff90911690811115610d8057634e487b7160e01b600052602160045260246000fd5b3360009081526020819052604081205460ff161515600114806118e157503033145b6118fd5760405162461bcd60e51b815260040161054290613ed1565b50600a5490565b3360009081526020819052604090205460609060ff1615156001148061192957503033145b6119455760405162461bcd60e51b815260040161054290613ed1565b600a805480602002602001604051908101604052809291908181526020016000905b8282101561174e576000848152602090819020604080516101e081018252600e860290920180546001600160a01b0390811684526001820154811694840194909452600281015490931690820152600380830154606083015260048301546080830152600583015491929160a084019160ff909116908111156119fa57634e487b7160e01b600052602160045260246000fd5b6003811115611a1957634e487b7160e01b600052602160045260246000fd5b81526006820154602080830191909152600783015460408301526008830154606083015260098301546080830152600a83015460a0830152600b83015460c0830152600c83015460ff808216151560e08501526101009182900416151590830152600d90920154610120909101529082526001929092019101611967565b3360009081526020819052604081205460ff16151560011480611ab957503033145b611ad55760405162461bcd60e51b815260040161054290613ed1565b600482604051611ae59190613cdc565b9081526040519081900360200190205460ff1692915050565b3360009081526020819052604081205460ff16151560011480611b2057503033145b611b3c5760405162461bcd60e51b815260040161054290613ed1565b6000838152600760205260409020546001600160a01b0316611b705760405162461bcd60e51b815260040161054290613fd7565b6000838152600960209081526040808320805460018082018355918552938390208651600a909502019384558583015190840180546001600160a01b03199081166001600160a01b039384161790915591860151600285018054909316911617905560608401518051859392611bed92600385019291019061309f565b5060808201518051611c0991600484019160209091019061309f565b5060a0820151600582015560c0820151600682015560e0820151600782015561010082015160088201556101209091015160099182015560009384526020525050604090205490565b3360009081526020819052604090205460609060ff16151560011480611c7757503033145b611c935760405162461bcd60e51b815260040161054290613ed1565b600082815260096020908152604080832080548251818502810185019093528083529193909284015b82821015611e755760008481526020908190206040805161014081018252600a86029092018054835260018101546001600160a01b0390811694840194909452600281015490931690820152600382018054919291606084019190611d20906140f5565b80601f0160208091040260200160405190810160405280929190818152602001828054611d4c906140f5565b8015611d995780601f10611d6e57610100808354040283529160200191611d99565b820191906000526020600020905b815481529060010190602001808311611d7c57829003601f168201915b50505050508152602001600482018054611db2906140f5565b80601f0160208091040260200160405190810160405280929190818152602001828054611dde906140f5565b8015611e2b5780601f10611e0057610100808354040283529160200191611e2b565b820191906000526020600020905b815481529060010190602001808311611e0e57829003601f168201915b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152505081526020019060010190611cbc565b505050509050919050565b611e8861319d565b3360009081526020819052604090205460ff16151560011480611eaa57503033145b611ec65760405162461bcd60e51b815260040161054290613ed1565b6000838152600960205260409020548210611ef35760405162461bcd60e51b815260040161054290613fa0565b600083815260096020526040812054611f0e906001906140ae565b600085815260096020526040902080549192509084908110611f4057634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805161014081018252600a9093029091018054835260018101546001600160a01b0390811694840194909452600281015490931690820152600382018054919291606084019190611f9d906140f5565b80601f0160208091040260200160405190810160405280929190818152602001828054611fc9906140f5565b80156120165780601f10611feb57610100808354040283529160200191612016565b820191906000526020600020905b815481529060010190602001808311611ff957829003601f168201915b5050505050815260200160048201805461202f906140f5565b80601f016020809104026020016040519081016040528092919081815260200182805461205b906140f5565b80156120a85780601f1061207d576101008083540402835291602001916120a8565b820191906000526020600020905b81548152906001019060200180831161208b57829003601f168201915b505050505081526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152505091508281111561222057600084815260096020526040902080548290811061211b57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600a020160096000868152602001908152602001600020848154811061215b57634e487b7160e01b600052603260045260246000fd5b600091825260209091208254600a9092020190815560018083015490820180546001600160a01b039283166001600160a01b031991821617909155600280850154908401805491909316911617905560038083018054918301916121be906140f5565b6121c9929190613202565b5060048201816004019080546121de906140f5565b6121e9929190613202565b5060058201548160050155600682015481600601556007820154816007015560088201548160080155600982015481600901559050505b600084815260096020526040902080548061224b57634e487b7160e01b600052603160045260246000fd5b600082815260208120600a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909301928302018181556001810180546001600160a01b03199081169091556002820180549091169055906122af600383018261327d565b6122bd60048301600061327d565b5060006005820181905560068201819055600782018190556008820181905560099091015590555092915050565b3360009081526020819052604090205460ff1615156001148061230d57503033145b6123295760405162461bcd60e51b815260040161054290613ed1565b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b6001600160a01b031660009081526020819052604090205460ff1690565b3360009081526020819052604090205460ff1615156001148061238d57503033145b6123a95760405162461bcd60e51b815260040161054290613ed1565b806004836040516123ba9190613cdc565b908152604051908190036020019020805491151560ff199092169190911790555050565b3360009081526020819052604081205460ff1615156001148061240057503033145b61241c5760405162461bcd60e51b815260040161054290613ed1565b60058260405161242c9190613cdc565b908152604051908190036020019020546001600160a01b03169050919050565b3360009081526020819052604090205460ff1615156001148061246e57503033145b61248a5760405162461bcd60e51b815260040161054290613ed1565b336001600160a01b038316146124b25760405162461bcd60e51b815260040161054290613f2e565b6001600160a01b038083166000908152600b6020908152604091829020845181549085166001600160a01b0319918216178255918501516001808301805492871692851692909217909155928501516002820180549190951692169190911790925560608301516003808401919091556080840151600484015560a08401516005840180548695949293919260ff1990911691849081111561256457634e487b7160e01b600052602160045260246000fd5b021790555060c0820151600682015560e082015160078201556101008083015160088301556101208301516009830155610140830151600a830155610160830151600b830155610180830151600c830180546101a086015160ff199091169215159290921761ff0019169115159092021790556101c090910151600d909101555050565b3360009081526020819052604090205460609060ff1615156001148061260d57503033145b6126295760405162461bcd60e51b815260040161054290613ed1565b6002826040516126399190613cdc565b90815260200160405180910390208054612652906140f5565b80601f016020809104026020016040519081016040528092919081815260200182805461267e906140f5565b80156126cb5780601f106126a0576101008083540402835291602001916126cb565b820191906000526020600020905b8154815290600101906020018083116126ae57829003601f168201915b50505050509050919050565b60008160a0015151600014156126ff5760405162461bcd60e51b815260040161054290613e63565b608082015161273b578160a0015160405160200161271d9190613cdc565b60408051601f19818403018152919052805160209091012060808301525b60208201516001600160a01b0316612754573360208301525b6006805460018101825560009190915282517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f600e90920291820180546001600160a01b03199081166001600160a01b039384161782556020808701517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4086018054841691861691909117905560408701517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4186018054841691861691909117905560608701517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4286018054909316941693909317905560808501517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4384015560a08501518051869492936128ad937ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d440192019061309f565b5060c082015180516128c991600684019160209091019061309f565b5060e082015180516128e591600784019160209091019061309f565b506101008281015160088301805461012086015160ff1991821660ff9485161761ff00191693169093029190911790556101408301516009830155610160830151600a830155610180830151600b8301556101a0830151600c8301556101c090920151600d9091018054909216901515179055608082018051600090815260076020908152604091829020855181546001600160a01b03199081166001600160a01b0392831617835583880151600184018054831691841691909117905593870151600283018054861691831691909117905560608701516003830180549095169116179092559151600482015560a0840151805185936129ed92600585019291019061309f565b5060c08201518051612a0991600684019160209091019061309f565b5060e08201518051612a2591600784019160209091019061309f565b50610100828101516008838101805461012087015160ff1991821660ff9586161761ff0019169416909402929092179091556101408401516009840155610160840151600a840155610180840151600b8401556101a0840151600c8401556101c090930151600d9092018054909116911515919091179055602083810180516001600160a01b039081166000908152938352604093849020865181546001600160a01b031990811691841691909117825592516001820180548516918416919091179055938601516002850180548416918316919091179055606086015160038501805490931691161790556080840151600483015560a08401518051859392612b3692600585019291019061309f565b5060c08201518051612b5291600684019160209091019061309f565b5060e08201518051612b6e91600784019160209091019061309f565b506101008281015160088301805461012086015160ff1991821660ff9485161761ff00191693169093029190911790556101408301516009830155610160830151600a830155610180830151600b8301556101a0830151600c8301556101c090920151600d9091018054909216901515179055600654611458906001906140ae565b3360009081526020819052604090205460ff16151560011480612c1257503033145b612c2e5760405162461bcd60e51b815260040161054290613ed1565b336000908152602081905260409020805460ff19169055565b3360009081526020819052604090205460609060ff16151560011480612c6c57503033145b612c885760405162461bcd60e51b815260040161054290613ed1565b6001826040516126399190613cdc565b3360009081526020819052604081205460ff16151560011480612cba57503033145b612cd65760405162461bcd60e51b815260040161054290613ed1565b6001600160a01b038381166000908152600b60205260409020541615612d0e5760405162461bcd60e51b815260040161054290613e9a565b6001600160a01b038084166000908152600b6020908152604091829020855181549085166001600160a01b0319918216178255918601516001808301805492871692851692909217909155928601516002820180549190951692169190911790925560608401516003808401919091556080850151600484015560a08501516005840180548795949293919260ff19909116918490811115612dc057634e487b7160e01b600052602160045260246000fd5b021790555060c0820151600682015560e082015160078201556101008083015160088301556101208301516009830155610140830151600a80840191909155610160840151600b840155610180840151600c840180546101a087015160ff199091169215159290921761ff001916911515909302179091556101c090920151600d90910155549392505050565b612e55612ffd565b3360009081526020819052604090205460ff16151560011480612e7757503033145b612e935760405162461bcd60e51b815260040161054290613ed1565b6001600160a01b0380831660009081526008602090815260409182902082516101e08101845281548516815260018201548516928101929092526002810154841692820192909252600382015490921660608301526004810154608083015260058101805460a0840191906105e4906140f5565b6040517fd502db97000000000000000000000000000000000000000000000000000000008152600090309063d502db9790612f4490600401613f65565b60206040518083038186803b158015612f5c57600080fd5b505afa158015612f70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f94919061347a565b905090565b3360009081526020819052604081205460ff16151560011480612fbb57503033145b612fd75760405162461bcd60e51b815260040161054290613ed1565b600382604051612fe79190613cdc565b9081526020016040518091039020549050919050565b604051806101e0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001606081526020016060815260200160608152602001600060ff168152602001600060ff168152602001600081526020016000815260200160008152602001600081526020016000151581525090565b8280546130ab906140f5565b90600052602060002090601f0160209004810192826130cd5760008555613113565b82601f106130e657805160ff1916838001178555613113565b82800160010185558215613113579182015b828111156131135782518255916020019190600101906130f8565b5061311f9291506132bc565b5090565b604080516101e08101825260008082526020820181905291810182905260608101829052608081018290529060a08201908152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600015158152602001600015158152602001600081525090565b6040518061014001604052806000815260200160006001600160a01b0316815260200160006001600160a01b03168152602001606081526020016060815260200160008152602001600081526020016000815260200160008152602001600081525090565b82805461320e906140f5565b90600052602060002090601f0160209004810192826132305760008555613113565b82601f106132415780548555613113565b8280016001018555821561311357600052602060002091601f016020900482015b82811115613113578254825591600101919060010190613262565b508054613289906140f5565b6000825580601f1061329b57506132b9565b601f0160209004906000526020600020908101906132b991906132bc565b50565b5b8082111561311f57600081556001016132bd565b600067ffffffffffffffff8311156132eb576132eb614146565b6132fe6020601f19601f8601160161404c565b905082815283838301111561331257600080fd5b828260208301376000602084830101529392505050565b80356107e18161415c565b803580151581146107e157600080fd5b8035600481106107e157600080fd5b600082601f830112613363578081fd5b613372838335602085016132d1565b9392505050565b600061014080838503121561338c578182fd5b6133958161404c565b915050813581526133a860208301613329565b60208201526133b960408301613329565b6040820152606082013567ffffffffffffffff808211156133d957600080fd5b6133e585838601613353565b606084015260808401359150808211156133fe57600080fd5b5061340b84828501613353565b60808301525060a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525092915050565b803560ff811681146107e157600080fd5b60006020828403121561346f578081fd5b81356133728161415c565b60006020828403121561348b578081fd5b81516133728161415c565b6000808284036102008112156134aa578182fd5b83356134b58161415c565b92506101e0601f1982018113156134ca578283fd5b6134d38161404c565b91506134e160208601613329565b82526134ef60408601613329565b602083015261350060608601613329565b60408301526080850135606083015260a0850135608083015261352560c08601613344565b60a083015260e085013560c08301526101008086013560e084015261012080870135828501526101409150818701358185015250610160808701358285015261018091508187013581850152506101a0613580818801613334565b828501526101c09150613594828801613334565b90840152940135938101939093525092909150565b6000602082840312156135ba578081fd5b813567ffffffffffffffff8111156135d0578182fd5b6135dc84828501613353565b949350505050565b600080604083850312156135f6578182fd5b823567ffffffffffffffff81111561360c578283fd5b61361885828601613353565b92505060208301356136298161415c565b809150509250929050565b60008060408385031215613646578182fd5b823567ffffffffffffffff81111561365c578283fd5b61366885828601613353565b92505061367760208401613334565b90509250929050565b60008060408385031215613692578182fd5b823567ffffffffffffffff808211156136a9578384fd5b6136b586838701613353565b935060208501359150808211156136ca578283fd5b508301601f810185136136db578182fd5b6136ea858235602084016132d1565b9150509250929050565b60008060408385031215613706578182fd5b823567ffffffffffffffff8082111561371d578384fd5b61372986838701613353565b9350602085013591508082111561373e578283fd5b506136ea85828601613353565b6000806040838503121561375d578182fd5b823567ffffffffffffffff811115613773578283fd5b61377f85828601613353565b95602094909401359450505050565b60006020828403121561379f578081fd5b813567ffffffffffffffff808211156137b6578283fd5b81840191506101e08083870312156137cc578384fd5b6137d58161404c565b90506137e083613329565b81526137ee60208401613329565b60208201526137ff60408401613329565b604082015261381060608401613329565b60608201526080830135608082015260a083013582811115613830578485fd5b61383c87828601613353565b60a08301525060c083013582811115613853578485fd5b61385f87828601613353565b60c08301525060e083013582811115613876578485fd5b61388287828601613353565b60e083015250610100915061389882840161344d565b8282015261012091506138ac82840161344d565b918101919091526101408281013590820152610160808301359082015261018080830135908201526101a080830135908201526101c0906138ee828401613334565b91810191909152949350505050565b60006020828403121561390e578081fd5b5035919050565b60008060408385031215613927578182fd5b82359150602083013567ffffffffffffffff811115613944578182fd5b6136ea85828601613379565b60008060408385031215613962578182fd5b50508035926020909101359150565b600080600060608486031215613985578081fd5b8335925060208401359150604084013567ffffffffffffffff8111156139a9578182fd5b6139b586828701613379565b9150509250925092565b6001600160a01b03169052565b15159052565b600081518084526139ea8160208601602086016140c5565b601f01601f19169290920160200192915050565b60048110613a1c57634e487b7160e01b600052602160045260246000fd5b9052565b601181527f6665654d616e6167657241646472657373000000000000000000000000000000602082015260400190565b6000610140825184526020830151613a6b60208601826139bf565b506040830151613a7e60408601826139bf565b506060830151816060860152613a96828601826139d2565b91505060808301518482036080860152613ab082826139d2565b91505060a083015160a085015260c083015160c085015260e083015160e08501526101008084015181860152506101208084015181860152508091505092915050565b60006101e0613b038484516139bf565b6020830151613b1560208601826139bf565b506040830151613b2860408601826139bf565b506060830151613b3b60608601826139bf565b506080830151608085015260a08301518160a0860152613b5d828601826139d2565b91505060c083015184820360c0860152613b7782826139d2565b91505060e083015184820360e0860152613b9182826139d2565b91505061010080840151613ba782870182613cd5565b505061012080840151613bbc82870182613cd5565b50506101408381015190850152610160808401519085015261018080840151908501526101a080840151908501526101c080840151613bfd828701826139cc565b5090949350505050565b613c128282516139bf565b6020810151613c2460208401826139bf565b506040810151613c3760408401826139bf565b50606081015160608301526080810151608083015260a0810151613c5e60a08401826139fe565b5060c0818101519083015260e08082015190830152610100808201519083015261012080820151908301526101408082015190830152610160808201519083015261018080820151613cb2828501826139cc565b50506101a080820151613cc7828501826139cc565b50506101c090810151910152565b60ff169052565b60008251613cee8184602087016140c5565b9190910192915050565b6001600160a01b0391909116815260200190565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015613d5f57603f19888603018452613d4d858351613a50565b94509285019290850190600101613d31565b5092979650505050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b82811015613d5f57603f19888603018452613dad858351613af3565b94509285019290850190600101613d91565b6020808252825182820181905260009190848201906040850190845b81811015613e0257613dee838551613c07565b928401926101e09290920191600101613ddb565b50909695505050505050565b901515815260200190565b60006020825261337260208301846139d2565b6020808252601b908201527f6c6f6f74626f78206d75737420626520696e697469616c697a65640000000000604082015260600190565b60208082526012908201527f73796d626f6c206d757374206265207365740000000000000000000000000000604082015260600190565b6020808252601b908201527f546f6b656e2073656c6c657220616c7265616479206578697374730000000000604082015260600190565b60208082526028908201527f436f6e74726f6c6c61626c653a2063616c6c6572206973206e6f74206120636f60408201527f6e74726f6c6c6572000000000000000000000000000000000000000000000000606082015260800190565b60208082526017908201527f546f6b656e2073656c6c6572206973206e6f7420736574000000000000000000604082015260600190565b60006020825261145860208301613a20565b600060408252613f8960408301613a20565b90506001600160a01b038316602083015292915050565b60208082526013908201527f496e646578206f7574206f6620626f756e647300000000000000000000000000604082015260600190565b60208082526012908201527f4c6f6f74626f78206973206e6f74207365740000000000000000000000000000604082015260600190565b6000602082526133726020830184613a50565b6000602082526133726020830184613af3565b6101e081016114588284613c07565b90815260200190565b60405181810167ffffffffffffffff8111828210171561406e5761406e614146565b604052919050565b6000821982111561408957614089614130565b500190565b6000826140a957634e487b7160e01b81526012600452602481fd5b500490565b6000828210156140c0576140c0614130565b500390565b60005b838110156140e05781810151838201526020016140c8565b838111156140ef576000848401525b50505050565b60028104600182168061410957607f821691505b6020821081141561412a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146132b957600080fdfea2646970667358221220898a1cdccf6bebefb29020e962dea6ccd34cefa3f26addce731ddbcace9f37fc64736f6c63430008000033",
  "libraries": {
    "Strings": "0xeB3E79099663eC952e02E608E00d463F36b4Fb75",
    "AddressSet": "0x8974D57fCfF9C10E9d41709da86d006604D8c75d",
    "UInt256Set": "0x8B6893DB13b55d4952a51d5188215e2a470515a9",
    "Create2": "0xBa85d3e8E0F9e48F5c21649d33f6d0f9Af12E3f5",
    "WrappedTokenLib": "0xA6E25B1B9f4E9DB9E9397853B26436Dcb0563565",
    "ComplexPoolLib": "0x6B761F9d8d3E921fA50cB08b244D82D9D153D1e4",
    "LootboxLib": "0x211f558db66012ac014d5b252823Fc862588EA7F"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addController(address)": {
        "details": "Add an address allowed to control this contract"
      },
      "getStr(string)": {
        "details": "set a string value",
        "params": {
          "key": "the key of the string value"
        },
        "returns": {
          "_0": "the value if the value was set, falsey otherwise"
        }
      },
      "isController(address)": {
        "details": "Check if this address is a controller"
      },
      "relinquishControl()": {
        "details": "Remove the sender address from the list of controllers"
      },
      "setStr(string,string)": {
        "details": "set a string value",
        "params": {
          "key": "the key of the string value",
          "value": "the value to set"
        },
        "returns": {
          "oldData": "string the old data the the new data replaced"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12920,
        "contract": "src/lootbox/LootboxData.sol:LootboxData",
        "label": "_controllers",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 13640,
        "contract": "src/lootbox/LootboxData.sol:LootboxData",
        "label": "stringData",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
      },
      {
        "astId": 13644,
        "contract": "src/lootbox/LootboxData.sol:LootboxData",
        "label": "bytesData",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_bytes_storage)"
      },
      {
        "astId": 13648,
        "contract": "src/lootbox/LootboxData.sol:LootboxData",
        "label": "uintData",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_uint256)"
      },
      {
        "astId": 13652,
        "contract": "src/lootbox/LootboxData.sol:LootboxData",
        "label": "boolData",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      {
        "astId": 13656,
        "contract": "src/lootbox/LootboxData.sol:LootboxData",
        "label": "addressData",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_string_memory_ptr,t_address)"
      },
      {
        "astId": 21696,
        "contract": "src/lootbox/LootboxData.sol:LootboxData",
        "label": "_allLootboxes",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_struct(Lootbox)18107_storage)dyn_storage"
      },
      {
        "astId": 21701,
        "contract": "src/lootbox/LootboxData.sol:LootboxData",
        "label": "_lootboxes",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_struct(Lootbox)18107_storage)"
      },
      {
        "astId": 21706,
        "contract": "src/lootbox/LootboxData.sol:LootboxData",
        "label": "_lootboxesByAddress",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(Lootbox)18107_storage)"
      },
      {
        "astId": 21712,
        "contract": "src/lootbox/LootboxData.sol:LootboxData",
        "label": "_loot",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_array(t_struct(Loot)18128_storage)dyn_storage)"
      },
      {
        "astId": 21716,
        "contract": "src/lootbox/LootboxData.sol:LootboxData",
        "label": "_allTokenSellers",
        "offset": 0,
        "slot": "10",
        "type": "t_array(t_struct(TokenSellerInfo)20386_storage)dyn_storage"
      },
      {
        "astId": 21721,
        "contract": "src/lootbox/LootboxData.sol:LootboxData",
        "label": "_tokenSellers",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_struct(TokenSellerInfo)20386_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Loot)18128_storage)dyn_storage": {
        "base": "t_struct(Loot)18128_storage",
        "encoding": "dynamic_array",
        "label": "struct ILootbox.Loot[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Lootbox)18107_storage)dyn_storage": {
        "base": "t_struct(Lootbox)18107_storage",
        "encoding": "dynamic_array",
        "label": "struct ILootbox.Lootbox[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(TokenSellerInfo)20386_storage)dyn_storage": {
        "base": "t_struct(TokenSellerInfo)20386_storage",
        "encoding": "dynamic_array",
        "label": "struct ITokenSeller.TokenSellerInfo[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_enum(BuyPriceIncreaseRateType)20354": {
        "encoding": "inplace",
        "label": "enum ITokenSeller.BuyPriceIncreaseRateType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(Lootbox)18107_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct ILootbox.Lootbox)",
        "numberOfBytes": "32",
        "value": "t_struct(Lootbox)18107_storage"
      },
      "t_mapping(t_address,t_struct(TokenSellerInfo)20386_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct ITokenSeller.TokenSellerInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(TokenSellerInfo)20386_storage"
      },
      "t_mapping(t_string_memory_ptr,t_address)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_string_memory_ptr,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      },
      "t_mapping(t_string_memory_ptr,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_string_memory_ptr,t_uint256)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_array(t_struct(Loot)18128_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct ILootbox.Loot[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Loot)18128_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(Lootbox)18107_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct ILootbox.Lootbox)",
        "numberOfBytes": "32",
        "value": "t_struct(Lootbox)18107_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Loot)18128_storage": {
        "encoding": "inplace",
        "label": "struct ILootbox.Loot",
        "members": [
          {
            "astId": 18109,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "lootHash",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 18111,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "owner",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 18113,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "multitoken",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 18115,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "symbol",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 18117,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "name",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 18119,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "probability",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 18121,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "probabilityIndex",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 18123,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "probabilityRoll",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 18125,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "maxMint",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 18127,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "minted",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_struct(Lootbox)18107_storage": {
        "encoding": "inplace",
        "label": "struct ILootbox.Lootbox",
        "members": [
          {
            "astId": 18078,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 18080,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "contractAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 18082,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "randomFarmer",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 18084,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "multitoken",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 18086,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "lootboxHash",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 18088,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "symbol",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 18090,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "name",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          },
          {
            "astId": 18092,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "description",
            "offset": 0,
            "slot": "7",
            "type": "t_string_storage"
          },
          {
            "astId": 18094,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "minLootPerOpen",
            "offset": 0,
            "slot": "8",
            "type": "t_uint8"
          },
          {
            "astId": 18096,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "maxLootPerOpen",
            "offset": 1,
            "slot": "8",
            "type": "t_uint8"
          },
          {
            "astId": 18098,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "maxOpens",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 18100,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "openCount",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 18102,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "totalLootGenerated",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          },
          {
            "astId": 18104,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "probabilitiesSum",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256"
          },
          {
            "astId": 18106,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "initialized",
            "offset": 0,
            "slot": "13",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "448"
      },
      "t_struct(TokenSellerInfo)20386_storage": {
        "encoding": "inplace",
        "label": "struct ITokenSeller.TokenSellerInfo",
        "members": [
          {
            "astId": 20356,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "multitoken",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 20358,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "contractAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 20360,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "owner",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 20362,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "tokenHash",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 20364,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "buyPrice",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 20367,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "buyPriceIncreaseRateType",
            "offset": 0,
            "slot": "5",
            "type": "t_enum(BuyPriceIncreaseRateType)20354"
          },
          {
            "astId": 20369,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "buyPriceIncreaseRate",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 20371,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "maxQuantity",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 20373,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "maxBuyAmount",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 20375,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "maxTotalBuyAmount",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 20377,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "saleStartTime",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 20379,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "saleEndTime",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          },
          {
            "astId": 20381,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "initialized",
            "offset": 0,
            "slot": "12",
            "type": "t_bool"
          },
          {
            "astId": 20383,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "open",
            "offset": 1,
            "slot": "12",
            "type": "t_bool"
          },
          {
            "astId": 20385,
            "contract": "src/lootbox/LootboxData.sol:LootboxData",
            "label": "totalPurchased",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "448"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}
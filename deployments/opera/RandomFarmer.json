{
  "address": "0x073A16599C8b0921ceAa92Ed5047f857755774DD",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "controllerAddress",
          "type": "address"
        }
      ],
      "name": "ControllerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "controllerAddress",
          "type": "address"
        }
      ],
      "name": "ControllerRemoved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "addController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFarm",
      "outputs": [
        {
          "internalType": "address",
          "name": "_farm",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "amount",
          "type": "uint8"
        }
      ],
      "name": "getRandomBytes",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "min",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "max",
          "type": "uint256"
        }
      ],
      "name": "getRandomNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "amount",
          "type": "uint8"
        }
      ],
      "name": "getRandomUints",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isController",
      "outputs": [
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "relinquishControl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_farm",
          "type": "address"
        }
      ],
      "name": "setFarm",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7e6e8fe0de9d34e7a2d5ec5839a6ac8f4920b2fcad4eaeab10298942ec2fad4f",
  "receipt": {
    "to": null,
    "from": "0xE5E82ae456c04Ad0879785B4f678A4Fcace12AAf",
    "contractAddress": "0x073A16599C8b0921ceAa92Ed5047f857755774DD",
    "transactionIndex": 0,
    "gasUsed": "490165",
    "logsBloom": "0x
    "blockHash": "0x00006dec000014a8f35e2a3ad9802695cc8d4b07073f1dbf3ec7a7f04192610a",
    "transactionHash": "0x7e6e8fe0de9d34e7a2d5ec5839a6ac8f4920b2fcad4eaeab10298942ec2fad4f",
    "logs": [],
    "blockNumber": 15209566,
    "cumulativeGasUsed": "490165",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "eb41b9db1c628de0f8ceafc7ececc9d4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controllerAddress\",\"type\":\"address\"}],\"name\":\"ControllerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controllerAddress\",\"type\":\"address\"}],\"name\":\"ControllerRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFarm\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_farm\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"amount\",\"type\":\"uint8\"}],\"name\":\"getRandomBytes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"getRandomNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"amount\",\"type\":\"uint8\"}],\"name\":\"getRandomUints\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isController\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relinquishControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_farm\",\"type\":\"address\"}],\"name\":\"setFarm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addController(address)\":{\"details\":\"Add an address allowed to control this contract\"},\"isController(address)\":{\"details\":\"Check if this address is a controller\"},\"relinquishControl()\":{\"details\":\"Remove the sender address from the list of controllers\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/random/RandomFarm.sol\":\"RandomFarmer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2222},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\"},\"src/access/Controllable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"../interfaces/IControllable.sol\\\";\\n\\nabstract contract Controllable is IControllable {\\n    mapping(address => bool) internal _controllers;\\n\\n    /**\\n     * @dev Throws if called by any account not in authorized list\\n     */\\n    modifier onlyController() {\\n        require(\\n            _controllers[msg.sender] == true || address(this) == msg.sender,\\n            \\\"Controllable: caller is not a controller\\\"\\n        );\\n        _;\\n    }\\n\\n    /**\\n     * @dev Add an address allowed to control this contract\\n     */\\n    function _addController(address _controller) internal {\\n        _controllers[_controller] = true;\\n    }\\n\\n    /**\\n     * @dev Add an address allowed to control this contract\\n     */\\n    function addController(address _controller)\\n        external\\n        override\\n        onlyController\\n    {\\n        _controllers[_controller] = true;\\n    }\\n\\n    /**\\n     * @dev Check if this address is a controller\\n     */\\n    function isController(address _address)\\n        external\\n        view\\n        override\\n        returns (bool allowed)\\n    {\\n        allowed = _controllers[_address];\\n    }\\n\\n    /**\\n     * @dev Remove the sender address from the list of controllers\\n     */\\n    function relinquishControl() external override onlyController {\\n        delete _controllers[msg.sender];\\n    }\\n}\\n\",\"keccak256\":\"0xa31f752b3b092c788ea06a6dced266db79c4407d69733d78bc15e519f39e1d3f\",\"license\":\"MIT\"},\"src/interfaces/IControllable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\ninterface IControllable {\\n    event ControllerAdded(\\n        address indexed contractAddress,\\n        address indexed controllerAddress\\n    );\\n    event ControllerRemoved(\\n        address indexed contractAddress,\\n        address indexed controllerAddress\\n    );\\n\\n    function addController(address controller) external;\\n\\n    function isController(address controller) external view returns (bool);\\n\\n    function relinquishControl() external;\\n}\\n\",\"keccak256\":\"0x2a44548d9ba1bcd73d5734b2265db6c1556c013ccc61df621a6cbd5cca42cfaf\",\"license\":\"MIT\"},\"src/interfaces/IRandomFarm.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\ninterface IRandomFarmer {\\n    function getRandomBytes(uint8 amount) external returns (bytes32[] memory);\\n\\n    function getRandomUints(uint8 amount) external returns (uint256[] memory);\\n\\n    function getRandomNumber(uint256 min, uint256 max)\\n        external\\n        returns (uint256);\\n}\\n\\ninterface IRandomFarm is IRandomFarmer {\\n    function initialize(uint256 seed) external;\\n\\n    function addRandomness(uint256 randomness) external;\\n}\\n\",\"keccak256\":\"0x30c47bb1d97367da45f911bfb8c63b0af671e1dae3d5faac65a6203af6717cf6\",\"license\":\"MIT\"},\"src/random/RandomFarm.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\n\\nimport \\\"../interfaces/IRandomFarm.sol\\\";\\n\\nimport \\\"../access/Controllable.sol\\\";\\n\\n/**\\n * @dev A randomness farm. It does what it says - it farms randomness that\\n * is provided by the user into usable randomness by other contracts.\\n */\\ncontract RandomFarm is IRandomFarm, Initializable {\\n    uint256 private randomSeed;\\n    mapping(address => uint256) private salt;\\n\\n    function initialize(uint256 seed) external override initializer {\\n        randomSeed = seed;\\n    }\\n\\n    function isInitialized() external view returns (bool) {\\n        return randomSeed != 0;\\n    }\\n\\n    function addRandomness(uint256 randomness) external override {\\n        randomSeed = uint256(\\n            keccak256(abi.encodePacked(randomSeed, randomness))\\n        );\\n    }\\n\\n    function getRandomBytes(uint8 amount)\\n        external\\n        override\\n        returns (bytes32[] memory _randomBytes)\\n    {\\n        _randomBytes = new bytes32[](amount);\\n        for (uint8 i = 0; i < amount; i++) {\\n            _randomBytes[i] = _randomByte32();\\n        }\\n    }\\n\\n    function getRandomUints(uint8 amount)\\n        external\\n        override\\n        returns (uint256[] memory _randomUints)\\n    {\\n        _randomUints = new uint256[](amount);\\n        for (uint8 i = 0; i < amount; i++) {\\n            _randomUints[i] = _randomUint();\\n        }\\n    }\\n\\n    function _randomByte32() internal returns (bytes32 _bytes32) {\\n        _bytes32 = bytes32(\\n            keccak256(\\n                abi.encodePacked(\\n                    blockhash(block.number - 1),\\n                    randomSeed,\\n                    tx.origin,\\n                    salt[tx.origin]++\\n                )\\n            )\\n        );\\n    }\\n\\n    function _randomUint() internal returns (uint256 _uint) {\\n        _uint = uint256(\\n            keccak256(\\n                abi.encodePacked(\\n                    blockhash(block.number - 1),\\n                    randomSeed,\\n                    tx.origin,\\n                    salt[tx.origin]++\\n                )\\n            )\\n        );\\n    }\\n\\n    function getRandomNumber(uint256 min, uint256 max)\\n        external\\n        override\\n        returns (uint256)\\n    {\\n        return min + (_randomUint() % (max - min));\\n    }\\n}\\n\\ncontract RandomFarmer is IRandomFarmer, Controllable {\\n    IRandomFarm private farm;\\n\\n    constructor() {\\n        _addController(msg.sender);\\n    }\\n\\n    function setFarm(address _farm) public onlyController {\\n        farm = IRandomFarm(_farm);\\n    }\\n\\n    function getFarm() public view returns (address _farm) {\\n        _farm = address(farm);\\n    }\\n\\n    function getRandomBytes(uint8 amount)\\n        external\\n        override\\n        returns (bytes32[] memory)\\n    {\\n        return farm.getRandomBytes(amount);\\n    }\\n\\n    function getRandomUints(uint8 amount)\\n        external\\n        override\\n        returns (uint256[] memory)\\n    {\\n        return farm.getRandomUints(amount);\\n    }\\n\\n    function getRandomNumber(uint256 min, uint256 max)\\n        external\\n        override\\n        returns (uint256)\\n    {\\n        return farm.getRandomNumber(min, max);\\n    }\\n}\\n\",\"keccak256\":\"0x53475aaa27edf8aca961af748588c9be73fba059e167717c89cfa7a2c3e523b0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b610043565b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b61078b806100526000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a7fc7a071161005b578063a7fc7a07146100fe578063b429afeb14610113578063d4f26c5114610133578063e1c28bef1461014657610088565b80634daf490c1461008d57806359792406146100ab5780636e68fc0a146100cb57806382da649a146100eb575b600080fd5b61009561014e565b6040516100a291906105e6565b60405180910390f35b6100be6100b93660046105c5565b61016a565b6040516100a29190610607565b6100de6100d93660046105a4565b61023b565b6040516100a291906106b3565b6100be6100f93660046105c5565b6102ed565b61011161010c3660046104c3565b610344565b005b6101266101213660046104c3565b6103bc565b6040516100a2919061064b565b6101116101413660046104c3565b6103e7565b61011161046c565b60015473ffffffffffffffffffffffffffffffffffffffff1690565b6001546040517f5979240600000000000000000000000000000000000000000000000000000000815260609173ffffffffffffffffffffffffffffffffffffffff16906359792406906101c19085906004016106ca565b600060405180830381600087803b1580156101db57600080fd5b505af11580156101ef573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261023591908101906104f7565b92915050565b6001546040517f6e68fc0a00000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff1690636e68fc0a9061029490869086906004016106bc565b602060405180830381600087803b1580156102ae57600080fd5b505af11580156102c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e6919061058c565b9392505050565b6001546040517f82da649a00000000000000000000000000000000000000000000000000000000815260609173ffffffffffffffffffffffffffffffffffffffff16906382da649a906101c19085906004016106ca565b3360009081526020819052604090205460ff1615156001148061036657503033145b61038b5760405162461bcd60e51b815260040161038290610656565b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff166000908152602081905260409020805460ff19166001179055565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b3360009081526020819052604090205460ff1615156001148061040957503033145b6104255760405162461bcd60e51b815260040161038290610656565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b3360009081526020819052604090205460ff1615156001148061048e57503033145b6104aa5760405162461bcd60e51b815260040161038290610656565b336000908152602081905260409020805460ff19169055565b6000602082840312156104d4578081fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146102e6578182fd5b60006020808385031215610509578182fd5b825167ffffffffffffffff81111561051f578283fd5b8301601f8101851361052f578283fd5b805161054261053d82610702565b6106d8565b818152838101908385018584028501860189101561055e578687fd5b8694505b83851015610580578051835260019490940193918501918501610562565b50979650505050505050565b60006020828403121561059d578081fd5b5051919050565b600080604083850312156105b6578081fd5b50508035926020909101359150565b6000602082840312156105d6578081fd5b813560ff811681146102e6578182fd5b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b6020808252825182820181905260009190848201906040850190845b8181101561063f57835183529284019291840191600101610623565b50909695505050505050565b901515815260200190565b60208082526028908201527f436f6e74726f6c6c61626c653a2063616c6c6572206973206e6f74206120636f60408201527f6e74726f6c6c6572000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b918252602082015260400190565b60ff91909116815260200190565b60405181810167ffffffffffffffff811182821017156106fa576106fa610726565b604052919050565b600067ffffffffffffffff82111561071c5761071c610726565b5060209081020190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea264697066735822122055b984e0f287b05fd3ea207d15f773614f61020ea6999711fe18cf166f04fd3664736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063a7fc7a071161005b578063a7fc7a07146100fe578063b429afeb14610113578063d4f26c5114610133578063e1c28bef1461014657610088565b80634daf490c1461008d57806359792406146100ab5780636e68fc0a146100cb57806382da649a146100eb575b600080fd5b61009561014e565b6040516100a291906105e6565b60405180910390f35b6100be6100b93660046105c5565b61016a565b6040516100a29190610607565b6100de6100d93660046105a4565b61023b565b6040516100a291906106b3565b6100be6100f93660046105c5565b6102ed565b61011161010c3660046104c3565b610344565b005b6101266101213660046104c3565b6103bc565b6040516100a2919061064b565b6101116101413660046104c3565b6103e7565b61011161046c565b60015473ffffffffffffffffffffffffffffffffffffffff1690565b6001546040517f5979240600000000000000000000000000000000000000000000000000000000815260609173ffffffffffffffffffffffffffffffffffffffff16906359792406906101c19085906004016106ca565b600060405180830381600087803b1580156101db57600080fd5b505af11580156101ef573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261023591908101906104f7565b92915050565b6001546040517f6e68fc0a00000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff1690636e68fc0a9061029490869086906004016106bc565b602060405180830381600087803b1580156102ae57600080fd5b505af11580156102c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e6919061058c565b9392505050565b6001546040517f82da649a00000000000000000000000000000000000000000000000000000000815260609173ffffffffffffffffffffffffffffffffffffffff16906382da649a906101c19085906004016106ca565b3360009081526020819052604090205460ff1615156001148061036657503033145b61038b5760405162461bcd60e51b815260040161038290610656565b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff166000908152602081905260409020805460ff19166001179055565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b3360009081526020819052604090205460ff1615156001148061040957503033145b6104255760405162461bcd60e51b815260040161038290610656565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b3360009081526020819052604090205460ff1615156001148061048e57503033145b6104aa5760405162461bcd60e51b815260040161038290610656565b336000908152602081905260409020805460ff19169055565b6000602082840312156104d4578081fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146102e6578182fd5b60006020808385031215610509578182fd5b825167ffffffffffffffff81111561051f578283fd5b8301601f8101851361052f578283fd5b805161054261053d82610702565b6106d8565b818152838101908385018584028501860189101561055e578687fd5b8694505b83851015610580578051835260019490940193918501918501610562565b50979650505050505050565b60006020828403121561059d578081fd5b5051919050565b600080604083850312156105b6578081fd5b50508035926020909101359150565b6000602082840312156105d6578081fd5b813560ff811681146102e6578182fd5b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b6020808252825182820181905260009190848201906040850190845b8181101561063f57835183529284019291840191600101610623565b50909695505050505050565b901515815260200190565b60208082526028908201527f436f6e74726f6c6c61626c653a2063616c6c6572206973206e6f74206120636f60408201527f6e74726f6c6c6572000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b918252602082015260400190565b60ff91909116815260200190565b60405181810167ffffffffffffffff811182821017156106fa576106fa610726565b604052919050565b600067ffffffffffffffff82111561071c5761071c610726565b5060209081020190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea264697066735822122055b984e0f287b05fd3ea207d15f773614f61020ea6999711fe18cf166f04fd3664736f6c63430008000033",
  "libraries": {
    "Strings": "0xeB3E79099663eC952e02E608E00d463F36b4Fb75",
    "AddressSet": "0x8974D57fCfF9C10E9d41709da86d006604D8c75d",
    "UInt256Set": "0x8B6893DB13b55d4952a51d5188215e2a470515a9",
    "Create2": "0xBa85d3e8E0F9e48F5c21649d33f6d0f9Af12E3f5",
    "WrappedTokenLib": "0x0307a2E913FD8fb384a939Cfb7655C30820727D8",
    "ComplexPoolLib": "0x3802c9d35c585ac6668e24A93Bb341D50662aA4E"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addController(address)": {
        "details": "Add an address allowed to control this contract"
      },
      "isController(address)": {
        "details": "Check if this address is a controller"
      },
      "relinquishControl()": {
        "details": "Remove the sender address from the list of controllers"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12920,
        "contract": "src/random/RandomFarm.sol:RandomFarmer",
        "label": "_controllers",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 27832,
        "contract": "src/random/RandomFarm.sol:RandomFarmer",
        "label": "farm",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IRandomFarm)17730"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IRandomFarm)17730": {
        "encoding": "inplace",
        "label": "contract IRandomFarm",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}
{
  "address": "0x5feD47F704002E7eaFdBb22e32D99c01e23EB984",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "controllerAddress",
          "type": "address"
        }
      ],
      "name": "ControllerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "controllerAddress",
          "type": "address"
        }
      ],
      "name": "ControllerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "DefaultFeeDivisorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "ETHReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "FeeDivisorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "LiquidityChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "addController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultFeeDivisor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "multiplier",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "multiplier",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "feeDivisor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "divisor",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isController",
      "outputs": [
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "liquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "relinquishControl",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feeDivisor",
          "type": "uint256"
        }
      ],
      "name": "setDefaultFeeDivisor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "oldDivisor",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_liquidityMult",
          "type": "uint256"
        }
      ],
      "name": "setDefaultLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "oldLiquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_feeDivisor",
          "type": "uint256"
        }
      ],
      "name": "setFeeDivisor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "oldDivisor",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x19b53e272e508a6dc1bbfefdef2383285c0542886c511049aea9616611094b74",
  "receipt": {
    "to": null,
    "from": "0xE5E82ae456c04Ad0879785B4f678A4Fcace12AAf",
    "contractAddress": "0x5feD47F704002E7eaFdBb22e32D99c01e23EB984",
    "transactionIndex": 8,
    "gasUsed": "756034",
    "logsBloom": "0x
    "blockHash": "0x0000300c0000020adb2b9cde6ac8a32b9a7bd9489be88a029d8b544de5b10651",
    "transactionHash": "0x19b53e272e508a6dc1bbfefdef2383285c0542886c511049aea9616611094b74",
    "logs": [],
    "blockNumber": 7714586,
    "cumulativeGasUsed": "2285786",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "1beb6fd726d52d0f56b2a930336b25bc",
  "metadata": "{\"compiler\":{\"version\":\"0.7.3+commit.9bfce1f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controllerAddress\",\"type\":\"address\"}],\"name\":\"ControllerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controllerAddress\",\"type\":\"address\"}],\"name\":\"ControllerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"DefaultFeeDivisorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ETHReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FeeDivisorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"LiquidityChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultFeeDivisor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"feeDivisor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"divisor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isController\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relinquishControl\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feeDivisor\",\"type\":\"uint256\"}],\"name\":\"setDefaultFeeDivisor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"oldDivisor\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidityMult\",\"type\":\"uint256\"}],\"name\":\"setDefaultLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"oldLiquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feeDivisor\",\"type\":\"uint256\"}],\"name\":\"setFeeDivisor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"oldDivisor\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addController(address)\":{\"details\":\"Add an address allowed to control this contract\"},\"balanceOf(address)\":{\"details\":\"get the token balance of this fee manager\"},\"constructor\":{\"details\":\"constructor\"},\"defaultFeeDivisor()\":{\"details\":\"Get the fee divisor for the specified token\"},\"defaultLiquidity()\":{\"details\":\"Get the fee divisor for the specified token\"},\"ethBalanceOf()\":{\"details\":\"get the ETH balance of this fee manager\"},\"feeDivisor(address)\":{\"details\":\"Get the fee divisor for the specified token\"},\"isController(address)\":{\"details\":\"Check if this address is a controller\"},\"liquidity(address)\":{\"details\":\"Get the fee divisor for the specified token\"},\"relinquishControl()\":{\"details\":\"Check if this address is a controller\"},\"setDefaultFeeDivisor(uint256)\":{\"details\":\"Set the fee divisor for the specified token\"},\"setDefaultLiquidity(uint256)\":{\"details\":\"Set the fee divisor for the specified token\"},\"setFeeDivisor(address,uint256)\":{\"details\":\"Set the fee divisor for the specified token\"},\"transferEth(address,uint256)\":{\"details\":\"transfer ETH from this contract to the to given recipient\"},\"transferToken(address,address,uint256)\":{\"details\":\"transfer tokens from this contract to the to given recipient\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/fees/NFTGemFeeManager.sol\":\"NFTGemFeeManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"src/access/Controllable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.7.0;\\n\\nimport \\\"../interfaces/IControllable.sol\\\";\\n\\nabstract contract Controllable is IControllable {\\n    mapping(address => bool) internal _controllers;\\n\\n    /**\\n     * @dev Throws if called by any account not in authorized list\\n     */\\n    modifier onlyController() {\\n        require(\\n            _controllers[msg.sender] == true || address(this) == msg.sender,\\n            \\\"Controllable: caller is not a controller\\\"\\n        );\\n        _;\\n    }\\n\\n    /**\\n     * @dev Add an address allowed to control this contract\\n     */\\n    function _addController(address _controller) internal {\\n        _controllers[_controller] = true;\\n    }\\n\\n    /**\\n     * @dev Add an address allowed to control this contract\\n     */\\n    function addController(address _controller) external override onlyController {\\n        _controllers[_controller] = true;\\n    }\\n\\n    /**\\n     * @dev Check if this address is a controller\\n     */\\n    function isController(address _address) external view override returns (bool allowed) {\\n        allowed = _controllers[_address];\\n    }\\n\\n    /**\\n     * @dev Check if this address is a controller\\n     */\\n    function relinquishControl() external view override onlyController {\\n        _controllers[msg.sender];\\n    }\\n}\\n\",\"keccak256\":\"0xd775053cec953f14832c8145de2f04f2259110a29accbc924f5dfe71ea85b095\",\"license\":\"MIT\"},\"src/fees/NFTGemFeeManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0;\\n\\nimport \\\"../access/Controllable.sol\\\";\\nimport \\\"../interfaces/INFTGemFeeManager.sol\\\";\\nimport \\\"../interfaces/IERC20.sol\\\";\\n\\ncontract NFTGemFeeManager is Controllable, INFTGemFeeManager {\\n    address private operator;\\n\\n    uint256 private constant MINIMUM_LIQUIDITY = 50;\\n    uint256 private constant FEE_DIVISOR = 2000;\\n\\n    mapping(address => uint256) private feeDivisors;\\n    uint256 private _defaultFeeDivisor;\\n\\n    mapping(address => uint256) private _liquidity;\\n    uint256 private _defaultLiquidity;\\n\\n    /**\\n     * @dev constructor\\n     */\\n    constructor() {\\n        _addController(msg.sender);\\n        _defaultFeeDivisor = FEE_DIVISOR;\\n        _defaultLiquidity = MINIMUM_LIQUIDITY;\\n    }\\n\\n    /**\\n     * @dev receive funds\\n     */\\n    receive() external payable {\\n        //\\n    }\\n\\n    /**\\n     * @dev Get the fee divisor for the specified token\\n     */\\n    function liquidity(address token) external view override returns (uint256) {\\n        return _liquidity[token] != 0 ? _liquidity[token] : _defaultLiquidity;\\n    }\\n\\n    /**\\n     * @dev Get the fee divisor for the specified token\\n     */\\n    function defaultLiquidity() external view override returns (uint256 multiplier) {\\n        return _defaultLiquidity;\\n    }\\n\\n    /**\\n     * @dev Set the fee divisor for the specified token\\n     */\\n    function setDefaultLiquidity(uint256 _liquidityMult)\\n        external\\n        override\\n        onlyController\\n        returns (uint256 oldLiquidity)\\n    {\\n        require(_liquidityMult != 0, \\\"INVALID\\\");\\n        oldLiquidity = _defaultLiquidity;\\n        _defaultLiquidity = _liquidityMult;\\n        emit LiquidityChanged(operator, oldLiquidity, _defaultLiquidity);\\n    }\\n\\n    /**\\n     * @dev Get the fee divisor for the specified token\\n     */\\n    function feeDivisor(address token) external view override returns (uint256 divisor) {\\n        divisor = feeDivisors[token];\\n        divisor = divisor == 0 ? FEE_DIVISOR : divisor;\\n    }\\n\\n    /**\\n     * @dev Get the fee divisor for the specified token\\n     */\\n    function defaultFeeDivisor() external view override returns (uint256 multiplier) {\\n        return _defaultFeeDivisor;\\n    }\\n\\n    /**\\n     * @dev Set the fee divisor for the specified token\\n     */\\n    function setDefaultFeeDivisor(uint256 _feeDivisor) external override onlyController returns (uint256 oldDivisor) {\\n        require(_feeDivisor != 0, \\\"DIVISIONBYZERO\\\");\\n        oldDivisor = _defaultFeeDivisor;\\n        _defaultFeeDivisor = _feeDivisor;\\n        emit DefaultFeeDivisorChanged(operator, oldDivisor, _defaultFeeDivisor);\\n    }\\n\\n    /**\\n     * @dev Set the fee divisor for the specified token\\n     */\\n    function setFeeDivisor(address token, uint256 _feeDivisor)\\n        external\\n        override\\n        onlyController\\n        returns (uint256 oldDivisor)\\n    {\\n        require(_feeDivisor != 0, \\\"DIVISIONBYZERO\\\");\\n        oldDivisor = feeDivisors[token];\\n        feeDivisors[token] = _feeDivisor;\\n        emit FeeDivisorChanged(operator, token, oldDivisor, _feeDivisor);\\n    }\\n\\n    /**\\n     * @dev get the ETH balance of this fee manager\\n     */\\n    function ethBalanceOf() external view override returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    /**\\n     * @dev get the token balance of this fee manager\\n     */\\n    function balanceOf(address token) external view override returns (uint256) {\\n        return IERC20(token).balanceOf(address(this));\\n    }\\n\\n    /**\\n     * @dev transfer ETH from this contract to the to given recipient\\n     */\\n    function transferEth(address payable recipient, uint256 amount) external override onlyController {\\n        require(address(this).balance >= amount, \\\"INSUFFICIENT_BALANCE\\\");\\n        recipient.transfer(amount);\\n    }\\n\\n    /**\\n     * @dev transfer tokens from this contract to the to given recipient\\n     */\\n    function transferToken(\\n        address token,\\n        address recipient,\\n        uint256 amount\\n    ) external override onlyController {\\n        require(IERC20(token).balanceOf(address(this)) >= amount, \\\"INSUFFICIENT_BALANCE\\\");\\n        IERC20(token).transfer(recipient, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x7c0ab92f3821da9759d90f9211796308a719f0ea2b18119ea843135da2689d53\",\"license\":\"MIT\"},\"src/interfaces/IControllable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0;\\n\\ninterface IControllable {\\n    event ControllerAdded(address indexed contractAddress, address indexed controllerAddress);\\n    event ControllerRemoved(address indexed contractAddress, address indexed controllerAddress);\\n\\n    function addController(address controller) external;\\n\\n    function isController(address controller) external view returns (bool);\\n\\n    function relinquishControl() external;\\n}\\n\",\"keccak256\":\"0x2f2d8600b126c9f7e41c2d3f94d9cf833ccd0312b74a9563c769743a192f81ca\",\"license\":\"MIT\"},\"src/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.7.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x6be5c98231ba90ad43bcf7dad027c1a1e7787220565aa3bb24becace05825664\",\"license\":\"MIT\"},\"src/interfaces/INFTGemFeeManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0;\\n\\ninterface INFTGemFeeManager {\\n    event DefaultFeeDivisorChanged(address indexed operator, uint256 oldValue, uint256 value);\\n    event FeeDivisorChanged(address indexed operator, address indexed token, uint256 oldValue, uint256 value);\\n    event ETHReceived(address indexed manager, address sender, uint256 value);\\n    event LiquidityChanged(address indexed manager, uint256 oldValue, uint256 value);\\n\\n    function liquidity(address token) external view returns (uint256);\\n\\n    function defaultLiquidity() external view returns (uint256);\\n\\n    function setDefaultLiquidity(uint256 _liquidityMult) external returns (uint256);\\n\\n    function feeDivisor(address token) external view returns (uint256);\\n\\n    function defaultFeeDivisor() external view returns (uint256);\\n\\n    function setFeeDivisor(address token, uint256 _feeDivisor) external returns (uint256);\\n\\n    function setDefaultFeeDivisor(uint256 _feeDivisor) external returns (uint256);\\n\\n    function ethBalanceOf() external view returns (uint256);\\n\\n    function balanceOf(address token) external view returns (uint256);\\n\\n    function transferEth(address payable recipient, uint256 amount) external;\\n\\n    function transferToken(\\n        address token,\\n        address recipient,\\n        uint256 amount\\n    ) external;\\n}\\n\",\"keccak256\":\"0x29f10c923add51ed93bea2cb210c02fa4580f23e687113153f4f1aa3ff8a3e8e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361002a565b6107d0600355603260055561004e565b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b610b9c8061005d6000396000f3fe6080604052600436106100e15760003560e01c8063b429afeb1161007f578063e1c28bef11610059578063e1c28bef146102ad578063e9bb84c2146102c2578063eee1ad80146102fb578063f5537ede1461032e576100e8565b8063b429afeb1461021e578063b8c876b114610265578063c521115414610298576100e8565b80638afe4280116100bb5780638afe428014610171578063a51834ff1461019b578063a7fc7a07146101d4578063b2ae17a514610209576100e8565b80630415c9f4146100ed5780636b4be0b91461012957806370a082311461013e576100e8565b366100e857005b600080fd5b3480156100f957600080fd5b506101176004803603602081101561011057600080fd5b5035610371565b60408051918252519081900360200190f35b34801561013557600080fd5b50610117610478565b34801561014a57600080fd5b506101176004803603602081101561016157600080fd5b50356001600160a01b031661047c565b34801561017d57600080fd5b506101176004803603602081101561019457600080fd5b50356104fd565b3480156101a757600080fd5b50610117600480360360408110156101be57600080fd5b506001600160a01b038135169060200135610604565b3480156101e057600080fd5b50610207600480360360208110156101f757600080fd5b50356001600160a01b0316610719565b005b34801561021557600080fd5b5061011761079a565b34801561022a57600080fd5b506102516004803603602081101561024157600080fd5b50356001600160a01b03166107a0565b604080519115158252519081900360200190f35b34801561027157600080fd5b506101176004803603602081101561028857600080fd5b50356001600160a01b03166107be565b3480156102a457600080fd5b50610117610803565b3480156102b957600080fd5b50610207610809565b3480156102ce57600080fd5b50610207600480360360408110156102e557600080fd5b506001600160a01b038135169060200135610871565b34801561030757600080fd5b506101176004803603602081101561031e57600080fd5b50356001600160a01b031661095e565b34801561033a57600080fd5b506102076004803603606081101561035157600080fd5b506001600160a01b0381358116916020810135909116906040013561098c565b3360009081526020819052604081205460ff1615156001148061039357503033145b6103ce5760405162461bcd60e51b8152600401808060200182810382526028815260200180610b3f6028913960400191505060405180910390fd5b81610420576040805162461bcd60e51b815260206004820152600e60248201527f4449564953494f4e42595a45524f000000000000000000000000000000000000604482015290519081900360640190fd5b506003805490829055600154604080518381526020810185905281516001600160a01b03909316927f50d2fd3a15ffe0a5547c68d91dc96339c386f8a7d180a1f8cb782d39cfed38af929181900390910190a2919050565b4790565b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156104cb57600080fd5b505afa1580156104df573d6000803e3d6000fd5b505050506040513d60208110156104f557600080fd5b505192915050565b3360009081526020819052604081205460ff1615156001148061051f57503033145b61055a5760405162461bcd60e51b8152600401808060200182810382526028815260200180610b3f6028913960400191505060405180910390fd5b816105ac576040805162461bcd60e51b815260206004820152600760248201527f494e56414c494400000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b506005805490829055600154604080518381526020810185905281516001600160a01b03909316927f1b175f1f323705c599a7bebc2915765ab0d8de5f922b0b68d08dd1dbe2d97fc4929181900390910190a2919050565b3360009081526020819052604081205460ff1615156001148061062657503033145b6106615760405162461bcd60e51b8152600401808060200182810382526028815260200180610b3f6028913960400191505060405180910390fd5b816106b3576040805162461bcd60e51b815260206004820152600e60248201527f4449564953494f4e42595a45524f000000000000000000000000000000000000604482015290519081900360640190fd5b506001600160a01b0380831660008181526002602090815260409182902080549086905560015483518281529283018790528351919516927f8f604bc5c2d1916032a90c8f4d7cdc0dff78f1ba11119344f3fe46ddea179544928290030190a392915050565b3360009081526020819052604090205460ff1615156001148061073b57503033145b6107765760405162461bcd60e51b8152600401808060200182810382526028815260200180610b3f6028913960400191505060405180910390fd5b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b60055490565b6001600160a01b031660009081526020819052604090205460ff1690565b6001600160a01b0381166000908152600460205260408120546107e3576005546107fd565b6001600160a01b0382166000908152600460205260409020545b92915050565b60035490565b3360009081526020819052604090205460ff1615156001148061082b57503033145b6108665760405162461bcd60e51b8152600401808060200182810382526028815260200180610b3f6028913960400191505060405180910390fd5b336000908152602052565b3360009081526020819052604090205460ff1615156001148061089357503033145b6108ce5760405162461bcd60e51b8152600401808060200182810382526028815260200180610b3f6028913960400191505060405180910390fd5b80471015610923576040805162461bcd60e51b815260206004820152601460248201527f494e53554646494349454e545f42414c414e4345000000000000000000000000604482015290519081900360640190fd5b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610959573d6000803e3d6000fd5b505050565b6001600160a01b038116600090815260026020526040902054801561098357806107fd565b6107d092915050565b3360009081526020819052604090205460ff161515600114806109ae57503033145b6109e95760405162461bcd60e51b8152600401808060200182810382526028815260200180610b3f6028913960400191505060405180910390fd5b80836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610a3757600080fd5b505afa158015610a4b573d6000803e3d6000fd5b505050506040513d6020811015610a6157600080fd5b50511015610ab6576040805162461bcd60e51b815260206004820152601460248201527f494e53554646494349454e545f42414c414e4345000000000000000000000000604482015290519081900360640190fd5b826001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610b0d57600080fd5b505af1158015610b21573d6000803e3d6000fd5b505050506040513d6020811015610b3757600080fd5b505050505056fe436f6e74726f6c6c61626c653a2063616c6c6572206973206e6f74206120636f6e74726f6c6c6572a2646970667358221220a805aa7dca325a8e917d7401d0884a4dacf9c4f1395a45d4ffb558038bcc33f864736f6c63430007030033",
  "deployedBytecode": "0x6080604052600436106100e15760003560e01c8063b429afeb1161007f578063e1c28bef11610059578063e1c28bef146102ad578063e9bb84c2146102c2578063eee1ad80146102fb578063f5537ede1461032e576100e8565b8063b429afeb1461021e578063b8c876b114610265578063c521115414610298576100e8565b80638afe4280116100bb5780638afe428014610171578063a51834ff1461019b578063a7fc7a07146101d4578063b2ae17a514610209576100e8565b80630415c9f4146100ed5780636b4be0b91461012957806370a082311461013e576100e8565b366100e857005b600080fd5b3480156100f957600080fd5b506101176004803603602081101561011057600080fd5b5035610371565b60408051918252519081900360200190f35b34801561013557600080fd5b50610117610478565b34801561014a57600080fd5b506101176004803603602081101561016157600080fd5b50356001600160a01b031661047c565b34801561017d57600080fd5b506101176004803603602081101561019457600080fd5b50356104fd565b3480156101a757600080fd5b50610117600480360360408110156101be57600080fd5b506001600160a01b038135169060200135610604565b3480156101e057600080fd5b50610207600480360360208110156101f757600080fd5b50356001600160a01b0316610719565b005b34801561021557600080fd5b5061011761079a565b34801561022a57600080fd5b506102516004803603602081101561024157600080fd5b50356001600160a01b03166107a0565b604080519115158252519081900360200190f35b34801561027157600080fd5b506101176004803603602081101561028857600080fd5b50356001600160a01b03166107be565b3480156102a457600080fd5b50610117610803565b3480156102b957600080fd5b50610207610809565b3480156102ce57600080fd5b50610207600480360360408110156102e557600080fd5b506001600160a01b038135169060200135610871565b34801561030757600080fd5b506101176004803603602081101561031e57600080fd5b50356001600160a01b031661095e565b34801561033a57600080fd5b506102076004803603606081101561035157600080fd5b506001600160a01b0381358116916020810135909116906040013561098c565b3360009081526020819052604081205460ff1615156001148061039357503033145b6103ce5760405162461bcd60e51b8152600401808060200182810382526028815260200180610b3f6028913960400191505060405180910390fd5b81610420576040805162461bcd60e51b815260206004820152600e60248201527f4449564953494f4e42595a45524f000000000000000000000000000000000000604482015290519081900360640190fd5b506003805490829055600154604080518381526020810185905281516001600160a01b03909316927f50d2fd3a15ffe0a5547c68d91dc96339c386f8a7d180a1f8cb782d39cfed38af929181900390910190a2919050565b4790565b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156104cb57600080fd5b505afa1580156104df573d6000803e3d6000fd5b505050506040513d60208110156104f557600080fd5b505192915050565b3360009081526020819052604081205460ff1615156001148061051f57503033145b61055a5760405162461bcd60e51b8152600401808060200182810382526028815260200180610b3f6028913960400191505060405180910390fd5b816105ac576040805162461bcd60e51b815260206004820152600760248201527f494e56414c494400000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b506005805490829055600154604080518381526020810185905281516001600160a01b03909316927f1b175f1f323705c599a7bebc2915765ab0d8de5f922b0b68d08dd1dbe2d97fc4929181900390910190a2919050565b3360009081526020819052604081205460ff1615156001148061062657503033145b6106615760405162461bcd60e51b8152600401808060200182810382526028815260200180610b3f6028913960400191505060405180910390fd5b816106b3576040805162461bcd60e51b815260206004820152600e60248201527f4449564953494f4e42595a45524f000000000000000000000000000000000000604482015290519081900360640190fd5b506001600160a01b0380831660008181526002602090815260409182902080549086905560015483518281529283018790528351919516927f8f604bc5c2d1916032a90c8f4d7cdc0dff78f1ba11119344f3fe46ddea179544928290030190a392915050565b3360009081526020819052604090205460ff1615156001148061073b57503033145b6107765760405162461bcd60e51b8152600401808060200182810382526028815260200180610b3f6028913960400191505060405180910390fd5b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b60055490565b6001600160a01b031660009081526020819052604090205460ff1690565b6001600160a01b0381166000908152600460205260408120546107e3576005546107fd565b6001600160a01b0382166000908152600460205260409020545b92915050565b60035490565b3360009081526020819052604090205460ff1615156001148061082b57503033145b6108665760405162461bcd60e51b8152600401808060200182810382526028815260200180610b3f6028913960400191505060405180910390fd5b336000908152602052565b3360009081526020819052604090205460ff1615156001148061089357503033145b6108ce5760405162461bcd60e51b8152600401808060200182810382526028815260200180610b3f6028913960400191505060405180910390fd5b80471015610923576040805162461bcd60e51b815260206004820152601460248201527f494e53554646494349454e545f42414c414e4345000000000000000000000000604482015290519081900360640190fd5b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610959573d6000803e3d6000fd5b505050565b6001600160a01b038116600090815260026020526040902054801561098357806107fd565b6107d092915050565b3360009081526020819052604090205460ff161515600114806109ae57503033145b6109e95760405162461bcd60e51b8152600401808060200182810382526028815260200180610b3f6028913960400191505060405180910390fd5b80836001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610a3757600080fd5b505afa158015610a4b573d6000803e3d6000fd5b505050506040513d6020811015610a6157600080fd5b50511015610ab6576040805162461bcd60e51b815260206004820152601460248201527f494e53554646494349454e545f42414c414e4345000000000000000000000000604482015290519081900360640190fd5b826001600160a01b031663a9059cbb83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015610b0d57600080fd5b505af1158015610b21573d6000803e3d6000fd5b505050506040513d6020811015610b3757600080fd5b505050505056fe436f6e74726f6c6c61626c653a2063616c6c6572206973206e6f74206120636f6e74726f6c6c6572a2646970667358221220a805aa7dca325a8e917d7401d0884a4dacf9c4f1395a45d4ffb558038bcc33f864736f6c63430007030033",
  "libraries": {
    "GovernanceLib": "0xfEbf82b4c4819f7ded1e0fF361c183381d1990Ea",
    "Strings": "0x2b5E12feB40530f028cE81c0B04F9B7804F3bD8B",
    "SafeMath": "0xf88a49ac5FFC67cA94a1235A44F4F366eb0c77f0",
    "AddressSet": "0xc400Df1a9cB78148de8c145100D1e4E40f4a5142",
    "UInt256Set": "0xD208031f5dc5134A58cA550a14637461A0e7A469",
    "Create2": "0x9eb74D584F4500E35643463d17e0f96878bcD970",
    "ProposalsLib": "0x2f92371a46118423d267AECB352f52E773B21B5d",
    "ComplexPoolLib": "0x988d5537f746daE83838d13F3fe875030e3F3fE7",
    "WrappedTokenLib": "0xe967bb5871CC517F2941A41D114cbC5fC35C96D3",
    "Unigem20Library": "0x47dC7a56d15D6E6E8F0C5c2daD0ad2D2D1ba415D"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addController(address)": {
        "details": "Add an address allowed to control this contract"
      },
      "balanceOf(address)": {
        "details": "get the token balance of this fee manager"
      },
      "constructor": {
        "details": "constructor"
      },
      "defaultFeeDivisor()": {
        "details": "Get the fee divisor for the specified token"
      },
      "defaultLiquidity()": {
        "details": "Get the fee divisor for the specified token"
      },
      "ethBalanceOf()": {
        "details": "get the ETH balance of this fee manager"
      },
      "feeDivisor(address)": {
        "details": "Get the fee divisor for the specified token"
      },
      "isController(address)": {
        "details": "Check if this address is a controller"
      },
      "liquidity(address)": {
        "details": "Get the fee divisor for the specified token"
      },
      "relinquishControl()": {
        "details": "Check if this address is a controller"
      },
      "setDefaultFeeDivisor(uint256)": {
        "details": "Set the fee divisor for the specified token"
      },
      "setDefaultLiquidity(uint256)": {
        "details": "Set the fee divisor for the specified token"
      },
      "setFeeDivisor(address,uint256)": {
        "details": "Set the fee divisor for the specified token"
      },
      "transferEth(address,uint256)": {
        "details": "transfer ETH from this contract to the to given recipient"
      },
      "transferToken(address,address,uint256)": {
        "details": "transfer tokens from this contract to the to given recipient"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10169,
        "contract": "src/fees/NFTGemFeeManager.sol:NFTGemFeeManager",
        "label": "_controllers",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 16589,
        "contract": "src/fees/NFTGemFeeManager.sol:NFTGemFeeManager",
        "label": "operator",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 16599,
        "contract": "src/fees/NFTGemFeeManager.sol:NFTGemFeeManager",
        "label": "feeDivisors",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 16601,
        "contract": "src/fees/NFTGemFeeManager.sol:NFTGemFeeManager",
        "label": "_defaultFeeDivisor",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 16605,
        "contract": "src/fees/NFTGemFeeManager.sol:NFTGemFeeManager",
        "label": "_liquidity",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 16607,
        "contract": "src/fees/NFTGemFeeManager.sol:NFTGemFeeManager",
        "label": "_defaultLiquidity",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
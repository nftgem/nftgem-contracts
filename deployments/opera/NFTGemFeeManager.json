{
  "address": "0xAbd24e0Ed1fd83a2aa46312042fC79FA818e1B3d",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "DefaultFeeDivisorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "ETHReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "FeeDivisorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "LiquidityChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "balanceOF",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultFeeDivisor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "multiplier",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "multiplier",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "feeDivisor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "divisor",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "liquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feeDivisor",
          "type": "uint256"
        }
      ],
      "name": "setDefaultFeeDivisor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "oldDivisor",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_liquidityMult",
          "type": "uint256"
        }
      ],
      "name": "setDefaultLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "oldLiquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_feeDivisor",
          "type": "uint256"
        }
      ],
      "name": "setFeeDivisor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "oldDivisor",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "setOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x19006006d517f037ef3418838411ae8689e0baaf11143572d0860694f52936dc",
  "receipt": {
    "to": null,
    "from": "0xE5E82ae456c04Ad0879785B4f678A4Fcace12AAf",
    "contractAddress": "0xAbd24e0Ed1fd83a2aa46312042fC79FA818e1B3d",
    "transactionIndex": 2,
    "gasUsed": "812194",
    "logsBloom": "0x
    "blockHash": "0x0000137a00002bd28a84b86cac7bf589698c087f96b4ca2cb1c6ff129cbed0c0",
    "transactionHash": "0x19006006d517f037ef3418838411ae8689e0baaf11143572d0860694f52936dc",
    "logs": [],
    "blockNumber": 3974086,
    "cumulativeGasUsed": "1063476",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "f5d26bfc2bb575f04cda7948dc914d25",
  "metadata": "{\"compiler\":{\"version\":\"0.7.3+commit.9bfce1f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"DefaultFeeDivisorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ETHReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FeeDivisorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"LiquidityChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"balanceOF\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultFeeDivisor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"feeDivisor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"divisor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feeDivisor\",\"type\":\"uint256\"}],\"name\":\"setDefaultFeeDivisor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"oldDivisor\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidityMult\",\"type\":\"uint256\"}],\"name\":\"setDefaultLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"oldLiquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feeDivisor\",\"type\":\"uint256\"}],\"name\":\"setFeeDivisor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"oldDivisor\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOF(address)\":{\"details\":\"get the token balance of this fee manager\"},\"constructor\":{\"details\":\"constructor\"},\"defaultFeeDivisor()\":{\"details\":\"Get the fee divisor for the specified token\"},\"defaultLiquidity()\":{\"details\":\"Get the fee divisor for the specified token\"},\"ethBalanceOf()\":{\"details\":\"get the ETH balance of this fee manager\"},\"feeDivisor(address)\":{\"details\":\"Get the fee divisor for the specified token\"},\"liquidity(address)\":{\"details\":\"Get the fee divisor for the specified token\"},\"setDefaultFeeDivisor(uint256)\":{\"details\":\"Set the fee divisor for the specified token\"},\"setDefaultLiquidity(uint256)\":{\"details\":\"Set the fee divisor for the specified token\"},\"setFeeDivisor(address,uint256)\":{\"details\":\"Set the fee divisor for the specified token\"},\"setOperator(address)\":{\"details\":\"Set the address allowed to mint and burn\"},\"transferEth(address,uint256)\":{\"details\":\"transfer ETH from this contract to the to given recipient\"},\"transferToken(address,address,uint256)\":{\"details\":\"transfer tokens from this contract to the to given recipient\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/fees/NFTGemFeeManager.sol\":\"NFTGemFeeManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":9999},\"remappings\":[]},\"sources\":{\"src/fees/NFTGemFeeManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0;\\n\\nimport \\\"../interfaces/INFTGemFeeManager.sol\\\";\\nimport \\\"../interfaces/IERC20.sol\\\";\\n\\ncontract NFTGemFeeManager is INFTGemFeeManager {\\n    address private operator;\\n\\n    uint256 private constant MINIMUM_LIQUIDITY = 100;\\n    uint256 private constant FEE_DIVISOR = 1000;\\n\\n    mapping(address => uint256) private feeDivisors;\\n    uint256 private _defaultFeeDivisor;\\n\\n    mapping(address => uint256) private _liquidity;\\n    uint256 private _defaultLiquidity;\\n\\n    /**\\n     * @dev constructor\\n     */\\n    constructor() {\\n        _defaultFeeDivisor = FEE_DIVISOR;\\n        _defaultLiquidity = MINIMUM_LIQUIDITY;\\n    }\\n\\n    /**\\n     * @dev Set the address allowed to mint and burn\\n     */\\n    receive() external payable {\\n        //\\n    }\\n\\n    /**\\n     * @dev Set the address allowed to mint and burn\\n     */\\n    function setOperator(address _operator) external {\\n        require(operator == address(0), \\\"IMMUTABLE\\\");\\n        operator = _operator;\\n    }\\n\\n    /**\\n     * @dev Get the fee divisor for the specified token\\n     */\\n    function liquidity(address token) external view override returns (uint256) {\\n        return _liquidity[token] != 0 ? _liquidity[token] : _defaultLiquidity;\\n    }\\n\\n    /**\\n     * @dev Get the fee divisor for the specified token\\n     */\\n    function defaultLiquidity() external view override returns (uint256 multiplier) {\\n        return _defaultLiquidity;\\n    }\\n\\n    /**\\n     * @dev Set the fee divisor for the specified token\\n     */\\n    function setDefaultLiquidity(uint256 _liquidityMult) external override returns (uint256 oldLiquidity) {\\n        require(operator == msg.sender, \\\"UNAUTHORIZED\\\");\\n        require(_liquidityMult != 0, \\\"INVALID\\\");\\n        oldLiquidity = _defaultLiquidity;\\n        _defaultLiquidity = _liquidityMult;\\n        emit LiquidityChanged(operator, oldLiquidity, _defaultLiquidity);\\n    }\\n\\n    /**\\n     * @dev Get the fee divisor for the specified token\\n     */\\n    function feeDivisor(address token) external view override returns (uint256 divisor) {\\n        divisor = feeDivisors[token];\\n        divisor = divisor == 0 ? FEE_DIVISOR : divisor;\\n    }\\n\\n    /**\\n     * @dev Get the fee divisor for the specified token\\n     */\\n    function defaultFeeDivisor() external view override returns (uint256 multiplier) {\\n        return _defaultFeeDivisor;\\n    }\\n\\n    /**\\n     * @dev Set the fee divisor for the specified token\\n     */\\n    function setDefaultFeeDivisor(uint256 _feeDivisor) external override returns (uint256 oldDivisor) {\\n        require(operator == msg.sender, \\\"UNAUTHORIZED\\\");\\n        require(_feeDivisor != 0, \\\"DIVISIONBYZERO\\\");\\n        oldDivisor = _defaultFeeDivisor;\\n        _defaultFeeDivisor = _feeDivisor;\\n        emit DefaultFeeDivisorChanged(operator, oldDivisor, _defaultFeeDivisor);\\n    }\\n\\n    /**\\n     * @dev Set the fee divisor for the specified token\\n     */\\n    function setFeeDivisor(address token, uint256 _feeDivisor) external override returns (uint256 oldDivisor) {\\n        require(operator == msg.sender, \\\"UNAUTHORIZED\\\");\\n        require(_feeDivisor != 0, \\\"DIVISIONBYZERO\\\");\\n        oldDivisor = feeDivisors[token];\\n        feeDivisors[token] = _feeDivisor;\\n        emit FeeDivisorChanged(operator, token, oldDivisor, _feeDivisor);\\n    }\\n\\n    /**\\n     * @dev get the ETH balance of this fee manager\\n     */\\n    function ethBalanceOf() external view override returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    /**\\n     * @dev get the token balance of this fee manager\\n     */\\n    function balanceOF(address token) external view override returns (uint256) {\\n        return IERC20(token).balanceOf(address(this));\\n    }\\n\\n    /**\\n     * @dev transfer ETH from this contract to the to given recipient\\n     */\\n    function transferEth(address payable recipient, uint256 amount) external override {\\n        require(operator == msg.sender, \\\"UNAUTHORIZED\\\");\\n        require(address(this).balance >= amount, \\\"INSUFFICIENT_BALANCE\\\");\\n        recipient.transfer(amount);\\n    }\\n\\n    /**\\n     * @dev transfer tokens from this contract to the to given recipient\\n     */\\n    function transferToken(\\n        address token,\\n        address recipient,\\n        uint256 amount\\n    ) external override {\\n        require(operator == msg.sender, \\\"UNAUTHORIZED\\\");\\n        require(IERC20(token).balanceOf(address(this)) >= amount, \\\"INSUFFICIENT_BALANCE\\\");\\n        IERC20(token).transfer(recipient, amount);\\n    }\\n}\\n\",\"keccak256\":\"0xbbdd4e2b54c6a5e1b9a37ca00c3df19c1d91bb449ed4f4ec7584508d333f8ece\",\"license\":\"MIT\"},\"src/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.7.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x6be5c98231ba90ad43bcf7dad027c1a1e7787220565aa3bb24becace05825664\",\"license\":\"MIT\"},\"src/interfaces/INFTGemFeeManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0;\\n\\ninterface INFTGemFeeManager {\\n\\n    event DefaultFeeDivisorChanged(address indexed operator, uint256 oldValue, uint256 value);\\n    event FeeDivisorChanged(address indexed operator, address indexed token, uint256 oldValue, uint256 value);\\n    event ETHReceived(address indexed manager, address sender, uint256 value);\\n    event LiquidityChanged(address indexed manager, uint256 oldValue, uint256 value);\\n\\n    function liquidity(address token) external view returns (uint256);\\n\\n    function defaultLiquidity() external view returns (uint256);\\n\\n    function setDefaultLiquidity(uint256 _liquidityMult) external returns (uint256);\\n\\n    function feeDivisor(address token) external view returns (uint256);\\n\\n    function defaultFeeDivisor() external view returns (uint256);\\n\\n    function setFeeDivisor(address token, uint256 _feeDivisor) external returns (uint256);\\n\\n    function setDefaultFeeDivisor(uint256 _feeDivisor) external returns (uint256);\\n\\n    function ethBalanceOf() external view returns (uint256);\\n\\n    function balanceOF(address token) external view returns (uint256);\\n\\n    function transferEth(address payable recipient, uint256 amount) external;\\n\\n    function transferToken(\\n        address token,\\n        address recipient,\\n        uint256 amount\\n    ) external;\\n\\n}\\n\",\"keccak256\":\"0xc1beb3a7410a4a0f6f8c47a8901fe81207199ff243704e79e2be60d5ed1bd305\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506103e86002556064600455610d1d8061002b6000396000f3fe6080604052600436106100cb5760003560e01c8063b3ab15fb11610074578063e9bb84c21161004e578063e9bb84c214610284578063eee1ad80146102ca578063f5537ede1461030a576100d2565b8063b3ab15fb146101ed578063b8c876b11461022f578063c52111541461026f576100d2565b80638afe4280116100a55780638afe428014610168578063a51834ff14610192578063b2ae17a5146101d8576100d2565b80630415c9f4146100d7578063244e0c87146101135780636b4be0b914610153576100d2565b366100d257005b600080fd5b3480156100e357600080fd5b50610101600480360360208110156100fa57600080fd5b503561035a565b60408051918252519081900360200190f35b34801561011f57600080fd5b506101016004803603602081101561013657600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166104b2565b34801561015f57600080fd5b5061010161054d565b34801561017457600080fd5b506101016004803603602081101561018b57600080fd5b5035610551565b34801561019e57600080fd5b50610101600480360360408110156101b557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356106a9565b3480156101e457600080fd5b5061010161080f565b3480156101f957600080fd5b5061022d6004803603602081101561021057600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610815565b005b34801561023b57600080fd5b506101016004803603602081101561025257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166108e1565b34801561027b57600080fd5b50610101610940565b34801561029057600080fd5b5061022d600480360360408110156102a757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610946565b3480156102d657600080fd5b50610101600480360360208110156102ed57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610a83565b34801561031657600080fd5b5061022d6004803603606081101561032d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610abe565b6000805473ffffffffffffffffffffffffffffffffffffffff1633146103e157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015290519081900360640190fd5b8161044d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4449564953494f4e42595a45524f000000000000000000000000000000000000604482015290519081900360640190fd5b5060028054908290556000546040805183815260208101859052815173ffffffffffffffffffffffffffffffffffffffff909316927f50d2fd3a15ffe0a5547c68d91dc96339c386f8a7d180a1f8cb782d39cfed38af929181900390910190a2919050565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561051b57600080fd5b505afa15801561052f573d6000803e3d6000fd5b505050506040513d602081101561054557600080fd5b505192915050565b4790565b6000805473ffffffffffffffffffffffffffffffffffffffff1633146105d857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015290519081900360640190fd5b8161064457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f494e56414c494400000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b5060048054908290556000546040805183815260208101859052815173ffffffffffffffffffffffffffffffffffffffff909316927f1b175f1f323705c599a7bebc2915765ab0d8de5f922b0b68d08dd1dbe2d97fc4929181900390910190a2919050565b6000805473ffffffffffffffffffffffffffffffffffffffff16331461073057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015290519081900360640190fd5b8161079c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4449564953494f4e42595a45524f000000000000000000000000000000000000604482015290519081900360640190fd5b5073ffffffffffffffffffffffffffffffffffffffff8083166000818152600160209081526040808320805490879055925481518481529283018790528151939516927f8f604bc5c2d1916032a90c8f4d7cdc0dff78f1ba11119344f3fe46ddea1795449281900390910190a392915050565b60045490565b60005473ffffffffffffffffffffffffffffffffffffffff161561089a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f494d4d555441424c450000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260408120546109135760045461093a565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020545b92915050565b60025490565b60005473ffffffffffffffffffffffffffffffffffffffff1633146109cc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015290519081900360640190fd5b80471015610a3b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f494e53554646494349454e545f42414c414e4345000000000000000000000000604482015290519081900360640190fd5b60405173ffffffffffffffffffffffffffffffffffffffff83169082156108fc029083906000818181858888f19350505050158015610a7e573d6000803e3d6000fd5b505050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600160205260409020548015610ab5578061093a565b6103e892915050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610b4457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015290519081900360640190fd5b808373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610bac57600080fd5b505afa158015610bc0573d6000803e3d6000fd5b505050506040513d6020811015610bd657600080fd5b50511015610c4557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f494e53554646494349454e545f42414c414e4345000000000000000000000000604482015290519081900360640190fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610cb657600080fd5b505af1158015610cca573d6000803e3d6000fd5b505050506040513d6020811015610ce057600080fd5b505050505056fea2646970667358221220252ce3c2933743a53bcfb399bc569744f385be1013b97be0dbdeaf4eac18073d64736f6c63430007030033",
  "deployedBytecode": "0x6080604052600436106100cb5760003560e01c8063b3ab15fb11610074578063e9bb84c21161004e578063e9bb84c214610284578063eee1ad80146102ca578063f5537ede1461030a576100d2565b8063b3ab15fb146101ed578063b8c876b11461022f578063c52111541461026f576100d2565b80638afe4280116100a55780638afe428014610168578063a51834ff14610192578063b2ae17a5146101d8576100d2565b80630415c9f4146100d7578063244e0c87146101135780636b4be0b914610153576100d2565b366100d257005b600080fd5b3480156100e357600080fd5b50610101600480360360208110156100fa57600080fd5b503561035a565b60408051918252519081900360200190f35b34801561011f57600080fd5b506101016004803603602081101561013657600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166104b2565b34801561015f57600080fd5b5061010161054d565b34801561017457600080fd5b506101016004803603602081101561018b57600080fd5b5035610551565b34801561019e57600080fd5b50610101600480360360408110156101b557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356106a9565b3480156101e457600080fd5b5061010161080f565b3480156101f957600080fd5b5061022d6004803603602081101561021057600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610815565b005b34801561023b57600080fd5b506101016004803603602081101561025257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166108e1565b34801561027b57600080fd5b50610101610940565b34801561029057600080fd5b5061022d600480360360408110156102a757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610946565b3480156102d657600080fd5b50610101600480360360208110156102ed57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610a83565b34801561031657600080fd5b5061022d6004803603606081101561032d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610abe565b6000805473ffffffffffffffffffffffffffffffffffffffff1633146103e157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015290519081900360640190fd5b8161044d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4449564953494f4e42595a45524f000000000000000000000000000000000000604482015290519081900360640190fd5b5060028054908290556000546040805183815260208101859052815173ffffffffffffffffffffffffffffffffffffffff909316927f50d2fd3a15ffe0a5547c68d91dc96339c386f8a7d180a1f8cb782d39cfed38af929181900390910190a2919050565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561051b57600080fd5b505afa15801561052f573d6000803e3d6000fd5b505050506040513d602081101561054557600080fd5b505192915050565b4790565b6000805473ffffffffffffffffffffffffffffffffffffffff1633146105d857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015290519081900360640190fd5b8161064457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f494e56414c494400000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b5060048054908290556000546040805183815260208101859052815173ffffffffffffffffffffffffffffffffffffffff909316927f1b175f1f323705c599a7bebc2915765ab0d8de5f922b0b68d08dd1dbe2d97fc4929181900390910190a2919050565b6000805473ffffffffffffffffffffffffffffffffffffffff16331461073057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015290519081900360640190fd5b8161079c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4449564953494f4e42595a45524f000000000000000000000000000000000000604482015290519081900360640190fd5b5073ffffffffffffffffffffffffffffffffffffffff8083166000818152600160209081526040808320805490879055925481518481529283018790528151939516927f8f604bc5c2d1916032a90c8f4d7cdc0dff78f1ba11119344f3fe46ddea1795449281900390910190a392915050565b60045490565b60005473ffffffffffffffffffffffffffffffffffffffff161561089a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f494d4d555441424c450000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260408120546109135760045461093a565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020545b92915050565b60025490565b60005473ffffffffffffffffffffffffffffffffffffffff1633146109cc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015290519081900360640190fd5b80471015610a3b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f494e53554646494349454e545f42414c414e4345000000000000000000000000604482015290519081900360640190fd5b60405173ffffffffffffffffffffffffffffffffffffffff83169082156108fc029083906000818181858888f19350505050158015610a7e573d6000803e3d6000fd5b505050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600160205260409020548015610ab5578061093a565b6103e892915050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610b4457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a45440000000000000000000000000000000000000000604482015290519081900360640190fd5b808373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610bac57600080fd5b505afa158015610bc0573d6000803e3d6000fd5b505050506040513d6020811015610bd657600080fd5b50511015610c4557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f494e53554646494349454e545f42414c414e4345000000000000000000000000604482015290519081900360640190fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610cb657600080fd5b505af1158015610cca573d6000803e3d6000fd5b505050506040513d6020811015610ce057600080fd5b505050505056fea2646970667358221220252ce3c2933743a53bcfb399bc569744f385be1013b97be0dbdeaf4eac18073d64736f6c63430007030033",
  "libraries": {
    "GovernanceLib": "0x9C3D3C5E21D1E2fD85C49024c5B7A1CE8AE292B6",
    "Strings": "0xF15981B829E9e57b7f46E3b9f0bAEEA1f6AC8D1C",
    "SafeMath": "0x1e2A9F00e6a0EdeD32fD45D4154E6B10cf08553f",
    "ProposalsLib": "0xf17CCc8d9A407274eb45cA45F87084554110D7e7",
    "Create2": "0x302A78dF2E5D8232e06C3b333c2E5b27d0129099"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {
      "balanceOF(address)": {
        "details": "get the token balance of this fee manager"
      },
      "constructor": {
        "details": "constructor"
      },
      "defaultFeeDivisor()": {
        "details": "Get the fee divisor for the specified token"
      },
      "defaultLiquidity()": {
        "details": "Get the fee divisor for the specified token"
      },
      "ethBalanceOf()": {
        "details": "get the ETH balance of this fee manager"
      },
      "feeDivisor(address)": {
        "details": "Get the fee divisor for the specified token"
      },
      "liquidity(address)": {
        "details": "Get the fee divisor for the specified token"
      },
      "setDefaultFeeDivisor(uint256)": {
        "details": "Set the fee divisor for the specified token"
      },
      "setDefaultLiquidity(uint256)": {
        "details": "Set the fee divisor for the specified token"
      },
      "setFeeDivisor(address,uint256)": {
        "details": "Set the fee divisor for the specified token"
      },
      "setOperator(address)": {
        "details": "Set the address allowed to mint and burn"
      },
      "transferEth(address,uint256)": {
        "details": "transfer ETH from this contract to the to given recipient"
      },
      "transferToken(address,address,uint256)": {
        "details": "transfer tokens from this contract to the to given recipient"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10818,
        "contract": "src/fees/NFTGemFeeManager.sol:NFTGemFeeManager",
        "label": "operator",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 10828,
        "contract": "src/fees/NFTGemFeeManager.sol:NFTGemFeeManager",
        "label": "feeDivisors",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10830,
        "contract": "src/fees/NFTGemFeeManager.sol:NFTGemFeeManager",
        "label": "_defaultFeeDivisor",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 10834,
        "contract": "src/fees/NFTGemFeeManager.sol:NFTGemFeeManager",
        "label": "_liquidity",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 10836,
        "contract": "src/fees/NFTGemFeeManager.sol:NFTGemFeeManager",
        "label": "_defaultLiquidity",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
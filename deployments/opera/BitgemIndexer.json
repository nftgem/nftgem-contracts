{
  "address": "0x2b3Aa37a746cAD222Be5fa70b1104df43ffFa5cd",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "poolAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "category",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ethPrice",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct IBitgemIndexer.GemPool[]",
          "name": "gemPools",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "gemHash",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "pool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "gemPoolFactory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct IBitgemIndexer.Gem[]",
          "name": "gems",
          "type": "tuple[]"
        }
      ],
      "name": "BulkGemCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "controllerAddress",
          "type": "address"
        }
      ],
      "name": "ControllerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "controllerAddress",
          "type": "address"
        }
      ],
      "name": "ControllerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        }
      ],
      "name": "FactoryCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gemHash",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "gemPoolFactory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "multitoken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "GemCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "opener",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "factoryAddress",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IBitgemIndexer.LootboxFactory",
          "name": "factory",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "poolAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct IBitgemIndexer.Lootbox",
          "name": "lootbox",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "lootHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lootbox",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "probability",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct IBitgemIndexer.Loot[]",
          "name": "receivedLoot",
          "type": "tuple[]"
        }
      ],
      "name": "LootboxOpened",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "multitoken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "category",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethPrice",
          "type": "uint256"
        }
      ],
      "name": "PoolCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gemCreateUID",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "poolAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "category",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ethPrice",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct IBitgemIndexer.GemPool",
          "name": "pool",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "gemHash",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "pool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "gemPoolFactory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct IBitgemIndexer.Gem",
          "name": "gem",
          "type": "tuple"
        }
      ],
      "name": "UserCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "addController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "gemMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "gemHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "gemPoolFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "multitoken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "gemPoolFactoriesMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "multitoken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "category",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ethPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "gemPools",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "multitoken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "category",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ethPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "gemPoolsMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "multitoken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "category",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ethPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "gemsByFactory",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "gemHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "gemPoolFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "multitoken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "gemsByMinter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "gemHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "gemPoolFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "multitoken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "gemsByMultitoken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "gemHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "gemPoolFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "multitoken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "gemsByPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "gemHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "gemPoolFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "multitoken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "gemPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "multitoken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "page",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "name": "getOwnedGems",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "gems",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "gemLen",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "poolAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "category",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ethPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IBitgemIndexer.GemPool[]",
          "name": "gemPools",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "gemHash",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "pool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "gemPoolFactory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            }
          ],
          "internalType": "struct IBitgemIndexer.Gem[]",
          "name": "gems",
          "type": "tuple[]"
        }
      ],
      "name": "indexBulkGems",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "poolAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "category",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ethPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IBitgemIndexer.GemPool",
          "name": "gemPool",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "gemHash",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "pool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "gemPoolFactory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            }
          ],
          "internalType": "struct IBitgemIndexer.Gem",
          "name": "gem",
          "type": "tuple"
        }
      ],
      "name": "indexGem",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "gemPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "multitoken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "page",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "name": "indexGemPool",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "gemHash",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "pool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "gemPoolFactory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            }
          ],
          "internalType": "struct IBitgemIndexer.Gem[]",
          "name": "gems",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "poolAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "category",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ethPrice",
              "type": "uint256"
            }
          ],
          "internalType": "struct IBitgemIndexer.GemPool[]",
          "name": "gemPools",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "gemHash",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "pool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "gemPoolFactory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "multitoken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quantity",
              "type": "uint256"
            }
          ],
          "internalType": "struct IBitgemIndexer.Gem[]",
          "name": "gems",
          "type": "tuple[]"
        }
      ],
      "name": "indexGems",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isController",
      "outputs": [
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "relinquishControl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xdf1f6acd4c9b12a1cd0b71f1aa6cdc43723bb426fa38b1500e2ac0b4b929aee0",
  "receipt": {
    "to": null,
    "from": "0xE5E82ae456c04Ad0879785B4f678A4Fcace12AAf",
    "contractAddress": "0x2b3Aa37a746cAD222Be5fa70b1104df43ffFa5cd",
    "transactionIndex": 4,
    "gasUsed": "2370246",
    "logsBloom": "0x
    "blockHash": "0x000079760000091c5277ab5af337251cadbac6a64e49f738ad2ee1a1b435d011",
    "transactionHash": "0xdf1f6acd4c9b12a1cd0b71f1aa6cdc43723bb426fa38b1500e2ac0b4b929aee0",
    "logs": [],
    "blockNumber": 16223847,
    "cumulativeGasUsed": "2806471",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "3036cd0b158d7d5212d0875e1cef91e0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethPrice\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IBitgemIndexer.GemPool[]\",\"name\":\"gemPools\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"gemHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gemPoolFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IBitgemIndexer.Gem[]\",\"name\":\"gems\",\"type\":\"tuple[]\"}],\"name\":\"BulkGemCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controllerAddress\",\"type\":\"address\"}],\"name\":\"ControllerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controllerAddress\",\"type\":\"address\"}],\"name\":\"ControllerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"FactoryCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gemHash\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"gemPoolFactory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"GemCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"opener\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IBitgemIndexer.LootboxFactory\",\"name\":\"factory\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IBitgemIndexer.Lootbox\",\"name\":\"lootbox\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"lootHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lootbox\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"probability\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IBitgemIndexer.Loot[]\",\"name\":\"receivedLoot\",\"type\":\"tuple[]\"}],\"name\":\"LootboxOpened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethPrice\",\"type\":\"uint256\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gemCreateUID\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethPrice\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IBitgemIndexer.GemPool\",\"name\":\"pool\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"gemHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gemPoolFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IBitgemIndexer.Gem\",\"name\":\"gem\",\"type\":\"tuple\"}],\"name\":\"UserCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gemMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"gemHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gemPoolFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"gemPoolFactoriesMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gemPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"gemPoolsMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gemsByFactory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"gemHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gemPoolFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gemsByMinter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"gemHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gemPoolFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gemsByMultitoken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"gemHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gemPoolFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gemsByPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"gemHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gemPoolFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gemPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"page\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"getOwnedGems\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"gems\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"gemLen\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IBitgemIndexer.GemPool[]\",\"name\":\"gemPools\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"gemHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gemPoolFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"internalType\":\"struct IBitgemIndexer.Gem[]\",\"name\":\"gems\",\"type\":\"tuple[]\"}],\"name\":\"indexBulkGems\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IBitgemIndexer.GemPool\",\"name\":\"gemPool\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"gemHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gemPoolFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"internalType\":\"struct IBitgemIndexer.Gem\",\"name\":\"gem\",\"type\":\"tuple\"}],\"name\":\"indexGem\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gemPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"page\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"indexGemPool\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"gemHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gemPoolFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"internalType\":\"struct IBitgemIndexer.Gem[]\",\"name\":\"gems\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethPrice\",\"type\":\"uint256\"}],\"internalType\":\"struct IBitgemIndexer.GemPool[]\",\"name\":\"gemPools\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"gemHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gemPoolFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"internalType\":\"struct IBitgemIndexer.Gem[]\",\"name\":\"gems\",\"type\":\"tuple[]\"}],\"name\":\"indexGems\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isController\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relinquishControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The name of the author\",\"details\":\"Explain to a developer any extra details\",\"kind\":\"dev\",\"methods\":{\"addController(address)\":{\"details\":\"Add an address allowed to control this contract\"},\"isController(address)\":{\"details\":\"Check if this address is a controller\"},\"relinquishControl()\":{\"details\":\"Remove the sender address from the list of controllers\"}},\"title\":\"A title that should describe the contract/interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Explain to an end user what this does\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/indexer/BitgemIndexer.sol\":\"BitgemIndexer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2222},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xfce1eb6398eae0e2b50251140866a70a3106193f101972c878bba1dbf44929ec\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"src/access/Controllable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"../interfaces/IControllable.sol\\\";\\n\\nabstract contract Controllable is IControllable {\\n    mapping(address => bool) internal _controllers;\\n\\n    /**\\n     * @dev Throws if called by any account not in authorized list\\n     */\\n    modifier onlyController() {\\n        require(\\n            _controllers[msg.sender] == true || address(this) == msg.sender,\\n            \\\"Controllable: caller is not a controller\\\"\\n        );\\n        _;\\n    }\\n\\n    /**\\n     * @dev Add an address allowed to control this contract\\n     */\\n    function _addController(address _controller) internal {\\n        _controllers[_controller] = true;\\n    }\\n\\n    /**\\n     * @dev Add an address allowed to control this contract\\n     */\\n    function addController(address _controller)\\n        external\\n        override\\n        onlyController\\n    {\\n        _controllers[_controller] = true;\\n    }\\n\\n    /**\\n     * @dev Check if this address is a controller\\n     */\\n    function isController(address _address)\\n        external\\n        view\\n        override\\n        returns (bool allowed)\\n    {\\n        allowed = _controllers[_address];\\n    }\\n\\n    /**\\n     * @dev Remove the sender address from the list of controllers\\n     */\\n    function relinquishControl() external override onlyController {\\n        delete _controllers[msg.sender];\\n    }\\n}\\n\",\"keccak256\":\"0xa31f752b3b092c788ea06a6dced266db79c4407d69733d78bc15e519f39e1d3f\",\"license\":\"MIT\"},\"src/indexer/BitgemIndexer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\\\";\\n\\nimport \\\"../access/Controllable.sol\\\";\\nimport \\\"../interfaces/ITokenSeller.sol\\\";\\nimport \\\"../interfaces/IBitgemIndexer.sol\\\";\\n\\n/// @dev The gem indexer indexes all historical gems from legacy contracts and\\n/// produces a series of events that get indexed by thegraph indexer. this is\\n/// necessary because the legacy contracts generate events from library code,\\n/// making things not work in thegraph.\\n\\n/// @title A title that should describe the contract/interface\\n/// @author The name of the author\\n/// @notice Explain to an end user what this does\\n/// @dev Explain to a developer any extra details\\ncontract BitgemIndexer is IBitgemIndexer, Controllable {\\n    mapping(uint256 => Gem) public gemMap;\\n    mapping(address => Gem[]) public gemsByMinter;\\n    mapping(address => Gem[]) public gemsByFactory;\\n    mapping(address => Gem[]) public gemsByMultitoken;\\n    mapping(address => Gem[]) public gemsByPool;\\n\\n    GemPool[] public gemPools;\\n    mapping(address => GemPool) public gemPoolsMap;\\n    mapping(address => GemPool) public gemPoolFactoriesMap;\\n\\n    constructor() {\\n        _addController(address(this));\\n    }\\n\\n    function _makeId(Gem memory gem) internal pure returns (uint256) {\\n        return\\n            uint256(\\n                keccak256(\\n                    abi.encodePacked(\\n                        gem.gemHash,\\n                        gem.minter,\\n                        gem.gemPoolFactory,\\n                        gem.multitoken,\\n                        gem.pool,\\n                        gem.quantity\\n                    )\\n                )\\n            );\\n    }\\n\\n    function indexGemPool(\\n        address gemPool,\\n        address multitoken,\\n        uint256 page,\\n        uint256 count\\n    ) external override returns (Gem[] memory gems) {\\n        uint256 allTokenHashesLength = IGemPoolData(gemPool)\\n            .allTokenHashesLength();\\n        require((page * count) + count <= allTokenHashesLength, \\\"OUT_OF_RANGE\\\");\\n\\n        uint256 gemLen = 0;\\n        gems = new Gem[](count);\\n\\n        for (\\n            uint256 i = page * count;\\n            i < ((page * count) + count) && i < allTokenHashesLength;\\n            i++\\n        ) {\\n            uint256 claimHash = 0;\\n            try IGemPoolData(gemPool).allTokenHashes(i) returns (\\n                uint256 _claimHash\\n            ) {\\n                claimHash = _claimHash;\\n            } catch {\\n                continue;\\n            }\\n\\n            INFTGemMultiToken.TokenType tokenType = IGemPoolData(gemPool)\\n                .tokenType(claimHash);\\n\\n            if (tokenType == INFTGemMultiToken.TokenType.GEM) {\\n                uint256 allTokenHoldersLength = INFTGemMultiToken(multitoken)\\n                    .allTokenHoldersLength(claimHash);\\n                if (allTokenHoldersLength != 0) {\\n                    for (uint256 j = 0; j < allTokenHoldersLength; j++) {\\n                        (\\n                            GemPool memory _gemPool,\\n                            Gem memory _gem\\n                        ) = _createGemObjects(\\n                                multitoken,\\n                                gemPool,\\n                                i,\\n                                claimHash\\n                            );\\n                        if (_indexGem(_gemPool, _gem)) {\\n                            gems[gemLen++] = _gem;\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    function _createGemObjects(\\n        address multitoken,\\n        address gemPool,\\n        uint256 i,\\n        uint256 claimHash\\n    ) internal view returns (GemPool memory _gemPool, Gem memory _gem) {\\n        address holder = INFTGemMultiToken(multitoken).allTokenHolders(\\n            i,\\n            claimHash\\n        );\\n        (\\n            string memory settingsSymbol,\\n            string memory settingsName,\\n            string memory settingsDescription,\\n            uint256 settingsCategory,\\n            uint256 settingsEthPrice,\\n            ,\\n            ,\\n            ,\\n            ,\\n            ,\\n\\n        ) = IGemPoolData(gemPool).settings();\\n        _gemPool = GemPool(\\n            uint256(uint160(gemPool)),\\n            address(0),\\n            multitoken,\\n            gemPool,\\n            settingsSymbol,\\n            settingsName,\\n            settingsDescription,\\n            settingsCategory,\\n            settingsEthPrice\\n        );\\n        uint256 balance = IERC1155(multitoken).balanceOf(holder, claimHash);\\n        if (balance != 0) {\\n            _gem = Gem(\\n                0,\\n                settingsSymbol,\\n                settingsName,\\n                claimHash,\\n                holder,\\n                gemPool,\\n                multitoken,\\n                gemPool,\\n                balance\\n            );\\n            _gem.id = _makeId(_gem);\\n        }\\n    }\\n\\n    function getOwnedGems(\\n        address gemPool,\\n        address multitoken,\\n        address account,\\n        uint256 page,\\n        uint256 count\\n    ) external view override returns (uint256[] memory gems, uint256 gemLen) {\\n        gems = new uint256[](count);\\n\\n        for (uint256 i = page * count; i < (page * count) + count; i++) {\\n            uint256 claimHash = 0;\\n            try IGemPoolData(gemPool).allTokenHashes(i) returns (\\n                uint256 _claimHash\\n            ) {\\n                claimHash = _claimHash;\\n            } catch {\\n                continue;\\n            }\\n\\n            INFTGemMultiToken.TokenType tokenType = IGemPoolData(gemPool)\\n                .tokenType(claimHash);\\n\\n            uint256 bal = IERC1155(multitoken).balanceOf(account, claimHash);\\n            if (\\n                tokenType != INFTGemMultiToken.TokenType.GEM ||\\n                bal == 0 ||\\n                claimHash == 0 ||\\n                claimHash == 1\\n            ) continue;\\n\\n            gems[gemLen++] = claimHash;\\n        }\\n    }\\n\\n    function _indexGem(GemPool memory gemPool, Gem memory gem)\\n        internal\\n        returns (bool)\\n    {\\n        uint256 gemId = _makeId(gem);\\n        if (gemMap[gemId].id != 0) {\\n            return false;\\n        }\\n        gem.id = gemId;\\n        gemMap[gemId] = gem;\\n        gemsByMinter[gem.minter].push(gem);\\n        if (gemsByFactory[gem.gemPoolFactory].length == 0) {\\n            FactoryCreated(gem.gemPoolFactory);\\n        }\\n        gemsByFactory[gem.gemPoolFactory].push(gem);\\n        gemsByMultitoken[gem.multitoken].push(gem);\\n        gemsByPool[gem.pool].push(gem);\\n        if (gemPoolsMap[gem.pool].multitoken == address(0)) {\\n            gemPoolsMap[gem.pool] = gemPool;\\n            gemPools.push(gemPool);\\n            emit PoolCreated(\\n                gemPool.factory,\\n                gemPool.multitoken,\\n                gemPool.poolAddress,\\n                gemPool.symbol,\\n                gemPool.name,\\n                gemPool.description,\\n                gemPool.category,\\n                gemPool.ethPrice\\n            );\\n        }\\n        emit GemCreated(\\n            gem.id,\\n            gem.symbol,\\n            gem.name,\\n            gem.gemHash,\\n            gem.pool,\\n            gem.minter,\\n            gem.gemPoolFactory,\\n            gem.multitoken,\\n            gem.quantity\\n        );\\n        return true;\\n    }\\n\\n    function indexGem(GemPool memory gemPool, Gem memory gem)\\n        external\\n        override\\n        returns (bool)\\n    {\\n        return _indexGem(gemPool, gem);\\n    }\\n\\n    function indexGems(GemPool[] memory gemPools, Gem[] memory gems)\\n        external\\n        override\\n    {\\n        for (uint256 i = 0; i < gems.length; i++) {\\n            _indexGem(gemPools[i], gems[i]);\\n        }\\n    }\\n\\n    function indexBulkGems(GemPool[] memory gemPools, Gem[] memory gems)\\n        external\\n        override\\n    {\\n        emit BulkGemCreated(gemPools, gems);\\n    }\\n}\\n\",\"keccak256\":\"0x450d7018a7e0945131fd5787ecbd32f32020e9a2634b122bafa196d830b92402\",\"license\":\"MIT\"},\"src/interfaces/IBitgemIndexer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\nimport \\\"./INFTGemMultiToken.sol\\\";\\n\\n/// @dev The gem indexer indexes all historical gems from legacy contracts and\\n/// produces a series of events that get indexed by thegraph indexer. this is\\n/// necessary because the legacy contracts generate events from library code,\\n/// making things not work in thegraph.\\n\\ninterface IGemPoolData {\\n    function allTokenHashesLength() external view returns (uint256);\\n\\n    function allTokenHashes(uint256 ndx) external view returns (uint256);\\n\\n    function tokenType(uint256 tokenHash)\\n        external\\n        view\\n        returns (INFTGemMultiToken.TokenType);\\n\\n    function settings()\\n        external\\n        view\\n        returns (\\n            string memory settingsSymbol,\\n            string memory settingsName,\\n            string memory settingsDescription,\\n            uint256 settingsCategory,\\n            uint256 settingsEthPrice,\\n            uint256 settingsMinTime,\\n            uint256 settingsMaxTime,\\n            uint256 settingsDiffStep,\\n            uint256 settingsMacClaims,\\n            uint256 settingsMaxQuantityPerClaim,\\n            uint256 settingsMaxClaimsPerAccount\\n        );\\n}\\n\\ninterface IBitgemIndexer {\\n    struct GemPoolFactory {\\n        address factoryAddress;\\n    }\\n    struct GemPool {\\n        uint256 id;\\n        address factory;\\n        address multitoken;\\n        address poolAddress;\\n        string symbol;\\n        string name;\\n        string description;\\n        uint256 category;\\n        uint256 ethPrice;\\n    }\\n    struct Gem {\\n        uint256 id;\\n        string symbol;\\n        string name;\\n        uint256 gemHash;\\n        address pool;\\n        address minter;\\n        address gemPoolFactory;\\n        address multitoken;\\n        uint256 quantity;\\n    }\\n    struct LootboxFactory {\\n        address factoryAddress;\\n    }\\n    struct Lootbox {\\n        address poolAddress;\\n        string symbol;\\n        string name;\\n        string description;\\n        address factory;\\n        address multitoken;\\n        uint256 quantity;\\n    }\\n    struct Loot {\\n        uint256 id;\\n        string symbol;\\n        string name;\\n        string description;\\n        uint256 lootHash;\\n        uint256 lootbox;\\n        address minter;\\n        address factory;\\n        address multitoken;\\n        uint256 probability;\\n        uint256 quantity;\\n    }\\n    struct SwapMeet {\\n        address swapMeetAddress;\\n    }\\n    struct Offer {\\n        uint256 id;\\n        address swapMeet;\\n        address owner;\\n        address pool;\\n        uint256 gem;\\n        uint256 quantity;\\n        address[] pools;\\n        uint256[] gems;\\n        uint256[] quantities;\\n        uint256 listingFee;\\n        uint256 acceptFee;\\n        uint256 references;\\n        bool missingTokenPenalty;\\n    }\\n\\n    event FactoryCreated(address factory);\\n\\n    event PoolCreated(\\n        address factory,\\n        address multitoken,\\n        address poolAddress,\\n        string symbol,\\n        string name,\\n        string description,\\n        uint256 category,\\n        uint256 ethPrice\\n    );\\n\\n    event GemCreated(\\n        uint256 id,\\n        string symbol,\\n        string name,\\n        uint256 gemHash,\\n        address pool,\\n        address minter,\\n        address gemPoolFactory,\\n        address multitoken,\\n        uint256 quantity\\n    );\\n\\n    event BulkGemCreated(GemPool[] gemPools, Gem[] gems);\\n\\n    event UserCreated(uint256 indexed gemCreateUID, GemPool pool, Gem gem);\\n\\n    event LootboxOpened(\\n        address opener,\\n        LootboxFactory factory,\\n        Lootbox lootbox,\\n        Loot[] receivedLoot\\n    );\\n\\n    function indexGem(GemPool memory gemPool, Gem memory gem)\\n        external\\n        returns (bool);\\n\\n    function indexGems(GemPool[] memory gemPools, Gem[] memory gems) external;\\n\\n    function indexBulkGems(GemPool[] memory gemPools, Gem[] memory gems)\\n        external;\\n\\n    function getOwnedGems(\\n        address gemPool,\\n        address multitoken,\\n        address account,\\n        uint256 page,\\n        uint256 count\\n    ) external view returns (uint256[] memory gems, uint256 gemLen);\\n\\n    function indexGemPool(\\n        address gemPool,\\n        address multitoken,\\n        uint256 page,\\n        uint256 count\\n    ) external returns (Gem[] memory gems);\\n}\\n\",\"keccak256\":\"0x6580d86cf30b8bf7ce4f06b0c4d89c87681451d78047f451592e7293087a855c\",\"license\":\"MIT\"},\"src/interfaces/IControllable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\ninterface IControllable {\\n    event ControllerAdded(\\n        address indexed contractAddress,\\n        address indexed controllerAddress\\n    );\\n    event ControllerRemoved(\\n        address indexed contractAddress,\\n        address indexed controllerAddress\\n    );\\n\\n    function addController(address controller) external;\\n\\n    function isController(address controller) external view returns (bool);\\n\\n    function relinquishControl() external;\\n}\\n\",\"keccak256\":\"0x2a44548d9ba1bcd73d5734b2265db6c1556c013ccc61df621a6cbd5cca42cfaf\",\"license\":\"MIT\"},\"src/interfaces/INFTGemMultiToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface INFTGemMultiToken {\\n    enum TokenType {\\n        GOVERNANCE,\\n        CLAIM,\\n        GEM\\n    }\\n\\n    struct Royalty {\\n        address owner;\\n        uint256 royaltyPermillion;\\n    }\\n\\n    // called by controller to mint a claim or a gem\\n    function mint(\\n        address account,\\n        uint256 tokenHash,\\n        uint256 amount\\n    ) external;\\n\\n    // called by controller to mint a claim or a gem\\n    function mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) external;\\n\\n    function burnBatch(\\n        address account,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) external;\\n\\n    // called by controller to burn a claim\\n    function burn(\\n        address account,\\n        uint256 tokenHash,\\n        uint256 amount\\n    ) external;\\n\\n    function heldTokens(address holder)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    function allHeldTokens(address holder, uint256 _idx)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function allHeldTokensLength(address holder)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function tokenHolders(uint256 _token)\\n        external\\n        view\\n        returns (address[] memory);\\n\\n    function allTokenHolders(uint256 _token, uint256 _idx)\\n        external\\n        view\\n        returns (address);\\n\\n    function allTokenHoldersLength(uint256 _token)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function totalBalances(uint256 _id) external view returns (uint256);\\n\\n    function allProxyRegistries(uint256 _idx) external view returns (address);\\n\\n    function allProxyRegistriesLength() external view returns (uint256);\\n\\n    function addProxyRegistry(address registry) external;\\n\\n    function removeProxyRegistryAt(uint256 index) external;\\n\\n    function getRegistryManager() external view returns (address);\\n\\n    function setRegistryManager(address newManager) external;\\n\\n    function setRoyaltyInfo(\\n        uint256 _tokenId,\\n        address _owner,\\n        uint256 feePermil\\n    ) external;\\n\\n    function lock(uint256 token, uint256 timeframe) external;\\n\\n    function unlockTime(address account, uint256 token)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function setTokenData(\\n        uint256 tokenHash,\\n        TokenType tokenType,\\n        address tokenPool\\n    ) external;\\n\\n    function getTokenData(uint256 tokenHash)\\n        external\\n        view\\n        returns (TokenType, address);\\n}\\n\",\"keccak256\":\"0x1d54431d4f990265d8a0c692430e75c5c77870b78f19264069e1cfe86d7464c0\",\"license\":\"MIT\"},\"src/interfaces/ITokenSeller.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\n/// @dev A token seller is a contract that can sell tokens to a token buyer.\\n/// The token buyer can buy tokens from the seller by paying a certain amount\\n/// of base currency to receive a certain amount of erc1155 tokens. the number\\n/// of tokens that can be bought is limited by the seller - the seller can\\n/// specify the maximum number of tokens that can be bought per transaction\\n/// and the maximum number of tokens that can be bought in total for a given\\n/// address. The seller can also specify the price of erc1155 tokens and how\\n/// that price increases per successful transaction. the token seller assumes\\n/// supply of the erc1155 is unlimited and features a request method\\n\\ninterface ITokenSeller {\\n    enum BuyPriceIncreaseRateType {\\n        NONE,\\n        FIXED,\\n        EXPONENTIAL,\\n        INVERSELOG\\n    }\\n\\n    struct TokenSellerInfo {\\n        address multitoken;\\n        address contractAddress;\\n        address owner;\\n        uint256 tokenHash;\\n        uint256 buyPrice;\\n        BuyPriceIncreaseRateType buyPriceIncreaseRateType;\\n        uint256 buyPriceIncreaseRate;\\n        uint256 maxQuantity;\\n        uint256 maxBuyAmount;\\n        uint256 maxTotalBuyAmount;\\n        uint256 saleStartTime;\\n        uint256 saleEndTime;\\n        bool initialized;\\n        bool open;\\n        uint256 totalPurchased;\\n    }\\n\\n    event TokenSellerCreated(address indexed creator, TokenSellerInfo info);\\n\\n    event Sold(\\n        address indexed contractAddress,\\n        address indexed buyer,\\n        uint256 indexed tokenHash,\\n        uint256 price,\\n        uint256 amount\\n    );\\n\\n    event Requested(\\n        address indexed contractAddress,\\n        address indexed seller,\\n        uint256 indexed tokenId,\\n        uint256 amount\\n    );\\n\\n    event Funded(\\n        address indexed contractAddress,\\n        uint256 indexed tokenId,\\n        uint256 amount\\n    );\\n\\n    event FundsCollected(address indexed receiver, uint256 indexed amount);\\n\\n    event TokenSellerMigrated(\\n        address indexed migrator,\\n        address indexed hash,\\n        address indexed oldContractAddress,\\n        address newContractAddress,\\n        TokenSellerInfo data\\n    );\\n\\n    function initialize(address tokenSellerData, TokenSellerInfo memory _info)\\n        external;\\n\\n    function isInitialized() external view returns (bool);\\n\\n    function getInfo() external view returns (TokenSellerInfo memory);\\n\\n    function setInfo(TokenSellerInfo memory _info) external;\\n\\n    /// @dev Buy tokens from the token seller.\\n    /// @param _amount The amount of erc1155 tokens to buy.\\n    /// @return The amount of erc1155 tokens that were bought.\\n    function buy(uint256 _amount) external payable returns (uint256);\\n\\n    /// @dev Request tokens from the token provider.\\n    /// @param _recipient The address of the token receiver.\\n    /// @param _amount The amount of erc1155 tokens to buy.\\n    /// @return The amount of erc1155 tokens that were requested.\\n    function request(address _recipient, uint256 _amount)\\n        external\\n        returns (uint256);\\n\\n    function receivePayout(address payable _recipient) external;\\n}\\n\",\"keccak256\":\"0x8783cfa454e469fc9425161cdc4336a2ea0db1379ad2828de0ab9197c36ea43c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3061001f565b610043565b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b612990806100526000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063a7fc7a0711610097578063d7b20e6b11610066578063d7b20e6b14610239578063e1c28bef14610259578063e4cbbc7b14610261578063ef3c4a051461027457610100565b8063a7fc7a07146101ed578063b1816a9a14610200578063b429afeb14610213578063d02906561461022657610100565b806360daabda116100d357806360daabda14610186578063677808aa146101995780637ce45cba146101ba5780638c54baf0146101da57610100565b80630551f733146101055780630f4c5ccf146101365780634ee3394d146101495780635890b53a1461015e575b600080fd5b61011861011336600461203d565b610287565b60405161012d99989796959493929190612769565b60405180910390f35b61011861014436600461203d565b610415565b61015c610157366004612068565b610431565b005b61017161016c366004611f5f565b6104ad565b60405161012d999897969594939291906126ec565b610171610194366004611f5f565b61069c565b6101ac6101a7366004611f9e565b6106e0565b60405161012d9291906125fc565b6101cd6101c8366004612218565b6109c0565b60405161012d9190612644565b6101186101e836600461203d565b6109d5565b61015c6101fb366004611f5f565b6109f1565b61015c61020e366004612068565b610a5c565b6101cd610221366004611f5f565b610a99565b61011861023436600461226f565b610ab7565b61024c610247366004611ff8565b610ad8565b60405161012d91906125e9565b61015c610eba565b61017161026f36600461226f565b610f11565b61011861028236600461203d565b610f69565b600360205281600052604060002081815481106102a357600080fd5b9060005260206000209060090201600091509150508060000154908060010180546102cd906128c0565b80601f01602080910402602001604051908101604052809291908181526020018280546102f9906128c0565b80156103465780601f1061031b57610100808354040283529160200191610346565b820191906000526020600020905b81548152906001019060200180831161032957829003601f168201915b50505050509080600201805461035b906128c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610387906128c0565b80156103d45780601f106103a9576101008083540402835291602001916103d4565b820191906000526020600020905b8154815290600101906020018083116103b757829003601f168201915b5050505060038301546004840154600585015460068601546007870154600890970154959693956001600160a01b0393841695509183169390831692169089565b600560205281600052604060002081815481106102a357600080fd5b60005b81518110156104a85761049583828151811061046057634e487b7160e01b600052603260045260246000fd5b602002602001015183838151811061048857634e487b7160e01b600052603260045260246000fd5b6020026020010151610f85565b50806104a0816128fb565b915050610434565b505050565b6007602052600090815260409020805460018201546002830154600384015460048501805494956001600160a01b039485169593851694909216926104f1906128c0565b80601f016020809104026020016040519081016040528092919081815260200182805461051d906128c0565b801561056a5780601f1061053f5761010080835404028352916020019161056a565b820191906000526020600020905b81548152906001019060200180831161054d57829003601f168201915b50505050509080600501805461057f906128c0565b80601f01602080910402602001604051908101604052809291908181526020018280546105ab906128c0565b80156105f85780601f106105cd576101008083540402835291602001916105f8565b820191906000526020600020905b8154815290600101906020018083116105db57829003601f168201915b50505050509080600601805461060d906128c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610639906128c0565b80156106865780601f1061065b57610100808354040283529160200191610686565b820191906000526020600020905b81548152906001019060200180831161066957829003601f168201915b5050505050908060070154908060080154905089565b6008602052600090815260409020805460018201546002830154600384015460048501805494956001600160a01b039485169593851694909216926104f1906128c0565b606060008267ffffffffffffffff81111561070b57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610734578160200160208202803683370190505b50915060006107438486612871565b90505b836107518187612871565b61075b9190612859565b8110156109b5576040517fd31674db0000000000000000000000000000000000000000000000000000000081526000906001600160a01b038a169063d31674db906107aa9085906004016126e3565b60206040518083038186803b1580156107c257600080fd5b505afa9250505080156107f2575060408051601f3d908101601f191682019092526107ef91810190612287565b60015b6107fc57506109a3565b90506040517fe6c3b1f60000000000000000000000000000000000000000000000000000000081526000906001600160a01b038b169063e6c3b1f6906108469085906004016126e3565b60206040518083038186803b15801561085e57600080fd5b505afa158015610872573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108969190612118565b90506000896001600160a01b031662fdd58e8a856040518363ffffffff1660e01b81526004016108c79291906124a5565b60206040518083038186803b1580156108df57600080fd5b505afa1580156108f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109179190612287565b9050600282600281111561093b57634e487b7160e01b600052602160045260246000fd5b141580610946575080155b8061094f575082155b8061095a5750826001145b15610967575050506109a3565b828686610973816128fb565b97508151811061099357634e487b7160e01b600052603260045260246000fd5b6020026020010181815250505050505b806109ad816128fb565b915050610746565b509550959350505050565b60006109cc8383610f85565b90505b92915050565b600460205281600052604060002081815481106102a357600080fd5b3360009081526020819052604090205460ff16151560011480610a1357503033145b610a385760405162461bcd60e51b8152600401610a2f90612686565b60405180910390fd5b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b7f5435355d8299da2d10dd9a42f93ffb8551db88801ced9e9479d6b1932478a8928282604051610a8d9291906124be565b60405180910390a15050565b6001600160a01b031660009081526020819052604090205460ff1690565b6001602081905260009182526040909120805491810180546102cd906128c0565b60606000856001600160a01b031663f4fde0d36040518163ffffffff1660e01b815260040160206040518083038186803b158015610b1557600080fd5b505afa158015610b29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4d9190612287565b90508083610b5b8187612871565b610b659190612859565b1115610b835760405162461bcd60e51b8152600401610a2f9061264f565b60008367ffffffffffffffff811115610bac57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610be557816020015b610bd2611b26565b815260200190600190039081610bca5790505b5092506000610bf48587612871565b90505b84610c028188612871565b610c0c9190612859565b81108015610c1957508281105b15610eaf576040517fd31674db0000000000000000000000000000000000000000000000000000000081526000906001600160a01b038a169063d31674db90610c669085906004016126e3565b60206040518083038186803b158015610c7e57600080fd5b505afa925050508015610cae575060408051601f3d908101601f19168201909252610cab91810190612287565b60015b610cb85750610e9d565b90506040517fe6c3b1f60000000000000000000000000000000000000000000000000000000081526000906001600160a01b038b169063e6c3b1f690610d029085906004016126e3565b60206040518083038186803b158015610d1a57600080fd5b505afa158015610d2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d529190612118565b90506002816002811115610d7657634e487b7160e01b600052602160045260246000fd5b1415610e9a576040517ff68ee90e0000000000000000000000000000000000000000000000000000000081526000906001600160a01b038b169063f68ee90e90610dc49086906004016126e3565b60206040518083038186803b158015610ddc57600080fd5b505afa158015610df0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e149190612287565b90508015610e985760005b81811015610e9657600080610e368d8f8989611825565b91509150610e448282610f85565b15610e8157808a89610e55816128fb565b9a5081518110610e7557634e487b7160e01b600052603260045260246000fd5b60200260200101819052505b50508080610e8e906128fb565b915050610e1f565b505b505b50505b80610ea7816128fb565b915050610bf7565b505050949350505050565b3360009081526020819052604090205460ff16151560011480610edc57503033145b610ef85760405162461bcd60e51b8152600401610a2f90612686565b336000908152602081905260409020805460ff19169055565b60068181548110610f2157600080fd5b6000918252602090912060099091020180546001820154600283015460038401546004850180549496506001600160a01b03938416959284169493909116926104f1906128c0565b600260205281600052604060002081815481106102a357600080fd5b600080610f9183611acf565b60008181526001602052604090205490915015610fb25760009150506109cf565b80835260008181526001602081815260409092208551815582860151805187949293610fe393908501920190611b96565b5060408201518051610fff916002840191602090910190611b96565b5060608201516003820155608082015160048201805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b039384161790915560a080850151600585018054841691851691909117905560c0850151600685018054841691851691909117905560e085015160078501805490931690841617909155610100909301516008909201919091559084015116600090815260026020908152604082208054600181810183559184529282902086516009909402019283558186015180518794936110d6938501920190611b96565b50604082015180516110f2916002840191602090910190611b96565b506060820151600382810191909155608083015160048301805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b039384161790915560a0850151600585018054831691841691909117905560c080860151600686018054841691851691909117905560e086015160078601805490931690841617909155610100909401516008909301929092559185015116600090815260209190915260409020546111db577fcd011e85967592f54bff824c845ac9b3e769e0f54ba0d66b4d76ac0f77fa2a008360c001516040516111d2919061241c565b60405180910390a15b60c08301516001600160a01b03166000908152600360209081526040822080546001818101835591845292829020865160099094020192835581860151805187949361122b938501920190611b96565b5060408201518051611247916002840191602090910190611b96565b506060820151600382015560808201516004808301805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b039485161790915560a0850151600585018054831691851691909117905560c0850151600685018054831691851691909117905560e0808601516007860180549093169085161790915561010090940151600890930192909255918501519091166000908152602091825260408120805460018181018355918352918390208651600990930201918255828601518051879461131e938501920190611b96565b506040820151805161133a916002840191602090910190611b96565b506060820151600382015560808083015160048301805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b039384161790915560a08501516005808601805484169285169290921790915560c0860151600686018054841691851691909117905560e08601516007860180549093169084161790915561010090940151600890930192909255850151166000908152602091825260408120805460018181018355918352918390208651600990930201918255828601518051879461140f938501920190611b96565b506040820151805161142b916002840191602090910190611b96565b506060820151600382015560808083015160048301805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b039384161790915560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078086018054909316918416919091179091556101009094015160089093019290925585015181166000908152602092909252604090912060020154166117af576080808401516001600160a01b03908116600090815260076020908152604091829020885181558189015160018201805491861673ffffffffffffffffffffffffffffffffffffffff1992831617905592890151600282018054918616918516919091179055606089015160038201805491909516931692909217909255918601518051879392611575926004850192910190611b96565b5060a08201518051611591916005840191602090910190611b96565b5060c082015180516115ad916006840191602090910190611b96565b5060e082015160078201556101009091015160089091015560068054600181018255600091909152845160099091027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f81019182556020808701517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40830180546001600160a01b0392831673ffffffffffffffffffffffffffffffffffffffff199182161790915560408901517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d418501805491841691831691909117905560608901517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4285018054919093169116179055608087015180518894936116f8937ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d43909101920190611b96565b5060a08201518051611714916005840191602090910190611b96565b5060c08201518051611730916006840191602090910190611b96565b5060e08201518160070155610100820151816008015550507ff0f5a0bccd6b1c9967afccde9ea7b412dc875580be04f4886ae03cad3fc59d1f84602001518560400151866060015187608001518860a001518960c001518a60e001518b61010001516040516117a6989796959493929190612430565b60405180910390a15b7f441a534f2e86d847d37248c2f452c269051739f58a81b2cbec497eca55a9d07c836000015184602001518560400151866060015187608001518860a001518960c001518a60e001518b610100015160405161181399989796959493929190612769565b60405180910390a15060019392505050565b61182d611c1a565b611835611b26565b6040517f740ec99e0000000000000000000000000000000000000000000000000000000081526000906001600160a01b0388169063740ec99e9061187f90889088906004016127d5565b60206040518083038186803b15801561189757600080fd5b505afa1580156118ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118cf9190611f82565b905060008060008060008a6001600160a01b031663e06174e46040518163ffffffff1660e01b815260040160006040518083038186803b15801561191257600080fd5b505afa158015611926573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261194e9190810190612137565b505050505050945094509450945094506040518061012001604052808c6001600160a01b0316815260200160006001600160a01b031681526020018d6001600160a01b031681526020018c6001600160a01b0316815260200186815260200185815260200184815260200183815260200182815250975060008c6001600160a01b031662fdd58e888c6040518363ffffffff1660e01b81526004016119f49291906124a5565b60206040518083038186803b158015611a0c57600080fd5b505afa158015611a20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a449190612287565b90508015611abf57604051806101200160405280600081526020018781526020018681526020018b8152602001886001600160a01b031681526020018d6001600160a01b031681526020018e6001600160a01b031681526020018d6001600160a01b03168152602001828152509750611abc88611acf565b88525b5050505050505094509492505050565b600081606001518260a001518360c001518460e001518560800151866101000151604051602001611b05969594939291906123c4565b6040516020818303038152906040528051906020012060001c90505b919050565b6040518061012001604052806000815260200160608152602001606081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081525090565b828054611ba2906128c0565b90600052602060002090601f016020900481019282611bc45760008555611c0a565b82601f10611bdd57805160ff1916838001178555611c0a565b82800160010185558215611c0a579182015b82811115611c0a578251825591602001919060010190611bef565b50611c16929150611c81565b5090565b6040518061012001604052806000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001606081526020016060815260200160008152602001600081525090565b5b80821115611c165760008155600101611c82565b8035611b2181612942565b600082601f830112611cb1578081fd5b81356020611cc6611cc18361280d565b6127e3565b82815281810190858301855b85811015611cfb57611ce9898684358b0101611e89565b84529284019290840190600101611cd2565b5090979650505050505050565b600082601f830112611d18578081fd5b8135611d26611cc182612831565b818152846020838601011115611d3a578283fd5b816020850160208301379081016020019190915292915050565b600082601f830112611d64578081fd5b8151611d72611cc182612831565b818152846020838601011115611d86578283fd5b611d97826020830160208701612890565b949350505050565b6000610120808385031215611db2578182fd5b611dbb816127e3565b91505081358152611dce60208301611c96565b6020820152611ddf60408301611c96565b6040820152611df060608301611c96565b6060820152608082013567ffffffffffffffff80821115611e1057600080fd5b611e1c85838601611d08565b608084015260a0840135915080821115611e3557600080fd5b611e4185838601611d08565b60a084015260c0840135915080821115611e5a57600080fd5b50611e6784828501611d08565b60c08301525060e082013560e082015261010080830135818301525092915050565b6000610120808385031215611e9c578182fd5b611ea5816127e3565b91505081358152602082013567ffffffffffffffff80821115611ec757600080fd5b611ed385838601611d08565b60208401526040840135915080821115611eec57600080fd5b50611ef984828501611d08565b60408301525060608201356060820152611f1560808301611c96565b6080820152611f2660a08301611c96565b60a0820152611f3760c08301611c96565b60c0820152611f4860e08301611c96565b60e082015261010080830135818301525092915050565b600060208284031215611f70578081fd5b8135611f7b81612942565b9392505050565b600060208284031215611f93578081fd5b8151611f7b81612942565b600080600080600060a08688031215611fb5578081fd5b8535611fc081612942565b94506020860135611fd081612942565b93506040860135611fe081612942565b94979396509394606081013594506080013592915050565b6000806000806080858703121561200d578384fd5b843561201881612942565b9350602085013561202881612942565b93969395505050506040820135916060013590565b6000806040838503121561204f578182fd5b823561205a81612942565b946020939093013593505050565b6000806040838503121561207a578182fd5b823567ffffffffffffffff80821115612091578384fd5b818501915085601f8301126120a4578384fd5b813560206120b4611cc18361280d565b82815281810190858301885b858110156120e9576120d78c8684358b0101611d9f565b845292840192908401906001016120c0565b50909750505086013592505080821115612101578283fd5b5061210e85828601611ca1565b9150509250929050565b600060208284031215612129578081fd5b815160038110611f7b578182fd5b60008060008060008060008060008060006101608c8e031215612158578889fd5b8b5167ffffffffffffffff81111561216e57898afd5b61217a8e828f01611d54565b9b505060208c015167ffffffffffffffff81111561219657898afd5b6121a28e828f01611d54565b9a505060408c015167ffffffffffffffff8111156121be57898afd5b6121ca8e828f01611d54565b99505060608c0151975060808c0151965060a08c0151955060c08c0151945060e08c015193506101008c015192506101208c015191506101408c015190509295989b509295989b9093969950565b6000806040838503121561222a578182fd5b823567ffffffffffffffff80821115612241578384fd5b61224d86838701611d9f565b93506020850135915080821115612262578283fd5b5061210e85828601611e89565b600060208284031215612280578081fd5b5035919050565b600060208284031215612298578081fd5b5051919050565b6001600160a01b03169052565b6000815180845260208085018081965082840281019150828601855b8581101561238b5782840389528151610120815186528682015181888801526122f382880182612398565b9150506040808301518783038289015261230d8382612398565b92505050606080830151818801525060808083015161232e8289018261229f565b505060a0808301516123428289018261229f565b505060c0808301516123568289018261229f565b505060e08083015161236a8289018261229f565b505061010091820151959091019490945297840197908401906001016122c8565b5091979650505050505050565b600081518084526123b0816020860160208601612890565b601f01601f19169290920160200192915050565b9586527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606095861b8116602088015293851b8416603487015291841b8316604886015290921b16605c830152607082015260900190565b6001600160a01b0391909116815260200190565b60006101006001600160a01b03808c168452808b166020850152808a1660408501525080606084015261246581840189612398565b905082810360808401526124798188612398565b905082810360a084015261248d8187612398565b60c0840195909552505060e001529695505050505050565b6001600160a01b03929092168252602082015260400190565b604080825283518282018190526000919060609081850190602080820287018401818a01875b848110156125c8577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08a84030186528151610120815185528582015161252c8787018261229f565b508982015161253d8b87018261229f565b508882015161254e8a87018261229f565b50608080830151828288015261256683880182612398565b9250505060a080830151868303828801526125818382612398565b9250505060c0808301518683038288015261259c8382612398565b60e0858101519089015261010094850151949097019390935250505094830194908301906001016124e4565b5050878103828901526125db818a6122ac565b9a9950505050505050505050565b6000602082526109cc60208301846122ac565b604080825283519082018190526000906020906060840190828701845b8281101561263557815184529284019290840190600101612619565b50505092019290925292915050565b901515815260200190565b6020808252600c908201527f4f55545f4f465f52414e47450000000000000000000000000000000000000000604082015260600190565b60208082526028908201527f436f6e74726f6c6c61626c653a2063616c6c6572206973206e6f74206120636f60408201527f6e74726f6c6c6572000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b60006101208b83526001600160a01b03808c166020850152808b166040850152808a1660608501525080608084015261272781840189612398565b905082810360a084015261273b8188612398565b905082810360c084015261274f8187612398565b60e084019590955250506101000152979650505050505050565b60006101208b83528060208401526127838184018c612398565b90508281036040840152612797818b612398565b606084019990995250506001600160a01b03958616608082015293851660a085015291841660c084015290921660e082015261010001529392505050565b918252602082015260400190565b60405181810167ffffffffffffffff811182821017156128055761280561292c565b604052919050565b600067ffffffffffffffff8211156128275761282761292c565b5060209081020190565b600067ffffffffffffffff82111561284b5761284b61292c565b50601f01601f191660200190565b6000821982111561286c5761286c612916565b500190565b600081600019048311821515161561288b5761288b612916565b500290565b60005b838110156128ab578181015183820152602001612893565b838111156128ba576000848401525b50505050565b6002810460018216806128d457607f821691505b602082108114156128f557634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561290f5761290f612916565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461295757600080fd5b5056fea2646970667358221220e5b73c2eaccec7fac49b2242b6fab3c463fca6fb8d4dfbc63ed9547fab09f21764736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c8063a7fc7a0711610097578063d7b20e6b11610066578063d7b20e6b14610239578063e1c28bef14610259578063e4cbbc7b14610261578063ef3c4a051461027457610100565b8063a7fc7a07146101ed578063b1816a9a14610200578063b429afeb14610213578063d02906561461022657610100565b806360daabda116100d357806360daabda14610186578063677808aa146101995780637ce45cba146101ba5780638c54baf0146101da57610100565b80630551f733146101055780630f4c5ccf146101365780634ee3394d146101495780635890b53a1461015e575b600080fd5b61011861011336600461203d565b610287565b60405161012d99989796959493929190612769565b60405180910390f35b61011861014436600461203d565b610415565b61015c610157366004612068565b610431565b005b61017161016c366004611f5f565b6104ad565b60405161012d999897969594939291906126ec565b610171610194366004611f5f565b61069c565b6101ac6101a7366004611f9e565b6106e0565b60405161012d9291906125fc565b6101cd6101c8366004612218565b6109c0565b60405161012d9190612644565b6101186101e836600461203d565b6109d5565b61015c6101fb366004611f5f565b6109f1565b61015c61020e366004612068565b610a5c565b6101cd610221366004611f5f565b610a99565b61011861023436600461226f565b610ab7565b61024c610247366004611ff8565b610ad8565b60405161012d91906125e9565b61015c610eba565b61017161026f36600461226f565b610f11565b61011861028236600461203d565b610f69565b600360205281600052604060002081815481106102a357600080fd5b9060005260206000209060090201600091509150508060000154908060010180546102cd906128c0565b80601f01602080910402602001604051908101604052809291908181526020018280546102f9906128c0565b80156103465780601f1061031b57610100808354040283529160200191610346565b820191906000526020600020905b81548152906001019060200180831161032957829003601f168201915b50505050509080600201805461035b906128c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610387906128c0565b80156103d45780601f106103a9576101008083540402835291602001916103d4565b820191906000526020600020905b8154815290600101906020018083116103b757829003601f168201915b5050505060038301546004840154600585015460068601546007870154600890970154959693956001600160a01b0393841695509183169390831692169089565b600560205281600052604060002081815481106102a357600080fd5b60005b81518110156104a85761049583828151811061046057634e487b7160e01b600052603260045260246000fd5b602002602001015183838151811061048857634e487b7160e01b600052603260045260246000fd5b6020026020010151610f85565b50806104a0816128fb565b915050610434565b505050565b6007602052600090815260409020805460018201546002830154600384015460048501805494956001600160a01b039485169593851694909216926104f1906128c0565b80601f016020809104026020016040519081016040528092919081815260200182805461051d906128c0565b801561056a5780601f1061053f5761010080835404028352916020019161056a565b820191906000526020600020905b81548152906001019060200180831161054d57829003601f168201915b50505050509080600501805461057f906128c0565b80601f01602080910402602001604051908101604052809291908181526020018280546105ab906128c0565b80156105f85780601f106105cd576101008083540402835291602001916105f8565b820191906000526020600020905b8154815290600101906020018083116105db57829003601f168201915b50505050509080600601805461060d906128c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610639906128c0565b80156106865780601f1061065b57610100808354040283529160200191610686565b820191906000526020600020905b81548152906001019060200180831161066957829003601f168201915b5050505050908060070154908060080154905089565b6008602052600090815260409020805460018201546002830154600384015460048501805494956001600160a01b039485169593851694909216926104f1906128c0565b606060008267ffffffffffffffff81111561070b57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610734578160200160208202803683370190505b50915060006107438486612871565b90505b836107518187612871565b61075b9190612859565b8110156109b5576040517fd31674db0000000000000000000000000000000000000000000000000000000081526000906001600160a01b038a169063d31674db906107aa9085906004016126e3565b60206040518083038186803b1580156107c257600080fd5b505afa9250505080156107f2575060408051601f3d908101601f191682019092526107ef91810190612287565b60015b6107fc57506109a3565b90506040517fe6c3b1f60000000000000000000000000000000000000000000000000000000081526000906001600160a01b038b169063e6c3b1f6906108469085906004016126e3565b60206040518083038186803b15801561085e57600080fd5b505afa158015610872573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108969190612118565b90506000896001600160a01b031662fdd58e8a856040518363ffffffff1660e01b81526004016108c79291906124a5565b60206040518083038186803b1580156108df57600080fd5b505afa1580156108f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109179190612287565b9050600282600281111561093b57634e487b7160e01b600052602160045260246000fd5b141580610946575080155b8061094f575082155b8061095a5750826001145b15610967575050506109a3565b828686610973816128fb565b97508151811061099357634e487b7160e01b600052603260045260246000fd5b6020026020010181815250505050505b806109ad816128fb565b915050610746565b509550959350505050565b60006109cc8383610f85565b90505b92915050565b600460205281600052604060002081815481106102a357600080fd5b3360009081526020819052604090205460ff16151560011480610a1357503033145b610a385760405162461bcd60e51b8152600401610a2f90612686565b60405180910390fd5b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b7f5435355d8299da2d10dd9a42f93ffb8551db88801ced9e9479d6b1932478a8928282604051610a8d9291906124be565b60405180910390a15050565b6001600160a01b031660009081526020819052604090205460ff1690565b6001602081905260009182526040909120805491810180546102cd906128c0565b60606000856001600160a01b031663f4fde0d36040518163ffffffff1660e01b815260040160206040518083038186803b158015610b1557600080fd5b505afa158015610b29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4d9190612287565b90508083610b5b8187612871565b610b659190612859565b1115610b835760405162461bcd60e51b8152600401610a2f9061264f565b60008367ffffffffffffffff811115610bac57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610be557816020015b610bd2611b26565b815260200190600190039081610bca5790505b5092506000610bf48587612871565b90505b84610c028188612871565b610c0c9190612859565b81108015610c1957508281105b15610eaf576040517fd31674db0000000000000000000000000000000000000000000000000000000081526000906001600160a01b038a169063d31674db90610c669085906004016126e3565b60206040518083038186803b158015610c7e57600080fd5b505afa925050508015610cae575060408051601f3d908101601f19168201909252610cab91810190612287565b60015b610cb85750610e9d565b90506040517fe6c3b1f60000000000000000000000000000000000000000000000000000000081526000906001600160a01b038b169063e6c3b1f690610d029085906004016126e3565b60206040518083038186803b158015610d1a57600080fd5b505afa158015610d2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d529190612118565b90506002816002811115610d7657634e487b7160e01b600052602160045260246000fd5b1415610e9a576040517ff68ee90e0000000000000000000000000000000000000000000000000000000081526000906001600160a01b038b169063f68ee90e90610dc49086906004016126e3565b60206040518083038186803b158015610ddc57600080fd5b505afa158015610df0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e149190612287565b90508015610e985760005b81811015610e9657600080610e368d8f8989611825565b91509150610e448282610f85565b15610e8157808a89610e55816128fb565b9a5081518110610e7557634e487b7160e01b600052603260045260246000fd5b60200260200101819052505b50508080610e8e906128fb565b915050610e1f565b505b505b50505b80610ea7816128fb565b915050610bf7565b505050949350505050565b3360009081526020819052604090205460ff16151560011480610edc57503033145b610ef85760405162461bcd60e51b8152600401610a2f90612686565b336000908152602081905260409020805460ff19169055565b60068181548110610f2157600080fd5b6000918252602090912060099091020180546001820154600283015460038401546004850180549496506001600160a01b03938416959284169493909116926104f1906128c0565b600260205281600052604060002081815481106102a357600080fd5b600080610f9183611acf565b60008181526001602052604090205490915015610fb25760009150506109cf565b80835260008181526001602081815260409092208551815582860151805187949293610fe393908501920190611b96565b5060408201518051610fff916002840191602090910190611b96565b5060608201516003820155608082015160048201805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b039384161790915560a080850151600585018054841691851691909117905560c0850151600685018054841691851691909117905560e085015160078501805490931690841617909155610100909301516008909201919091559084015116600090815260026020908152604082208054600181810183559184529282902086516009909402019283558186015180518794936110d6938501920190611b96565b50604082015180516110f2916002840191602090910190611b96565b506060820151600382810191909155608083015160048301805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b039384161790915560a0850151600585018054831691841691909117905560c080860151600686018054841691851691909117905560e086015160078601805490931690841617909155610100909401516008909301929092559185015116600090815260209190915260409020546111db577fcd011e85967592f54bff824c845ac9b3e769e0f54ba0d66b4d76ac0f77fa2a008360c001516040516111d2919061241c565b60405180910390a15b60c08301516001600160a01b03166000908152600360209081526040822080546001818101835591845292829020865160099094020192835581860151805187949361122b938501920190611b96565b5060408201518051611247916002840191602090910190611b96565b506060820151600382015560808201516004808301805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b039485161790915560a0850151600585018054831691851691909117905560c0850151600685018054831691851691909117905560e0808601516007860180549093169085161790915561010090940151600890930192909255918501519091166000908152602091825260408120805460018181018355918352918390208651600990930201918255828601518051879461131e938501920190611b96565b506040820151805161133a916002840191602090910190611b96565b506060820151600382015560808083015160048301805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b039384161790915560a08501516005808601805484169285169290921790915560c0860151600686018054841691851691909117905560e08601516007860180549093169084161790915561010090940151600890930192909255850151166000908152602091825260408120805460018181018355918352918390208651600990930201918255828601518051879461140f938501920190611b96565b506040820151805161142b916002840191602090910190611b96565b506060820151600382015560808083015160048301805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b039384161790915560a0850151600585018054831691841691909117905560c0850151600685018054831691841691909117905560e085015160078086018054909316918416919091179091556101009094015160089093019290925585015181166000908152602092909252604090912060020154166117af576080808401516001600160a01b03908116600090815260076020908152604091829020885181558189015160018201805491861673ffffffffffffffffffffffffffffffffffffffff1992831617905592890151600282018054918616918516919091179055606089015160038201805491909516931692909217909255918601518051879392611575926004850192910190611b96565b5060a08201518051611591916005840191602090910190611b96565b5060c082015180516115ad916006840191602090910190611b96565b5060e082015160078201556101009091015160089091015560068054600181018255600091909152845160099091027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f81019182556020808701517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40830180546001600160a01b0392831673ffffffffffffffffffffffffffffffffffffffff199182161790915560408901517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d418501805491841691831691909117905560608901517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4285018054919093169116179055608087015180518894936116f8937ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d43909101920190611b96565b5060a08201518051611714916005840191602090910190611b96565b5060c08201518051611730916006840191602090910190611b96565b5060e08201518160070155610100820151816008015550507ff0f5a0bccd6b1c9967afccde9ea7b412dc875580be04f4886ae03cad3fc59d1f84602001518560400151866060015187608001518860a001518960c001518a60e001518b61010001516040516117a6989796959493929190612430565b60405180910390a15b7f441a534f2e86d847d37248c2f452c269051739f58a81b2cbec497eca55a9d07c836000015184602001518560400151866060015187608001518860a001518960c001518a60e001518b610100015160405161181399989796959493929190612769565b60405180910390a15060019392505050565b61182d611c1a565b611835611b26565b6040517f740ec99e0000000000000000000000000000000000000000000000000000000081526000906001600160a01b0388169063740ec99e9061187f90889088906004016127d5565b60206040518083038186803b15801561189757600080fd5b505afa1580156118ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118cf9190611f82565b905060008060008060008a6001600160a01b031663e06174e46040518163ffffffff1660e01b815260040160006040518083038186803b15801561191257600080fd5b505afa158015611926573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261194e9190810190612137565b505050505050945094509450945094506040518061012001604052808c6001600160a01b0316815260200160006001600160a01b031681526020018d6001600160a01b031681526020018c6001600160a01b0316815260200186815260200185815260200184815260200183815260200182815250975060008c6001600160a01b031662fdd58e888c6040518363ffffffff1660e01b81526004016119f49291906124a5565b60206040518083038186803b158015611a0c57600080fd5b505afa158015611a20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a449190612287565b90508015611abf57604051806101200160405280600081526020018781526020018681526020018b8152602001886001600160a01b031681526020018d6001600160a01b031681526020018e6001600160a01b031681526020018d6001600160a01b03168152602001828152509750611abc88611acf565b88525b5050505050505094509492505050565b600081606001518260a001518360c001518460e001518560800151866101000151604051602001611b05969594939291906123c4565b6040516020818303038152906040528051906020012060001c90505b919050565b6040518061012001604052806000815260200160608152602001606081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081525090565b828054611ba2906128c0565b90600052602060002090601f016020900481019282611bc45760008555611c0a565b82601f10611bdd57805160ff1916838001178555611c0a565b82800160010185558215611c0a579182015b82811115611c0a578251825591602001919060010190611bef565b50611c16929150611c81565b5090565b6040518061012001604052806000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001606081526020016060815260200160008152602001600081525090565b5b80821115611c165760008155600101611c82565b8035611b2181612942565b600082601f830112611cb1578081fd5b81356020611cc6611cc18361280d565b6127e3565b82815281810190858301855b85811015611cfb57611ce9898684358b0101611e89565b84529284019290840190600101611cd2565b5090979650505050505050565b600082601f830112611d18578081fd5b8135611d26611cc182612831565b818152846020838601011115611d3a578283fd5b816020850160208301379081016020019190915292915050565b600082601f830112611d64578081fd5b8151611d72611cc182612831565b818152846020838601011115611d86578283fd5b611d97826020830160208701612890565b949350505050565b6000610120808385031215611db2578182fd5b611dbb816127e3565b91505081358152611dce60208301611c96565b6020820152611ddf60408301611c96565b6040820152611df060608301611c96565b6060820152608082013567ffffffffffffffff80821115611e1057600080fd5b611e1c85838601611d08565b608084015260a0840135915080821115611e3557600080fd5b611e4185838601611d08565b60a084015260c0840135915080821115611e5a57600080fd5b50611e6784828501611d08565b60c08301525060e082013560e082015261010080830135818301525092915050565b6000610120808385031215611e9c578182fd5b611ea5816127e3565b91505081358152602082013567ffffffffffffffff80821115611ec757600080fd5b611ed385838601611d08565b60208401526040840135915080821115611eec57600080fd5b50611ef984828501611d08565b60408301525060608201356060820152611f1560808301611c96565b6080820152611f2660a08301611c96565b60a0820152611f3760c08301611c96565b60c0820152611f4860e08301611c96565b60e082015261010080830135818301525092915050565b600060208284031215611f70578081fd5b8135611f7b81612942565b9392505050565b600060208284031215611f93578081fd5b8151611f7b81612942565b600080600080600060a08688031215611fb5578081fd5b8535611fc081612942565b94506020860135611fd081612942565b93506040860135611fe081612942565b94979396509394606081013594506080013592915050565b6000806000806080858703121561200d578384fd5b843561201881612942565b9350602085013561202881612942565b93969395505050506040820135916060013590565b6000806040838503121561204f578182fd5b823561205a81612942565b946020939093013593505050565b6000806040838503121561207a578182fd5b823567ffffffffffffffff80821115612091578384fd5b818501915085601f8301126120a4578384fd5b813560206120b4611cc18361280d565b82815281810190858301885b858110156120e9576120d78c8684358b0101611d9f565b845292840192908401906001016120c0565b50909750505086013592505080821115612101578283fd5b5061210e85828601611ca1565b9150509250929050565b600060208284031215612129578081fd5b815160038110611f7b578182fd5b60008060008060008060008060008060006101608c8e031215612158578889fd5b8b5167ffffffffffffffff81111561216e57898afd5b61217a8e828f01611d54565b9b505060208c015167ffffffffffffffff81111561219657898afd5b6121a28e828f01611d54565b9a505060408c015167ffffffffffffffff8111156121be57898afd5b6121ca8e828f01611d54565b99505060608c0151975060808c0151965060a08c0151955060c08c0151945060e08c015193506101008c015192506101208c015191506101408c015190509295989b509295989b9093969950565b6000806040838503121561222a578182fd5b823567ffffffffffffffff80821115612241578384fd5b61224d86838701611d9f565b93506020850135915080821115612262578283fd5b5061210e85828601611e89565b600060208284031215612280578081fd5b5035919050565b600060208284031215612298578081fd5b5051919050565b6001600160a01b03169052565b6000815180845260208085018081965082840281019150828601855b8581101561238b5782840389528151610120815186528682015181888801526122f382880182612398565b9150506040808301518783038289015261230d8382612398565b92505050606080830151818801525060808083015161232e8289018261229f565b505060a0808301516123428289018261229f565b505060c0808301516123568289018261229f565b505060e08083015161236a8289018261229f565b505061010091820151959091019490945297840197908401906001016122c8565b5091979650505050505050565b600081518084526123b0816020860160208601612890565b601f01601f19169290920160200192915050565b9586527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606095861b8116602088015293851b8416603487015291841b8316604886015290921b16605c830152607082015260900190565b6001600160a01b0391909116815260200190565b60006101006001600160a01b03808c168452808b166020850152808a1660408501525080606084015261246581840189612398565b905082810360808401526124798188612398565b905082810360a084015261248d8187612398565b60c0840195909552505060e001529695505050505050565b6001600160a01b03929092168252602082015260400190565b604080825283518282018190526000919060609081850190602080820287018401818a01875b848110156125c8577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08a84030186528151610120815185528582015161252c8787018261229f565b508982015161253d8b87018261229f565b508882015161254e8a87018261229f565b50608080830151828288015261256683880182612398565b9250505060a080830151868303828801526125818382612398565b9250505060c0808301518683038288015261259c8382612398565b60e0858101519089015261010094850151949097019390935250505094830194908301906001016124e4565b5050878103828901526125db818a6122ac565b9a9950505050505050505050565b6000602082526109cc60208301846122ac565b604080825283519082018190526000906020906060840190828701845b8281101561263557815184529284019290840190600101612619565b50505092019290925292915050565b901515815260200190565b6020808252600c908201527f4f55545f4f465f52414e47450000000000000000000000000000000000000000604082015260600190565b60208082526028908201527f436f6e74726f6c6c61626c653a2063616c6c6572206973206e6f74206120636f60408201527f6e74726f6c6c6572000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b60006101208b83526001600160a01b03808c166020850152808b166040850152808a1660608501525080608084015261272781840189612398565b905082810360a084015261273b8188612398565b905082810360c084015261274f8187612398565b60e084019590955250506101000152979650505050505050565b60006101208b83528060208401526127838184018c612398565b90508281036040840152612797818b612398565b606084019990995250506001600160a01b03958616608082015293851660a085015291841660c084015290921660e082015261010001529392505050565b918252602082015260400190565b60405181810167ffffffffffffffff811182821017156128055761280561292c565b604052919050565b600067ffffffffffffffff8211156128275761282761292c565b5060209081020190565b600067ffffffffffffffff82111561284b5761284b61292c565b50601f01601f191660200190565b6000821982111561286c5761286c612916565b500190565b600081600019048311821515161561288b5761288b612916565b500290565b60005b838110156128ab578181015183820152602001612893565b838111156128ba576000848401525b50505050565b6002810460018216806128d457607f821691505b602082108114156128f557634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561290f5761290f612916565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461295757600080fd5b5056fea2646970667358221220e5b73c2eaccec7fac49b2242b6fab3c463fca6fb8d4dfbc63ed9547fab09f21764736f6c63430008000033",
  "libraries": {
    "Strings": "0xeB3E79099663eC952e02E608E00d463F36b4Fb75",
    "AddressSet": "0x8974D57fCfF9C10E9d41709da86d006604D8c75d",
    "UInt256Set": "0x8B6893DB13b55d4952a51d5188215e2a470515a9",
    "Create2": "0xBa85d3e8E0F9e48F5c21649d33f6d0f9Af12E3f5",
    "WrappedTokenLib": "0xA6E25B1B9f4E9DB9E9397853B26436Dcb0563565",
    "ComplexPoolLib": "0x6B761F9d8d3E921fA50cB08b244D82D9D153D1e4",
    "LootboxLib": "0x211f558db66012ac014d5b252823Fc862588EA7F"
  },
  "devdoc": {
    "author": "The name of the author",
    "details": "Explain to a developer any extra details",
    "kind": "dev",
    "methods": {
      "addController(address)": {
        "details": "Add an address allowed to control this contract"
      },
      "isController(address)": {
        "details": "Check if this address is a controller"
      },
      "relinquishControl()": {
        "details": "Remove the sender address from the list of controllers"
      }
    },
    "title": "A title that should describe the contract/interface",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Explain to an end user what this does",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12920,
        "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
        "label": "_controllers",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 16340,
        "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
        "label": "gemMap",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Gem)17125_storage)"
      },
      {
        "astId": 16346,
        "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
        "label": "gemsByMinter",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_struct(Gem)17125_storage)dyn_storage)"
      },
      {
        "astId": 16352,
        "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
        "label": "gemsByFactory",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_array(t_struct(Gem)17125_storage)dyn_storage)"
      },
      {
        "astId": 16358,
        "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
        "label": "gemsByMultitoken",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_array(t_struct(Gem)17125_storage)dyn_storage)"
      },
      {
        "astId": 16364,
        "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
        "label": "gemsByPool",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_array(t_struct(Gem)17125_storage)dyn_storage)"
      },
      {
        "astId": 16368,
        "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
        "label": "gemPools",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_struct(GemPool)17106_storage)dyn_storage"
      },
      {
        "astId": 16373,
        "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
        "label": "gemPoolsMap",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_struct(GemPool)17106_storage)"
      },
      {
        "astId": 16378,
        "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
        "label": "gemPoolFactoriesMap",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(GemPool)17106_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Gem)17125_storage)dyn_storage": {
        "base": "t_struct(Gem)17125_storage",
        "encoding": "dynamic_array",
        "label": "struct IBitgemIndexer.Gem[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(GemPool)17106_storage)dyn_storage": {
        "base": "t_struct(GemPool)17106_storage",
        "encoding": "dynamic_array",
        "label": "struct IBitgemIndexer.GemPool[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_struct(Gem)17125_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IBitgemIndexer.Gem[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Gem)17125_storage)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(GemPool)17106_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IBitgemIndexer.GemPool)",
        "numberOfBytes": "32",
        "value": "t_struct(GemPool)17106_storage"
      },
      "t_mapping(t_uint256,t_struct(Gem)17125_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct IBitgemIndexer.Gem)",
        "numberOfBytes": "32",
        "value": "t_struct(Gem)17125_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Gem)17125_storage": {
        "encoding": "inplace",
        "label": "struct IBitgemIndexer.Gem",
        "members": [
          {
            "astId": 17108,
            "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 17110,
            "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
            "label": "symbol",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 17112,
            "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 17114,
            "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
            "label": "gemHash",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 17116,
            "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
            "label": "pool",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 17118,
            "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
            "label": "minter",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 17120,
            "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
            "label": "gemPoolFactory",
            "offset": 0,
            "slot": "6",
            "type": "t_address"
          },
          {
            "astId": 17122,
            "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
            "label": "multitoken",
            "offset": 0,
            "slot": "7",
            "type": "t_address"
          },
          {
            "astId": 17124,
            "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
            "label": "quantity",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(GemPool)17106_storage": {
        "encoding": "inplace",
        "label": "struct IBitgemIndexer.GemPool",
        "members": [
          {
            "astId": 17089,
            "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 17091,
            "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
            "label": "factory",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 17093,
            "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
            "label": "multitoken",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 17095,
            "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
            "label": "poolAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 17097,
            "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
            "label": "symbol",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 17099,
            "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
            "label": "name",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 17101,
            "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
            "label": "description",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          },
          {
            "astId": 17103,
            "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
            "label": "category",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 17105,
            "contract": "src/indexer/BitgemIndexer.sol:BitgemIndexer",
            "label": "ethPrice",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
{
  "address": "0x6274E3854def0bac87cb96702C1C212D1b0E8fE2",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "aggregate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "returnData",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getBlockHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "blockHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentBlockCoinbase",
      "outputs": [
        {
          "internalType": "address",
          "name": "coinbase",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentBlockDifficulty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "difficulty",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentBlockGasLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "gaslimit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentBlockTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getEthBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastBlockHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "blockHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd57810427a47ae7ae158331277e5c1f4c0f487e766864b90ddd9acd1e489f411",
  "receipt": {
    "to": null,
    "from": "0xE5E82ae456c04Ad0879785B4f678A4Fcace12AAf",
    "contractAddress": "0x6274E3854def0bac87cb96702C1C212D1b0E8fE2",
    "transactionIndex": 2,
    "gasUsed": "353434",
    "logsBloom": "0x
    "blockHash": "0x000030db00000ba92339b2d2a3f613f4239e66c6c47ad6865581390111faa267",
    "transactionHash": "0xd57810427a47ae7ae158331277e5c1f4c0f487e766864b90ddd9acd1e489f411",
    "logs": [],
    "blockNumber": 7816928,
    "cumulativeGasUsed": "666341",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "d76955b96e4502c0e12741bcb7a48851",
  "metadata": "{\"compiler\":{\"version\":\"0.7.3+commit.9bfce1f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockCoinbase\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"coinbase\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"difficulty\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockGasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gaslimit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Michael Elliot <mike@makerdao.com>Joshua Levine <joshua@makerdao.com>Nick Johnson <arachnid@notdot.net>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Multicall - Aggregate results from multiple read-only function calls\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/multicall/Multicall.sol\":\"Multicall\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"src/multicall/Multicall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.5.0;\\npragma experimental ABIEncoderV2;\\n\\n/// @title Multicall - Aggregate results from multiple read-only function calls\\n/// @author Michael Elliot <mike@makerdao.com>\\n/// @author Joshua Levine <joshua@makerdao.com>\\n/// @author Nick Johnson <arachnid@notdot.net>\\n\\ncontract Multicall {\\n    struct Call {\\n        address target;\\n        bytes callData;\\n    }\\n    function aggregate(Call[] memory calls) public returns (uint256 blockNumber, bytes[] memory returnData) {\\n        blockNumber = block.number;\\n        returnData = new bytes[](calls.length);\\n        for(uint256 i = 0; i < calls.length; i++) {\\n            (bool success, bytes memory ret) = calls[i].target.call(calls[i].callData);\\n            require(success);\\n            returnData[i] = ret;\\n        }\\n    }\\n    // Helper functions\\n    function getEthBalance(address addr) public view returns (uint256 balance) {\\n        balance = addr.balance;\\n    }\\n    function getBlockHash(uint256 blockNumber) public view returns (bytes32 blockHash) {\\n        blockHash = blockhash(blockNumber);\\n    }\\n    function getLastBlockHash() public view returns (bytes32 blockHash) {\\n        blockHash = blockhash(block.number - 1);\\n    }\\n    function getCurrentBlockTimestamp() public view returns (uint256 timestamp) {\\n        timestamp = block.timestamp;\\n    }\\n    function getCurrentBlockDifficulty() public view returns (uint256 difficulty) {\\n        difficulty = block.difficulty;\\n    }\\n    function getCurrentBlockGasLimit() public view returns (uint256 gaslimit) {\\n        gaslimit = block.gaslimit;\\n    }\\n    function getCurrentBlockCoinbase() public view returns (address coinbase) {\\n        coinbase = block.coinbase;\\n    }\\n}\",\"keccak256\":\"0xf696df525fef485bcce1faab83ad9b0093c712c6b6a557df745510488f7dede0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061056e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806372425d9d1161005b57806372425d9d146100e757806386d516e8146100ef578063a8b0574e146100f7578063ee82ac5e1461010c57610088565b80630f28c97d1461008d578063252dba42146100ab57806327e86d6e146100cc5780634d2301cc146100d4575b600080fd5b61009561011f565b6040516100a2919061045b565b60405180910390f35b6100be6100b93660046102d0565b610123565b6040516100a2929190610464565b610095610253565b6100956100e23660046102af565b61025c565b610095610276565b61009561027a565b6100ff61027e565b6040516100a2919061043a565b61009561011a366004610406565b610282565b4290565b8051439060609067ffffffffffffffff8111801561014057600080fd5b5060405190808252806020026020018201604052801561017457816020015b606081526020019060019003908161015f5790505b50905060005b835181101561024d576000606085838151811061019357fe5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff168684815181106101c157fe5b6020026020010151602001516040516101da919061041e565b6000604051808303816000865af19150503d8060008114610217576040519150601f19603f3d011682016040523d82523d6000602084013e61021c565b606091505b50915091508161022b57600080fd5b8084848151811061023857fe5b6020908102919091010152505060010161017a565b50915091565b60001943014090565b73ffffffffffffffffffffffffffffffffffffffff163190565b4490565b4590565b4190565b4090565b803573ffffffffffffffffffffffffffffffffffffffff811681146102aa57600080fd5b919050565b6000602082840312156102c0578081fd5b6102c982610286565b9392505050565b600060208083850312156102e2578182fd5b67ffffffffffffffff80843511156102f8578283fd5b8335840185601f82011261030a578384fd5b80358281111561031657fe5b61032384858302016104e4565b81815284810190838601875b848110156103f75781358601601f196040828e038201121561034f578a8bfd5b604051604081018181108b8211171561036457fe5b604052610372838c01610286565b815260408301358a811115610385578c8dfd5b8084019350508d603f840112610399578b8cfd5b8a8301358a8111156103a757fe5b6103b78c84601f840116016104e4565b92508083528e60408286010111156103cd578c8dfd5b80604085018d85013782018b018c9052808b0191909152855250928701929087019060010161032f565b50909998505050505050505050565b600060208284031215610417578081fd5b5035919050565b60008251610430818460208701610508565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b90815260200190565b600060408201848352602060408185015281855180845260608601915060608382028701019350828701855b828110156104d657878603605f19018452815180518088526104b781888a01898501610508565b601f01601f191696909601850195509284019290840190600101610490565b509398975050505050505050565b60405181810167ffffffffffffffff8111828210171561050057fe5b604052919050565b60005b8381101561052357818101518382015260200161050b565b83811115610532576000848401525b5050505056fea26469706673582212206160a9f5e58612cc025a25b13b02ceb27523949d19ee97645d21b9a7817f1c6164736f6c63430007030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c806372425d9d1161005b57806372425d9d146100e757806386d516e8146100ef578063a8b0574e146100f7578063ee82ac5e1461010c57610088565b80630f28c97d1461008d578063252dba42146100ab57806327e86d6e146100cc5780634d2301cc146100d4575b600080fd5b61009561011f565b6040516100a2919061045b565b60405180910390f35b6100be6100b93660046102d0565b610123565b6040516100a2929190610464565b610095610253565b6100956100e23660046102af565b61025c565b610095610276565b61009561027a565b6100ff61027e565b6040516100a2919061043a565b61009561011a366004610406565b610282565b4290565b8051439060609067ffffffffffffffff8111801561014057600080fd5b5060405190808252806020026020018201604052801561017457816020015b606081526020019060019003908161015f5790505b50905060005b835181101561024d576000606085838151811061019357fe5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff168684815181106101c157fe5b6020026020010151602001516040516101da919061041e565b6000604051808303816000865af19150503d8060008114610217576040519150601f19603f3d011682016040523d82523d6000602084013e61021c565b606091505b50915091508161022b57600080fd5b8084848151811061023857fe5b6020908102919091010152505060010161017a565b50915091565b60001943014090565b73ffffffffffffffffffffffffffffffffffffffff163190565b4490565b4590565b4190565b4090565b803573ffffffffffffffffffffffffffffffffffffffff811681146102aa57600080fd5b919050565b6000602082840312156102c0578081fd5b6102c982610286565b9392505050565b600060208083850312156102e2578182fd5b67ffffffffffffffff80843511156102f8578283fd5b8335840185601f82011261030a578384fd5b80358281111561031657fe5b61032384858302016104e4565b81815284810190838601875b848110156103f75781358601601f196040828e038201121561034f578a8bfd5b604051604081018181108b8211171561036457fe5b604052610372838c01610286565b815260408301358a811115610385578c8dfd5b8084019350508d603f840112610399578b8cfd5b8a8301358a8111156103a757fe5b6103b78c84601f840116016104e4565b92508083528e60408286010111156103cd578c8dfd5b80604085018d85013782018b018c9052808b0191909152855250928701929087019060010161032f565b50909998505050505050505050565b600060208284031215610417578081fd5b5035919050565b60008251610430818460208701610508565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b90815260200190565b600060408201848352602060408185015281855180845260608601915060608382028701019350828701855b828110156104d657878603605f19018452815180518088526104b781888a01898501610508565b601f01601f191696909601850195509284019290840190600101610490565b509398975050505050505050565b60405181810167ffffffffffffffff8111828210171561050057fe5b604052919050565b60005b8381101561052357818101518382015260200161050b565b83811115610532576000848401525b5050505056fea26469706673582212206160a9f5e58612cc025a25b13b02ceb27523949d19ee97645d21b9a7817f1c6164736f6c63430007030033",
  "libraries": {
    "GovernanceLib": "0xfEbf82b4c4819f7ded1e0fF361c183381d1990Ea",
    "Strings": "0x2b5E12feB40530f028cE81c0B04F9B7804F3bD8B",
    "SafeMath": "0xf88a49ac5FFC67cA94a1235A44F4F366eb0c77f0",
    "AddressSet": "0xc400Df1a9cB78148de8c145100D1e4E40f4a5142",
    "UInt256Set": "0xD208031f5dc5134A58cA550a14637461A0e7A469",
    "Create2": "0x9eb74D584F4500E35643463d17e0f96878bcD970",
    "ProposalsLib": "0x2f92371a46118423d267AECB352f52E773B21B5d",
    "ComplexPoolLib": "0x988d5537f746daE83838d13F3fe875030e3F3fE7",
    "WrappedTokenLib": "0xe967bb5871CC517F2941A41D114cbC5fC35C96D3",
    "Unigem20Library": "0x47dC7a56d15D6E6E8F0C5c2daD0ad2D2D1ba415D"
  },
  "devdoc": {
    "author": "Michael Elliot <mike@makerdao.com>Joshua Levine <joshua@makerdao.com>Nick Johnson <arachnid@notdot.net>",
    "kind": "dev",
    "methods": {},
    "title": "Multicall - Aggregate results from multiple read-only function calls",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}